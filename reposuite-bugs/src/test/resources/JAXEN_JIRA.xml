<!--
RSS generated by JIRA (4.1.2#531) at Sun Nov 07 05:22:52 CST 2010

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
http://jira.codehaus.org/sr/jira.issueviews:searchrequest-xml/temp/SearchRequest.xml?jqlQuery=project+%3D+JAXEN&tempMax=1000&field=key&field=summary
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="http://jira.codehaus.org/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>jira.codehaus.org</title>
        <link>http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+JAXEN</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="205" total="205"/>
                <build-info>
            <version>4.1.2</version>
            <build-number>531</build-number>
            <build-date>07-06-2010</build-date>
            <edition>enterprise</edition>
        </build-info>
<item>
            <title>[JAXEN-210] Jaxen does not cope well with numeric types other than Double</title>
                <link>http://jira.codehaus.org/browse/JAXEN-210</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I use JAXEN to evaluate the following boolean expression: &quot;$var1=$var1&quot;. var1 is of type Long (or Integer). JAXEN evaluates the expression as false. If I use variables of type Double, it works correctly.&lt;/p&gt;</description>
                <environment></environment>
            <key id="117460">JAXEN-210</key>
            <summary>Jaxen does not cope well with numeric types other than Double</summary>
                <type id="5" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Wish</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="akoledzhikov">Alexander Koledzhikov</reporter>
                        <created>Fri, 5 Nov 2010 08:24:16 -0500</created>
                <updated>Fri, 5 Nov 2010 08:24:16 -0500</updated>
                                                                    <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>akoledzhikov</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-209] Inclusion of org.w3c.dom.UserDataHandler causes Axis2 failure in WebSphere</title>
                <link>http://jira.codehaus.org/browse/JAXEN-209</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;We are trying to use Axis2 on WebSphere V7, which uses jaxen (1.1.1 in this case) and it appears that the inclusion of class org.w3c.dom.UserDataHandler in the jaxen jar (including 1.1.3) conflicts with WebSphere&apos;s xml.jar (see stack trace following).  Based on the comments in &lt;a href=&quot;http://jira.codehaus.org/browse/GROOVY-2303&quot; title=&quot;Upgrading to Groovy 1.1 final snapshot causes LinkageError in Grails&quot;&gt;&lt;del&gt;GROOVY-2303&lt;/del&gt;&lt;/a&gt; it looks like the decision was made to include this class for JDK 1.4 compatibility in the hopes there would not be ramifications.  Can this decision be revisited?  Unfortunately I don&apos;t know what the impacts might be elsewhere of removing this class; but, in the case of WebLogic and NetWeaver there&apos;s no issue either way.  WebSphere V7 requires the class loader policy: &quot;... to be set to &apos;Classes loaded with local class loader first (parent last)&apos;.&quot; (&lt;a href=&quot;http://www.ibm.com/developerworks/websphere/library/techarticles/1001_thaker/1001_thaker.html&quot;&gt;http://www.ibm.com/developerworks/websphere/library/techarticles/1001_thaker/1001_thaker.html&lt;/a&gt;)&lt;/p&gt;


&lt;p&gt;2010-09-10 18:24:44,855 &lt;span class=&quot;error&quot;&gt;&amp;#91;WebContainer : 0&amp;#93;&lt;/span&gt; ERROR org.apache.axis2.engine.AxisEngine  - Web Service request message could not be processed.&lt;br/&gt;
org.apache.axis2.AxisFault: Web Service request message could not be processed.&lt;br/&gt;
        at curam.util.connectors.axis2.CuramMessageReceiver.invokeBusinessLogic(CuramMessageReceiver.java:100)&lt;br/&gt;
        at curam.util.connectors.axis2.CuramXmlDocMessageReceiver.invokeBusinessLogic(CuramXmlDocMessageReceiver.java:140)&lt;br/&gt;
        at org.apache.axis2.receivers.AbstractInOutMessageReceiver.invokeBusinessLogic(AbstractInOutMessageReceiver.java:40)&lt;br/&gt;
        at org.apache.axis2.receivers.AbstractMessageReceiver.receive(AbstractMessageReceiver.java:114)&lt;br/&gt;
        at org.apache.axis2.engine.AxisEngine.receive(AxisEngine.java:173)&lt;br/&gt;
        at org.apache.axis2.transport.http.HTTPTransportUtils.processHTTPPostRequest(HTTPTransportUtils.java:167)&lt;br/&gt;
        at org.apache.axis2.transport.http.AxisServlet.doPost(AxisServlet.java:142)&lt;br/&gt;
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:738)&lt;br/&gt;
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:831)&lt;br/&gt;
        at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1655)&lt;br/&gt;
        at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:937)&lt;br/&gt;
        at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:500)&lt;br/&gt;
        at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)&lt;br/&gt;
        at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:91)&lt;br/&gt;
        at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:864)&lt;br/&gt;
        at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1583)&lt;br/&gt;
        at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:186)&lt;br/&gt;
        at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:455)&lt;br/&gt;
        at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewInformation(HttpInboundLink.java:384)&lt;br/&gt;
        at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:272)&lt;br/&gt;
        at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)&lt;br/&gt;
        at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)&lt;br/&gt;
        at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:165)&lt;br/&gt;
        at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)&lt;br/&gt;
        at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)&lt;br/&gt;
        at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)&lt;br/&gt;
        at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)&lt;br/&gt;
        at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)&lt;br/&gt;
        at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)&lt;br/&gt;
        at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1550)&lt;br/&gt;
Caused by: org.apache.axis2.AxisFault: Web Service request message could not be processed.&lt;br/&gt;
        at curam.util.connectors.axis2.CuramXmlDocMessageReceiver.superInvokeBusinessLogic(CuramXmlDocMessageReceiver.java:101)&lt;br/&gt;
        at curam.util.connectors.axis2.MessageDoAs.run(MessageDoAs.java:109)&lt;br/&gt;
        at java.security.AccessController.doPrivileged(AccessController.java:224)&lt;br/&gt;
        at javax.security.auth.Subject.doAs(Subject.java:495)&lt;br/&gt;
        at com.ibm.websphere.security.auth.WSSubject.doAs(WSSubject.java:131)&lt;br/&gt;
        at com.ibm.websphere.security.auth.WSSubject.doAs(WSSubject.java:89)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:600)&lt;br/&gt;
        at curam.util.connectors.axis2.CuramMessageReceiver.invokeBusinessLogic(CuramMessageReceiver.java:94)&lt;br/&gt;
        ... 29 more&lt;br/&gt;
Caused by: java.lang.reflect.InvocationTargetException&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:600)&lt;br/&gt;
        at curam.util.connectors.axis2.CuramXmlDocMessageReceiver.superInvokeBusinessLogic(CuramXmlDocMessageReceiver.java:95)&lt;br/&gt;
        ... 39 more&lt;br/&gt;
Caused by: java.rmi.ServerError: Error occurred in server thread; nested exception is: &lt;br/&gt;
        java.lang.LinkageError: loading constraint violation: loader &quot;com/ibm/ws/classloader/CompoundClassLoader@59165916&quot; previously initiated loading for a different type with name &quot;org/w3c/dom/UserDataHandler&quot; defined by loader &quot;com/ibm/oti/vm/BootstrapClassLoader@2a472a47&quot;&lt;br/&gt;
        at com.ibm.CORBA.iiop.UtilDelegateImpl.wrapException(UtilDelegateImpl.java:747)&lt;br/&gt;
        at javax.rmi.CORBA.Util.wrapException(Util.java:296)&lt;br/&gt;
        at curam.util.testmodel.remote._RampartEncrypt_Stub.simpleXML(_RampartEncrypt_Stub.java:288)&lt;br/&gt;
        ... 44 more&lt;/p&gt;</description>
                <environment>Windows XP Professional SP2 (and others)</environment>
            <key id="116830">JAXEN-209</key>
            <summary>Inclusion of org.w3c.dom.UserDataHandler causes Axis2 failure in WebSphere</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="wwalsh">William Walsh</reporter>
                        <created>Fri, 22 Oct 2010 13:22:04 -0500</created>
                <updated>Fri, 22 Oct 2010 13:22:04 -0500</updated>
                                    <version>1.1.3</version>
                                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>wwalsh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-208] Implicit casting of a Text node to a numeric value leads to incorrect predicate comparisons.</title>
                <link>http://jira.codehaus.org/browse/JAXEN-208</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;If I use Jaxen to evaluate an XPath predicate and that predicate requires a text node to be implicitly cast to a numeric value, the results of the predicate are not what I expect.  If, however, I do the cast &lt;b&gt;explicitly&lt;/b&gt;, then I do get the expected results.&lt;/p&gt;

&lt;p&gt;As an example, assume I have the following input data:&lt;/p&gt;

&lt;p&gt;  &amp;lt;geo_data xmlns:geo=&quot;http://www.w3.org/2003/01/geo/wgs84_pos#&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;loc id=&quot;1&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;geo:long&amp;gt;-122.424761&amp;lt;/geo:long&amp;gt;&lt;br/&gt;
      &amp;lt;geo:lat&amp;gt;37.776694&amp;lt;/geo:lat&amp;gt;&lt;br/&gt;
    &amp;lt;/loc&amp;gt;&lt;br/&gt;
    &amp;lt;loc id=&quot;2&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;geo:long&amp;gt;-122.539001465&amp;lt;/geo:long&amp;gt;&lt;br/&gt;
      &amp;lt;geo:lat&amp;gt;37.9743995667&amp;lt;/geo:lat&amp;gt;&lt;br/&gt;
    &amp;lt;/loc&amp;gt;&lt;br/&gt;
    &amp;lt;loc id=&quot;3&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;geo:long&amp;gt;-122.42099762&amp;lt;/geo:long&amp;gt;&lt;br/&gt;
      &amp;lt;geo:lat&amp;gt;37.7573013306&amp;lt;/geo:lat&amp;gt;&lt;br/&gt;
    &amp;lt;/loc&amp;gt;&lt;br/&gt;
    &amp;lt;loc id=&quot;4&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;geo:long&amp;gt;-122.427001953&amp;lt;/geo:long&amp;gt;&lt;br/&gt;
      &amp;lt;geo:lat&amp;gt;37.7430992126&amp;lt;/geo:lat&amp;gt;&lt;br/&gt;
    &amp;lt;/loc&amp;gt;&lt;br/&gt;
    &amp;lt;loc id=&quot;5&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;geo:long&amp;gt;-122.419998169&amp;lt;/geo:long&amp;gt;&lt;br/&gt;
      &amp;lt;geo:lat&amp;gt;37.7448005676&amp;lt;/geo:lat&amp;gt;&lt;br/&gt;
    &amp;lt;/loc&amp;gt;&lt;br/&gt;
  &amp;lt;/geo_data&amp;gt;&lt;/p&gt;

&lt;p&gt;If I try to run the following XPath expression, I get zero results:&lt;/p&gt;

&lt;p&gt;  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= 37.75)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;But I &lt;b&gt;expect&lt;/b&gt; to get 3 results.  And indeed, if I specify an explicit cast of the text() node to numeric, that&apos;s exactly what I get:&lt;/p&gt;

&lt;p&gt;  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(number(text()) &amp;gt;= 37.75)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I skimmed through the XPath spec and tried out a bunch of different expressions, and based on the results, my guess (and it&apos;s only a guess) is that Jaxen has a bug where implicit casting of a Text node to a numeric value incorrectly uses the &quot;toString()&quot; value from the Text node (ex. &quot;#text: 37.7448005676&quot;), which leads to a result that is NaN.&lt;/p&gt;

&lt;p&gt;I (perhaps erroneously) came to the above guess based on the following observations.&lt;/p&gt;

&lt;p&gt;=================================&lt;br/&gt;
Sample Expressions &amp;amp; Observations&lt;br/&gt;
=================================&lt;/p&gt;

&lt;p&gt;Observation 1:&lt;br/&gt;
--------------&lt;/p&gt;

&lt;p&gt;  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= &amp;#39;37.75&amp;#39;)&amp;#93;&lt;/span&gt;          ==&amp;gt; 0 results&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= 37.75)&amp;#93;&lt;/span&gt;            ==&amp;gt; 0 results&lt;/p&gt;

&lt;p&gt;From this it is clear that specifying the literal without quotes doesn&apos;t change the results; in either case Jaxen returns 0 results.&lt;/p&gt;

&lt;p&gt;Observation 2:&lt;br/&gt;
--------------&lt;/p&gt;

&lt;p&gt;  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= &amp;#39;37.7430992126&amp;#39;)&amp;#93;&lt;/span&gt;  ==&amp;gt; 0 results&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= 37.7430992126)&amp;#93;&lt;/span&gt;    ==&amp;gt; 0 results&lt;/p&gt;

&lt;p&gt;Using a precise number with the same number of decimal digits as the text() node does not change the results.  So this does &lt;b&gt;not&lt;/b&gt; appear to be an issue of string padding.&lt;/p&gt;

&lt;p&gt;Observation 3:&lt;br/&gt;
--------------&lt;/p&gt;

&lt;p&gt;  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text()  = &amp;#39;37.7430992126&amp;#39;)&amp;#93;&lt;/span&gt;  ==&amp;gt; 1 result&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text()  = 37.7430992126)&amp;#93;&lt;/span&gt;    ==&amp;gt; 0 results&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() != &amp;#39;37.7430992126&amp;#39;)&amp;#93;&lt;/span&gt;  ==&amp;gt; 4 results&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() != 37.7430992126)&amp;#93;&lt;/span&gt;    ==&amp;gt; 5 results&lt;/p&gt;

&lt;p&gt;Doing EQUALS or NOT EQUALS instead of GREATER-THAN-OR-EQUALS &lt;b&gt;does&lt;/b&gt; make a difference.  Jaxen appears to do different things when we have &quot;=, &lt;span class=&quot;error&quot;&gt;Unable to render embedded object: File (=&amp;quot; verses when we have &amp;quot;&amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=&amp;quot;.  When using &amp;quot;=&amp;quot; or &amp;quot;) not found.&lt;/span&gt;=&quot; we get the expected results if the literal is a string, but we get unexpected results when the literal is a number.&lt;/p&gt;

&lt;p&gt;Observation 4:&lt;br/&gt;
--------------&lt;/p&gt;

&lt;p&gt;  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;number(text()) &amp;gt;= &amp;#39;37.75&amp;#39;&amp;#93;&lt;/span&gt;           ==&amp;gt; 3 results&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;number(text()) &amp;gt;= 37.75&amp;#93;&lt;/span&gt;             ==&amp;gt; 3 results&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;number(text())  = &amp;#39;37.7430992126&amp;#39;&amp;#93;&lt;/span&gt;   ==&amp;gt; 1 result&lt;br/&gt;
  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;number(text())  = 37.7430992126&amp;#93;&lt;/span&gt;     ==&amp;gt; 1 result&lt;/p&gt;

&lt;p&gt;Using the &quot;number()&quot; function on the text node gives us the expected results.  This is true &lt;b&gt;regardless&lt;/b&gt; of whether the literal is a string or a number.&lt;/p&gt;

&lt;p&gt;Observation 5:&lt;br/&gt;
--------------&lt;/p&gt;

&lt;p&gt;In section 3.4 of the XPath 1.0 specification (&lt;a href=&quot;http://www.w3.org/TR/xpath&quot;&gt;http://www.w3.org/TR/xpath&lt;/a&gt;) an explanation of comparison operator behavior is given.  The behavior depends on two primary factors:&lt;/p&gt;

&lt;p&gt;  a) Whether or not the operands are &quot;node-sets&quot;.&lt;br/&gt;
  b) Whether the operator is &quot;=, !=&quot;, or whether it is &quot;&amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=&quot;.&lt;/p&gt;

&lt;p&gt;Factor &quot;b&quot; has a direct correlation with observation #3: i.e. the behavior of Jaxen changes depending on whether we are using &quot;=, !=&quot; verses &quot;&amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=&quot;.&lt;/p&gt;

&lt;p&gt;Factor &quot;a&quot; has a direct correlation with observation #4: i.e. the behavior of Jaxen changes depending on whether we have a &quot;node-set&quot; (that is, &quot;text()&quot;) verses an atomic value (&quot;number(text())&quot;).&lt;/p&gt;

&lt;p&gt;==============&lt;br/&gt;
XPath Snippets&lt;br/&gt;
==============&lt;/p&gt;

&lt;p&gt;  R1: &quot;If one object to be compared is a node-set and the other is a number, then the comparison will be true if and only if there is a node in the node-set such that the result of performing the comparison on the number to be compared and on the result of converting the string-value of that node to a number using the number function is true. If one object to be compared is a node-set and the other is a string, then the comparison will be true if and only if there is a node in the node-set such that the result of performing the comparison on the string-value of the node and the other string is true.&quot;&lt;/p&gt;

&lt;p&gt;  R2: &quot;When neither object to be compared is a node-set and the operator is = or !=, then the objects are compared by converting them to a common type as follows and then comparing them. &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; if at least one object to be compared is a number, then each object to be compared is converted to a number as if by applying the number function. Otherwise, both objects to be compared are converted to strings as if by applying the string function.&quot;&lt;/p&gt;

&lt;p&gt;  R3: &quot;When neither object to be compared is a node-set and the operator is &amp;lt;=, &amp;lt;, &amp;gt;= or &amp;gt;, then the objects are compared by converting both objects to numbers and comparing the numbers according to IEEE 754.&quot;&lt;/p&gt;

&lt;p&gt;============================&lt;br/&gt;
Assumptions and Explanations&lt;br/&gt;
============================&lt;/p&gt;

&lt;p&gt;IF we *&lt;b&gt;ASSUME&lt;/b&gt;* that:&lt;/p&gt;

&lt;p&gt;  a) Jaxen takes a Text node, which constitutes a node-set, and&lt;br/&gt;
     turns it into a string or a numeric value, which is no longer&lt;br/&gt;
     a node-set, as part of R1 processing.  Then it passes that&lt;br/&gt;
     value down to R2 or R3, along with the literal on the right&lt;br/&gt;
     side of the comparison; AND&lt;/p&gt;

&lt;p&gt;  b) Jaxen correctly converts string literals into numeric&lt;br/&gt;
     values; AND&lt;/p&gt;

&lt;p&gt;  c) Jaxen fails to correctly convert the Text node&apos;s string&lt;br/&gt;
     value into a number and instead produces something along&lt;br/&gt;
     the lines of an NaN,&lt;/p&gt;

&lt;p&gt;THEN all of the results for the expressions that I try become (mostly) explainable.  Here are the details.&lt;/p&gt;

&lt;p&gt;  Q1.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= &amp;#39;37.75&amp;#39;)&amp;#93;&lt;/span&gt;          ==&amp;gt; 0 results&lt;br/&gt;
  Q2.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= 37.75)&amp;#93;&lt;/span&gt;            ==&amp;gt; 0 results&lt;br/&gt;
  Q3.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= &amp;#39;37.7430992126&amp;#39;)&amp;#93;&lt;/span&gt;  ==&amp;gt; 0 results&lt;br/&gt;
  Q4.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= 37.7430992126)&amp;#93;&lt;/span&gt;    ==&amp;gt; 0 results&lt;/p&gt;

&lt;p&gt;For Q1 thru Q4, R1 dicates that we get a string value from the text node; then R3 indicates that both operands should be converted to a number.  If attempts to convert the text node&apos;s string value into a numeric value returns NaN, the comparison will never return true, hence no results.&lt;/p&gt;

&lt;p&gt;  Q5.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text()  = 37.7430992126)&amp;#93;&lt;/span&gt;    ==&amp;gt; 0 results&lt;br/&gt;
  Q6.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() != 37.7430992126)&amp;#93;&lt;/span&gt;    ==&amp;gt; 5 results&lt;/p&gt;

&lt;p&gt;For Q5 and Q6, R1 dictates that we get a numeric value from the text node.  If retrieval of the numeric value from the Text node returns NaN, then subsequent equality comparison with the numeric literal will never return true; but IN-equality comparison could perhaps return true because NaN is clearly not the same as a valid number...? (just guessing).&lt;/p&gt;

&lt;p&gt;  Q7.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text()  = &amp;#39;37.7430992126&amp;#39;)&amp;#93;&lt;/span&gt;  ==&amp;gt; 1 result&lt;br/&gt;
  Q8.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() != &amp;#39;37.7430992126&amp;#39;)&amp;#93;&lt;/span&gt;  ==&amp;gt; 4 results&lt;/p&gt;

&lt;p&gt;For Q7 and Q8, R1 dicates that we get a string value from the text node; then R2 indicates that both operands should be converted to a string--which they both already are.  So the comparison runs as a &lt;b&gt;string&lt;/b&gt; comparison and returns the expected results, because the text node string value was never converted to a numeric.&lt;/p&gt;

&lt;p&gt;  Q9.  //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;number(text()) &amp;gt;= &amp;#39;37.75&amp;#39;&amp;#93;&lt;/span&gt;           ==&amp;gt; 3 results&lt;br/&gt;
  Q10. //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;number(text()) &amp;gt;= 37.75&amp;#93;&lt;/span&gt;             ==&amp;gt; 3 results&lt;/p&gt;

&lt;p&gt;For Q9 and Q10, the number() function &lt;b&gt;correctly&lt;/b&gt; converts the text node&apos;s string value to a numeric value;  then since neither operand is a node-set R1 does NOT apply.  R3 dictates that all operands are converted to numeric, which is a no-op on the value returned from the number() function and which works correctly for the right-hand literals.  Thus the comparison returns correct results.&lt;/p&gt;

&lt;p&gt;So it all kind of makes a bit of sense if we assume that Jaxen is having problems with implicit conversion of the string value of a Text node returned by &quot;text()&quot; into a numeric value...&lt;/p&gt;

&lt;p&gt;But all of that said, I could simply be missing something key.  So if this is working as designed, then please excuse the noise...&lt;/p&gt;</description>
                <environment></environment>
            <key id="110919">JAXEN-208</key>
            <summary>Implicit casting of a Text node to a numeric value leads to incorrect predicate comparisons.</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="army">Army</reporter>
                        <created>Mon, 7 Jun 2010 17:35:10 -0500</created>
                <updated>Tue, 8 Jun 2010 10:45:20 -0500</updated>
                    <resolved>Tue, 8 Jun 2010 08:13:17 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1.3</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="224477" author="army" created="Mon, 7 Jun 2010 17:40:03 -0500"  >&lt;p&gt;Attaching a simple, standalone (not JUnit) repro for the reported issue.  I tried it against Jaxen 1.1.1 and Jaxen 1.1.2, but am seeing the same behavior in both releases.&lt;/p&gt;

&lt;p&gt;Extract the three files into a directory, then from within that directory...&lt;/p&gt;

&lt;p&gt;To compile:&lt;/p&gt;

&lt;p&gt;  javac -cp C:/Progs/jaxen-1.1.2/jaxen-1.1.2.jar JaxenXPCheck.java&lt;/p&gt;

&lt;p&gt;To run:&lt;/p&gt;

&lt;p&gt;  java -cp &quot;C:/Progs/jaxen-1.1.2/jaxen-1.1.2.jar;.&quot; JaxenXPCheck  &lt;span class=&quot;error&quot;&gt;&amp;#91;XPath expressions&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;XPath expressions can be specified as arguments using quoted values. If you do not specify any expressions, the repro will simply run two default expressions, where the only difference between the two is implicit vs. explicit casting. Ex.&lt;/p&gt;

&lt;p&gt;&amp;gt; java -cp &quot;C:/Progs/jaxen-1.1.2/jaxen-1.1.2.jar;.&quot; JaxenXPCheck&lt;/p&gt;

&lt;p&gt;Expr: //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(text() &amp;gt;= 37.75)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;  &lt;del&gt;=&lt;/del&gt;&amp;gt; Found list w/ 0 matching nodes.&lt;/p&gt;

&lt;p&gt;Expr: //geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;(number(text()) &amp;gt;= 37.75)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;  &lt;del&gt;=&lt;/del&gt;&amp;gt; Found list w/ 3 matching nodes.&lt;/p&gt;</comment>
                    <comment id="224548" author="elharo" created="Tue, 8 Jun 2010 06:54:29 -0500"  >&lt;p&gt;Thanks. This is a very good report. I&apos;ll look into it.&lt;/p&gt;

&lt;p&gt;The first thing to do is to verify that the two expressions should produce identical output. I&apos;ll check the specs and if I don&apos;t see anything clearly on point there, then I&apos;ll contrive an XSLT stylesheet so I can check the behavior against Xerces or libxslt. &lt;/p&gt;

&lt;p&gt;Per the spec, your expression is at least syntactically correct. Also, I see in section 3.5, &quot;The numeric operators convert their operands to numbers as if by calling the number  function.&quot; So the version with and without the explicit cast certainly should be equivalent. &lt;/p&gt;</comment>
                    <comment id="224550" author="elharo" created="Tue, 8 Jun 2010 07:03:52 -0500"  >&lt;p&gt;libxslt agrees with you. Let me try your unit test and see if there&apos;s an obvious solution. &lt;/p&gt;</comment>
                    <comment id="224551" author="elharo" created="Tue, 8 Jun 2010 07:25:24 -0500"  >&lt;p&gt;Here&apos;s a self-contained unit test that demonstrates the problem at a high level:&lt;/p&gt;


&lt;p&gt;    public void testJaxen208() &lt;br/&gt;
      throws JaxenException, ParserConfigurationException, SAXException, IOException {
        XPath implicitCast = new DOMXPath(&quot;//lat[(text() &amp;gt;= 37)]&quot;);
        XPath explicitCast = new DOMXPath(&quot;//lat[(number(text()) &amp;gt;= 37)]&quot;);
        DocumentBuilder builder = factory.newDocumentBuilder();
        ByteArrayInputStream in = new ByteArrayInputStream(&quot;&amp;lt;geo&amp;gt;&amp;lt;lat&amp;gt;39&amp;lt;/lat&amp;gt;&amp;lt;/geo&amp;gt;&quot;.getBytes(&quot;UTF-8&quot;));
        Document document = builder.parse(in);
        List result = explicitCast.selectNodes(document);
        assertEquals(1, result.size());
        result = implicitCast.selectNodes(document);
        assertEquals(1, result.size());
    }&lt;/p&gt;</comment>
                    <comment id="224553" author="elharo" created="Tue, 8 Jun 2010 07:35:02 -0500"  >&lt;p&gt;Wow. This is a weird one. It probably only occurs in DOM, and probably only with Xerces. Seems at some point Xerces uses a DeferredTextImpl for a Node instead of a String so in NumberFunction our instanceof tests miss it. &lt;/p&gt;</comment>
                    <comment id="224554" author="elharo" created="Tue, 8 Jun 2010 07:39:23 -0500"  >&lt;p&gt;I have a quick fix but it&apos;s ugly since it&apos;s pushes model specific code (i.e.e the DOM text interface) into model-independent code (NumberFunction.java). I&apos;m going to see if I can improve this.  &lt;/p&gt;</comment>
                    <comment id="224557" author="elharo" created="Tue, 8 Jun 2010 07:56:40 -0500"  >&lt;p&gt;OK. I have a better fix now. However this bug suggests there may be other area where we&apos;ve missed issues with implicit casts. e.g. if the node is a comment or processing instruction instead of a text. I&apos;m going to look at a few of those before closing.  &lt;/p&gt;</comment>
                    <comment id="224560" author="elharo" created="Tue, 8 Jun 2010 08:12:54 -0500"  >&lt;p&gt;Fix is in head now. I think this is significant enough of a bug to justify releasing 1.1.3. I&apos;ll try and push that out in the near future. &lt;/p&gt;</comment>
                    <comment id="224569" author="elharo" created="Tue, 8 Jun 2010 09:10:04 -0500"  >&lt;p&gt;FYI, I think you can change your XPath expression to the following and it should work with 1.1.2:&lt;/p&gt;

&lt;p&gt;//geo:lat&lt;span class=&quot;error&quot;&gt;&amp;#91;. &amp;gt;= 37.75&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;There&apos;s no actual need to use the text() node test here. Furthermore there are some edge cases where . &amp;gt;= &apos;37.75&apos; will work and text() &amp;gt;= &apos;37.75&apos; won&apos;t. (If there&apos;s a comment in the middle of the number, for example). &lt;/p&gt;
</comment>
                    <comment id="224589" author="army" created="Tue, 8 Jun 2010 10:45:20 -0500"  >&lt;p&gt;&amp;gt; Fix is in head now.&lt;/p&gt;

&lt;p&gt;Wow, thanks for picking this one up--and for providing a fix so quickly!&lt;/p&gt;

&lt;p&gt;&amp;gt; I think this is significant enough of a bug to justify&lt;br/&gt;
&amp;gt; releasing 1.1.3.&lt;/p&gt;

&lt;p&gt;Ok, that&apos;s great to hear.&lt;/p&gt;

&lt;p&gt;&amp;gt; I think you can change your XPath expression &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; and it&lt;br/&gt;
&amp;gt; should work with 1.1.2: &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; There&apos;s no actual need to use&lt;br/&gt;
&amp;gt; the text() node test here&lt;/p&gt;

&lt;p&gt;Good point, thanks for mentioning that.  I tried it out and confirmed that yes, this alternate expression does indeed return the results I expect.  This will definitely prove to be a useful workaround in the short term...&lt;/p&gt;

&lt;p&gt;Thank you very much, Elliotte, for your time and rapid response.  Your quick turn-around on this is greatly appreciated!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="49489" name="jaxen-208_repro.jar" size="2278" author="army" created="Mon, 7 Jun 2010 17:40:03 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                21 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>army</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-207] Lengthier expressions are getting truncated while creating DOMXPath object.</title>
                <link>http://jira.codehaus.org/browse/JAXEN-207</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;When we try to call new DOMXPath(expression) we are getting th following exception.&lt;/p&gt;

&lt;p&gt;org.jaxen.XPathSyntaxException: Expected: )&lt;/p&gt;

&lt;p&gt;the expression we are trying is :&lt;br/&gt;
---------------------------------------------------&lt;br/&gt;
contains($FinResp, &quot;NS_Payables_Associate&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Payables_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Payment_Processing&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Vendor_Maintenance&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_IB_Receivables_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_IB_Receivables_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Receivables_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Receivables_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Cash_Management_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Cost_Management&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Fixed_Assets_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Fixed_Asset_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_General_Ledger_Inquiry&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_General_Ledger_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_General_Ledger_Supervisor&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_IB_General_Ledger_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_IB_Oracle_Web_ADI&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Oracle_Web_ADI&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_CRM_Resource_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Distributor_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_OIC_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot; NS_Operations_Buyer&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Purchasing_Buyer&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Vendor_Maintenance&quot;) or &lt;br/&gt;
contains($InvResp, &quot;NS_Inventory_Super_User&quot;SL_Payables_Associate&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Payables_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Payables_Super_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Payment_Processing&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Vendor_Maintenance&quot;) or &lt;br/&gt;
contains($InvResp, &quot;SL_Inventory_Super_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Receivables_Supervisor&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Receivables_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Cost_Management_Inquiry&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Fixed_Asset_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Fixed_Assets_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_General_Ledger_Inquiry&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_General_Ledger_Supervisor&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_General_Ledger_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Oracle_Web_ADI&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Buyer&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Purchasing_Inquiry&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Payables_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Payables_Super_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Payment_Processing&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Vendor_Maintenance&quot;) or &lt;br/&gt;
contains($InvResp, &quot;SL_Inventory_Super_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Receivables_Supervisor&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Receivables_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;NS_Cost_Management_Inquiry&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Fixed_Asset_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Fixed_Assets_Manager&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_General_Ledger_Inquiry&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_General_Ledger_Supervisor&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_General_Ledger_User&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Oracle_Web_ADI&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Buyer&quot;) or &lt;br/&gt;
contains($FinResp, &quot;SL_Purchasing_Inquiry&quot;)&lt;/p&gt;

&lt;p&gt;---------------------------------------------------&lt;/p&gt;

&lt;p&gt;and it seems it is truncated.&lt;/p&gt;

&lt;p&gt;Thankjs,&lt;br/&gt;
Subba Reddy&lt;/p&gt;</description>
                <environment>Windows-xp SP2</environment>
            <key id="107687">JAXEN-207</key>
            <summary>Lengthier expressions are getting truncated while creating DOMXPath object.</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="1" iconUrl="http://jira.codehaus.org/images/icons/priority_blocker.gif">Blocker</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="6">Not A Bug</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="vsreddykalluri">KALLURI V SUBBA REDDY</reporter>
                        <created>Tue, 30 Mar 2010 05:38:58 -0500</created>
                <updated>Sun, 4 Apr 2010 08:51:25 -0500</updated>
                    <resolved>Sun, 4 Apr 2010 08:51:24 -0500</resolved>
                            <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="216037" author="vsreddykalluri" created="Tue, 30 Mar 2010 05:40:51 -0500"  >&lt;p&gt;We are currently using jaxen1.1-beta-8 but the issue is reproducible with Jaxen1.1.1 latest jars as well. &lt;/p&gt;

&lt;p&gt;The same expression works fine with Jaxen1.0FCS version as well as with the jaxen that is included in dom4j-full.jar version 1.3.&lt;/p&gt;

&lt;p&gt;Any help will be appreciated.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Subba Reddy.&lt;/p&gt;</comment>
                    <comment id="216042" author="elharo" created="Tue, 30 Mar 2010 06:57:52 -0500"  >&lt;p&gt;Weird. I&apos;ll try to look into this. I doubt it will make a difference but 1.1.2 is the latest version.&lt;/p&gt;

&lt;p&gt;Also, have you been able to use this expression with any other XPath engine? I don&apos;t see a missing right parenthesis in your expression, but it&apos;s so long it&apos;s hard to eyeball.&lt;/p&gt;

&lt;p&gt;Thanks for the report. &lt;/p&gt;</comment>
                    <comment id="216638" author="elharo" created="Sun, 4 Apr 2010 08:51:25 -0500"  >&lt;p&gt;There is a syntax error in your XPath expression in the line&lt;/p&gt;

&lt;p&gt;contains($InvResp, &quot;NS_Inventory_Super_User&quot;SL_Payables_Associate&quot;) or &lt;/p&gt;

&lt;p&gt;You have an extra quotation mark there. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                30 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>vsreddykalluri</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-206] bad order when context is a list of nodes at different depths</title>
                <link>http://jira.codehaus.org/browse/JAXEN-206</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;As described by Elliotte on the list:&lt;br/&gt;
Consider this:&lt;/p&gt;

&lt;p&gt;&amp;lt;z&amp;gt;&lt;br/&gt;
 &amp;lt;a&amp;gt;&lt;br/&gt;
   &amp;lt;b/&amp;gt;&lt;br/&gt;
 &amp;lt;/a&amp;gt;&lt;br/&gt;
 &amp;lt;c/&amp;gt;&lt;br/&gt;
&amp;lt;/z&amp;gt;&lt;/p&gt;

&lt;p&gt;Suppose the list includes b and c in document order. c&apos;s parent&lt;br/&gt;
precedes b&apos;s parent even though b precedes c&lt;/p&gt;

&lt;p&gt;When calling xpath.selectNodes(context) we can supply a list of nodes instead of a single node. By supplying a list containing b and c as described above, and selecting &quot;parent::*&quot;, we should get the list &lt;span class=&quot;error&quot;&gt;&amp;#91;z, a&amp;#93;&lt;/span&gt; returned. Instead we get &lt;span class=&quot;error&quot;&gt;&amp;#91;a, z&amp;#93;&lt;/span&gt;. The reason is that DefaultLocationPath does not sort the nodes into document order when there is only a single step in the location path.&lt;/p&gt;

&lt;p&gt;Patch attached, including test case.&lt;/p&gt;</description>
                <environment></environment>
            <key id="99638">JAXEN-206</key>
            <summary>bad order when context is a list of nodes at different depths</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 21 Oct 2009 06:26:00 -0500</created>
                <updated>Thu, 22 Oct 2009 06:28:53 -0500</updated>
                                    <version>1.1.3</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="195443" author="elharo" created="Wed, 21 Oct 2009 06:43:44 -0500"  >&lt;p&gt;I&apos;ll try and patch this in soon. Meanwhile, do you know who to talk to to get committer access back? I don&apos;t think I can do it.&lt;/p&gt;

&lt;p&gt;How bad is this? Will this only affect someone calling a more-or-less internal method in the API, or is it possible this could cause incorrect XPath evaluation on actual documents? &lt;/p&gt;</comment>
                    <comment id="195447" author="bazzargh" created="Wed, 21 Oct 2009 07:36:31 -0500"  >&lt;p&gt;Its not going to affect many people. I remember years ago someone asking on the list about passing in lists - they were using some non-xpath criteria to create the context. But while the example above will only affect people relying on jaxen&apos;s contract that it will return nodes in document order, its possible to turn this into an evaluation error for everyone:&lt;/p&gt;

&lt;p&gt;XPath xpath = new DOMXPath(&quot;local-name(parent::*)&quot;);&lt;br/&gt;
assertEquals(&quot;z&quot;, xpath.stringValueOf(context));&lt;/p&gt;</comment>
                    <comment id="195562" author="elharo" created="Thu, 22 Oct 2009 06:28:53 -0500"  >&lt;p&gt;I&apos;ve committed this patch and verified that I still have SVN access. Please verify that everything seems fine, and then close this bug. Thanks. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="45375" name="mismatch.patch" size="2149" author="bazzargh" created="Wed, 21 Oct 2009 06:26:00 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 2 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10170" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Patch Submitted</customfieldname>
                <customfieldvalues>
                        <customfieldvalue><![CDATA[Yes]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-205] Accidental subtree copy on the SVN trunk?</title>
                <link>http://jira.codehaus.org/browse/JAXEN-205</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In the SVN repository, one can see that the Jaxen sources are duplicated inside themselves on the trunk:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svn.codehaus.org/jaxen/trunk/jaxen/&quot;&gt;https://svn.codehaus.org/jaxen/trunk/jaxen/&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://svn.codehaus.org/jaxen/trunk/jaxen/jaxen/&quot;&gt;https://svn.codehaus.org/jaxen/trunk/jaxen/jaxen/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This doesn&apos;t look like an intentional SVN branch and doesn&apos;t seem to make any sense.&lt;/p&gt;

&lt;p&gt;If they are indeed accidental, I suggest deleting them as they make diffs between tags/branches and the trunk very cumbersome (not to speak about GIT repositories of other developers).&lt;/p&gt;</description>
                <environment></environment>
            <key id="99384">JAXEN-205</key>
            <summary>Accidental subtree copy on the SVN trunk?</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="olo">Aleksander Adamowski</reporter>
                        <created>Thu, 15 Oct 2009 05:58:43 -0500</created>
                <updated>Thu, 22 Oct 2009 13:27:23 -0500</updated>
                    <resolved>Thu, 22 Oct 2009 13:27:23 -0500</resolved>
                                            <fixVersion>1.1.3</fixVersion>
                                <component>Build</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="194880" author="bazzargh" created="Thu, 15 Oct 2009 11:43:29 -0500"  >&lt;p&gt;Looks like this happened accidentally in the creation of  r1340 &quot;V1_1_2_Final&quot;. I checked and there&apos;s no differences between the extra &apos;jaxen&apos; folder and its parent (other than the extra jaxen folder of course). So it can be safely deleted.&lt;/p&gt;</comment>
                    <comment id="195617" author="elharo" created="Thu, 22 Oct 2009 13:27:23 -0500"  >&lt;p&gt;I believe I have fixed this now.&lt;/p&gt;

&lt;p&gt;FYI, I used SVN from a computer where I have not installed my ssh keys using just my username and password, so foliks who think they&apos;re locked out may want to try again if they still remember their CVS credentials. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 2 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>olo</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-204] Project infrastructure: fix Mailman mailing lists</title>
                <link>http://jira.codehaus.org/browse/JAXEN-204</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;There are some problems with the project mailing lists:&lt;/p&gt;

&lt;p&gt;1) Links to mailing list archives (&lt;a href=&quot;http://jaxen.org/mail-lists.html&quot;&gt;http://jaxen.org/mail-lists.html&lt;/a&gt;) are dead - they lead to an expired domain (archive.jaxen.codehaus.org), so the user ends up on an ad-ridden domain auction page&lt;br/&gt;
2) Mail sent to the lists bounces:&lt;/p&gt;

&lt;p&gt; I&apos;ve subscribed to the mailing list and received a confirmation, but after that my posts get rejected because &quot;only subscribers may post&quot;:&lt;/p&gt;

&lt;p&gt;===============&lt;br/&gt;
Date: Mon, 12 Oct 2009 05:48:06 -0500&lt;br/&gt;
From: xircles@codehaus.org&lt;br/&gt;
Reply-To: dev-owner@jaxen.codehaus.org&lt;br/&gt;
To: aleksander.adamowski@olo.org.pl&lt;br/&gt;
Message-Id: &amp;lt;4ad30966cd6f0_66024af0b5a8c4@codehaus03.managed.contegix.com.tmail&amp;gt;&lt;br/&gt;
Subject: &lt;span class=&quot;error&quot;&gt;&amp;#91;Codehaus&amp;#93;&lt;/span&gt; Subscription confirmation for dev@jaxen.codehaus.org&lt;br/&gt;
Mime-Version: 1.0&lt;br/&gt;
Content-Type: multipart/alternative;&lt;br/&gt;
boundary=mimepart_4ad30966cf2c5_66024af0b5a9f6&lt;/p&gt;


&lt;p&gt;--mimepart_4ad30966cf2c5_66024af0b5a9f6&lt;br/&gt;
Content-Type: text/plain; charset=utf-8&lt;br/&gt;
Content-Transfer-Encoding: Quoted-printable&lt;br/&gt;
Content-Disposition: inline&lt;/p&gt;


&lt;p&gt;Hello aleksander.adamowski@olo.org.pl&lt;/p&gt;

&lt;p&gt;You have successfully subscribed to dev@jaxen.codehaus.org using this ema=&lt;br/&gt;
il address.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Codehaus Support&lt;/p&gt;


&lt;p&gt;Here&apos;s a later message that bounced:&lt;br/&gt;
===============&lt;br/&gt;
Message-Id: &amp;lt;4ad31c2e.9115f10a.4222.6654SMTPIN_ADDED@mx.google.com&amp;gt;&lt;br/&gt;
Received: (qmail 9502 invoked for bounce); 12 Oct 2009 12:08:10 -0000&lt;br/&gt;
Date: 12 Oct 2009 12:08:10 -0000&lt;br/&gt;
From: MAILER-DAEMON@mail.codehaus.org&lt;br/&gt;
To: aleksander.adamowski@olo.org.pl&lt;br/&gt;
Subject: failure notice&lt;/p&gt;

&lt;p&gt;Hi. This is the qmail-send program at mail.codehaus.org.&lt;br/&gt;
I&apos;m afraid I wasn&apos;t able to deliver your message to the following addresses.&lt;br/&gt;
This is a permanent error; I&apos;ve given up. Sorry it didn&apos;t work out.&lt;/p&gt;

&lt;p&gt;&amp;lt;dev@jaxen.codehaus.org&amp;gt;:&lt;br/&gt;
Sorry, only subscribers may post. If you are a subscriber, please&lt;br/&gt;
forward this message to dev-owner@jaxen.codehaus.org to get your new&lt;br/&gt;
address included. (#5.7.2)&lt;/p&gt;

&lt;p&gt;&amp;#8212; Below this line is a copy of the message.&lt;/p&gt;

&lt;p&gt;Return-Path: &amp;lt;aleksander.adamowski@olo.org.pl&amp;gt;&lt;br/&gt;
Received: (qmail 9434 invoked by uid 89); 12 Oct 2009 12:08:03 -0000&lt;br/&gt;
Received: from unknown (HELO mail-yw0-f198.google.com) (209.85.211.198)&lt;br/&gt;
 by mail.codehaus.org with SMTP; 12 Oct 2009 12:08:03 -0000&lt;br/&gt;
Received: by ywh36 with SMTP id 36so9185363ywh.15&lt;br/&gt;
       for &amp;lt;dev@jaxen.codehaus.org&amp;gt;; Mon, 12 Oct 2009 05:08:05 -0700 (PDT)&lt;br/&gt;
MIME-Version: 1.0&lt;br/&gt;
Received: by 10.91.160.25 with SMTP id m25mr1593245ago.91.1255349285198; Mon,&lt;br/&gt;
       12 Oct 2009 05:08:05 -0700 (PDT)&lt;br/&gt;
From: Aleksander Adamowski &amp;lt;aleksander.adamowski@olo.org.pl&amp;gt;&lt;br/&gt;
Date: Mon, 12 Oct 2009 14:07:45 +0200&lt;br/&gt;
Message-ID: &amp;lt;1c690d740910120507v5317970ieaf2a7703a1ef2f6@mail.gmail.com&amp;gt;&lt;br/&gt;
Subject: Jaxen project maintenance/development?&lt;br/&gt;
To: Jaxen Developers List &amp;lt;dev@jaxen.codehaus.org&amp;gt;&lt;br/&gt;
Content-Type: text/plain; charset=UTF-8&lt;/p&gt;</description>
                <environment></environment>
            <key id="99290">JAXEN-204</key>
            <summary>Project infrastructure: fix Mailman mailing lists</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="olo">Aleksander Adamowski</reporter>
                        <created>Tue, 13 Oct 2009 11:26:32 -0500</created>
                <updated>Wed, 14 Oct 2009 06:03:10 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="194674" author="elharo" created="Wed, 14 Oct 2009 06:03:10 -0500"  >&lt;p&gt;Weird since that&apos;s still a codehaus.org URL. Anyone know how to fix this? Should we escalate to codehaus? Bob?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 3 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>olo</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-200] XPath support for Jericho HTML parser</title>
                <link>http://jira.codehaus.org/browse/JAXEN-200</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I needed to build XPath support for Jericho locally, so I created custom implementations of Navigator and XPath to do this. I would like to contribute the code to the Jaxen project. I have attached the three java files (DocumentNavigator.java, JerichoXPath.java and a test JerichoNavigatorTest.java).&lt;/p&gt;

&lt;p&gt;The first two would go into the main directory as a sibling of jdom and dom4j packages and the last one would go into the test directory.&lt;/p&gt;

&lt;p&gt;Additional dependencies are jericho-html-2.5.jar, commons-logging.jar and log4j.jar (although the last two can be removed if you remove/replace the log.warn messages in the catch blocks in DocumentNavigator).&lt;/p&gt;</description>
                <environment>Any</environment>
            <key id="85550">JAXEN-200</key>
            <summary>XPath support for Jericho HTML parser</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="sujitpal">Sujit Pal</reporter>
                        <created>Tue, 21 Apr 2009 14:27:04 -0500</created>
                <updated>Fri, 24 Apr 2009 07:46:27 -0500</updated>
                    <resolved>Wed, 22 Apr 2009 08:16:45 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="173852" author="elharo" created="Wed, 22 Apr 2009 08:16:45 -0500"  >&lt;p&gt;Adding all the navigators directly into Jaxen was a mistake, and one we are hoping to cure in the near future. It causes significant problems for other projects that depend on jaxen because they then pull in dependencies on XOM, JDOM, dom4j, and so on that they usually don&apos;t need. This is especially true for maven based projects. Your proposal would, I&apos;m afraid, make the situation worse by adding additional dependencies to everyone who builds jaxen.&lt;/p&gt;

&lt;p&gt; I suspect we&apos;ll keep the DOM navigator in the core since it only really depends on the JDK these days, but we&apos;ll move the others into new projects.&lt;/p&gt;

&lt;p&gt;Once this move is complete, perhaps we could consider hosting your navigator as a subproject of jaxen on Codehaus or some such, but it really shouldn&apos;t be bundled with the core. &lt;/p&gt;</comment>
                    <comment id="174080" author="sujitpal" created="Thu, 23 Apr 2009 20:56:33 -0500"  >&lt;p&gt;Sure, that makes sense...if you want to go that route, would it make sense to have some documentation on how to build an adapter to work with a different object model?&lt;/p&gt;

&lt;p&gt;What helped me during building the Jericho adapter was the examples, and single stepping through the Jaxen code to see what I needed to override. The extension points are not very well defined, so its hard to figure out what to override and what not to. A programmatic way to handle this would be to make some of the overridable methods abstract rather than returning null or UnsupportedOperationException. Alternatively, a one page writeup explaining what methods are needed to be overriden would be a great help.&lt;/p&gt;

&lt;p&gt;Please let me know if you would like me to open a separate bug for this.&lt;/p&gt;</comment>
                    <comment id="174114" author="elharo" created="Fri, 24 Apr 2009 07:46:27 -0500"  >&lt;p&gt;We could certainly consider that. We&apos;d have to think about whether that&apos;s likely to break any existing navigators. I.e. are there any navigators that depend on these methods being implemented in the superclass? And of course more documentation is always appreciated. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="41510" name="DocumentNavigator.java" size="15264" author="sujitpal" created="Tue, 21 Apr 2009 14:27:04 -0500" />
                    <attachment id="41512" name="JerichoNavigatorTest.java" size="1926" author="sujitpal" created="Tue, 21 Apr 2009 14:27:04 -0500" />
                    <attachment id="41511" name="JerichoXPath.java" size="1557" author="sujitpal" created="Tue, 21 Apr 2009 14:27:04 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 28 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>sujitpal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10170" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Patch Submitted</customfieldname>
                <customfieldvalues>
                        <customfieldvalue><![CDATA[Yes]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-199] IncompatibleClassChangeError due to throws clauses not matching between JaxenHandler and XPathHandler</title>
                <link>http://jira.codehaus.org/browse/JAXEN-199</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Following exception occurs intermittently:&lt;/p&gt;

&lt;p&gt;Uncaught exception &lt;br/&gt;
java.lang.IncompatibleClassChangeError: Class org.jaxen.JaxenHandler does not &lt;br/&gt;
implement the requested interface org.jaxen.saxpath.XPathHandler &lt;br/&gt;
        at org.jaxen.saxpath.base.XPathReader.parse(XPathReader.java:98) &lt;/p&gt;

&lt;p&gt;The line is:&lt;/p&gt;

&lt;p&gt;        getXPathHandler().startXPath();&lt;br/&gt;
in XPathReader.parse.&lt;/p&gt;

&lt;p&gt;We have debugged a similar error in other code previously.  The error is caused by the throws clauses not matching between the implementation and the interface (JaxenHandler implementing XPathHandler).  In the particular call the startXPath method is defined by the interface to throw a SAXPathException and the implementation throws no exception.  It appears all of the methods in JaxenHandler are inconsistent either throwing nothing or throwing a JaxenException.&lt;br/&gt;
Even though this is an intermittant issue it should be corrected.  Once it appears there seems to be a tendency for the user to see it many times over.  The user has to restart their application before they can resume what they are working on.&lt;/p&gt;</description>
                <environment>Windows</environment>
            <key id="81930">JAXEN-199</key>
            <summary>IncompatibleClassChangeError due to throws clauses not matching between JaxenHandler and XPathHandler</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="afreese">Agnes Freese</reporter>
                        <created>Wed, 18 Feb 2009 20:27:39 -0600</created>
                <updated>Fri, 20 Feb 2009 04:41:47 -0600</updated>
                                    <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="166227" author="bazzargh" created="Thu, 19 Feb 2009 06:54:09 -0600"  >&lt;p&gt;That exception isn&apos;t caused by what you describe. If it was, you&apos;d see it all the time - its very common to have code like this. For example, look at ByteArrayInputStream&apos;s read methods versus the ones in InputStream. You might /appear/ to resolve the situation by adding the throws clause and recompiling, but more likely it was just the act of a fresh compile that fixed the bug.&lt;/p&gt;

&lt;p&gt;The exception is caused by loading incompatible versions of a class; in other words, a different version of jaxen, or one compiled with a different version of javac. You don&apos;t describe the specific environment in which you saw this problem, but I&apos;m 99% certain you&apos;re looking at an appserver which has more than one copy of jaxen (or saxpath) sitting around, and some lack of isolation in your classloaders is causing your grief.&lt;/p&gt;

&lt;p&gt;A common cause of this exception (for all kinds of code) used to be the work directory in tomcat needing cleaned out.&lt;/p&gt;</comment>
                    <comment id="166273" author="afreese" created="Thu, 19 Feb 2009 12:10:03 -0600"  >&lt;p&gt;We are absolutely, positively, 100% sure that this is the cause of the problem.  There is only one jaxen library in the classpath.  &lt;/p&gt;

&lt;p&gt;We have debugged the same problem within our internal code and once the throws clauses were fixed that issue has not been seen in over a year.  This is the reason for the exception.&lt;/p&gt;

&lt;p&gt;It may be that people have been coding in this way and it works..  most of the time.  But there appears to be some problem that comes up intermittently when the interface throws clause does not match the implementation.  It took us a long time to track the issue we had in our code down.&lt;/p&gt;

&lt;p&gt;If it is not fixed within the jaxen code we will have to fix it externally.  It absolutely is the probem.&lt;/p&gt;</comment>
                    <comment id="166284" author="bazzargh" created="Thu, 19 Feb 2009 13:17:43 -0600"  >&lt;p&gt;I&apos;m not convinced. That throws clause was removed after the tag V11_BETA_8. You will get this exception if you have a version of jaxen from before that tag with the current jaxen.&lt;/p&gt;

&lt;p&gt;Note that jaxen may not simply be called jaxen-VERSION.jar. Other xml libraries bundle jaxen /in their jar/. IIRC this has been the case in the past for dom4j and maybe xom (Elliotte, can you remember the details of this one?). I know that around the time of that tag, dom4j were discussing unbundling jaxen, which makes me suspicious that that is the culprit.&lt;/p&gt;</comment>
                    <comment id="166388" author="bazzargh" created="Fri, 20 Feb 2009 04:41:47 -0600"  >&lt;p&gt;A couple more suspects: findjar.com suggests that jaxen has been bundled in the pxe and groovy-soap projects as well.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 37 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>afreese</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-198] Correct BaseXPath.selectSingleNode documentation</title>
                <link>http://jira.codehaus.org/browse/JAXEN-198</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The javadoc for BaseXPath.selectSingleNode  claims the following:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;@return the node-set of all items selected&lt;/li&gt;
	&lt;li&gt;by this XPath expression&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It should be something like this:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;@return the first node selected by this XPath expression, or &amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; if no node is selected&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="79605">JAXEN-198</key>
            <summary>Correct BaseXPath.selectSingleNode documentation</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="nievergelt">Christoph Nievergelt</reporter>
                        <created>Fri, 9 Jan 2009 09:17:39 -0600</created>
                <updated>Fri, 9 Jan 2009 09:17:39 -0600</updated>
                                    <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 43 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>nievergelt</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-197] Integration tests never run</title>
                <link>http://jira.codehaus.org/browse/JAXEN-197</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In the course of fixing 195, I broke some of the integration tests listed im test/tests.xml that reference nitf.xml. We never noticed this because we don&apos;t seem to actually be running those tests. In particular, these variables from XPathTestBase are never accessed:&lt;/p&gt;

&lt;p&gt;    protected static String VAR_URI   = &quot;http://jaxen.org/test-harness/var&quot;;&lt;br/&gt;
    protected static String TESTS_XML = &quot;xml/test/tests.xml&quot;;&lt;/p&gt;

&lt;p&gt;We need to set up a test harness to automatically run these tests too. &lt;/p&gt;

&lt;p&gt;FYI, XOM is running these tests outside the Jaxen repository, which is how I noticed the problem. &lt;/p&gt;</description>
                <environment></environment>
            <key id="79273">JAXEN-197</key>
            <summary>Integration tests never run</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Fri, 2 Jan 2009 07:50:18 -0600</created>
                <updated>Fri, 2 Jan 2009 07:50:18 -0600</updated>
                                                                    <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 44 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-196] comparison of booleans and empty nodesets incorrect</title>
                <link>http://jira.codehaus.org/browse/JAXEN-196</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;For a document containing no &amp;lt;foo&amp;gt; elements, the expression &lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-comment&quot;&gt;//foo = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;()&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; incorrectly evaluates to false. Similiarly, the expression &lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-comment&quot;&gt;//foo != &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;()&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; also evaluates to false.&lt;/p&gt;

&lt;p&gt;The fault appears to lie in DefaultEqualityExpr, where evaluateSetSet() is returning false if &lt;b&gt;either&lt;/b&gt; argument is an empty nodeset.&lt;/p&gt;</description>
                <environment></environment>
            <key id="75150">JAXEN-196</key>
            <summary>comparison of booleans and empty nodesets incorrect</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="andrews">Andrew Sales</reporter>
                        <created>Thu, 16 Oct 2008 07:55:59 -0500</created>
                <updated>Mon, 20 Oct 2008 09:13:55 -0500</updated>
                                    <version>1.0</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="150987" author="andrews" created="Thu, 16 Oct 2008 08:03:04 -0500"  >&lt;p&gt;Correction: this affects version &lt;b&gt;1.1&lt;/b&gt;&lt;/p&gt;</comment>
                    <comment id="151017" author="elharo" created="Thu, 16 Oct 2008 10:20:16 -0500"  >&lt;p&gt;Thanks. I&apos;ll look it this in the next couple of days if no one else grabs it first. If you have time a complete test, would help; but if not no big deal. I think there&apos;s enough info here to reproduce the problem. &lt;/p&gt;</comment>
                    <comment id="151031" author="andrews" created="Thu, 16 Oct 2008 12:57:19 -0500"  >&lt;p&gt;Thanks - some tests now attached.&lt;/p&gt;</comment>
                    <comment id="151229" author="elharo" created="Sat, 18 Oct 2008 07:55:05 -0500"  >&lt;p&gt;For the record, do you agree to include these test in jaxen under the BSD license? &lt;/p&gt;</comment>
                    <comment id="151232" author="elharo" created="Sat, 18 Oct 2008 08:31:25 -0500"  >&lt;p&gt;I&apos;ve checked a fix into the head. We still need to check in the tests once we get permission.&lt;/p&gt;

&lt;p&gt;If someone can fix Jaxen-193, then I think it would be a good time for a point release.&lt;/p&gt;</comment>
                    <comment id="151361" author="andrews" created="Mon, 20 Oct 2008 09:13:55 -0500"  >&lt;p&gt;I&apos;m happy for the tests to be included under the BSD license.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="37571" name="NodesetEqualityTests.java" size="4518" author="andrews" created="Thu, 16 Oct 2008 12:57:19 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 2 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>andrews</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-195] nitf.xml is a copyright violation</title>
                <link>http://jira.codehaus.org/browse/JAXEN-195</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;As Janet Campbell from the Eclipse Foundation discovered, &quot;There has been some interest in using Jaxen 1.1 in Eclipse.  During the course of our review of the project, we found an article included in the distribution that is copyrighted to the Associated Press (jaxen_1_1/code/xml/nitf.xml) which appears to have a restriction on re-distribution.  Can you advise if you obtained the Associated Press&apos; permission to re-distribute the article?&quot;&lt;/p&gt;

&lt;p&gt;We have no such permission, and I believe this is a copyright violation. &lt;/p&gt;

&lt;p&gt;I have modified the head such that we are no longer using the AP&apos;s intellectual property in the tests.&lt;/p&gt;

&lt;p&gt;However someone now needs to go through all the old versions of this file and make sure they are removed, not merely marked as deleted but actively nuked from the source repositories. &lt;/p&gt;

&lt;p&gt;Luckily this file was merely test data, and did not get distributed by projects that merely bundled our jar file. However anyone who redistributed the source may have a problem here. &lt;/p&gt;

&lt;p&gt;In the future, please either get permission for any files you use in test data, or rewrite the files to remove the offending content while still exposing the problem. (As an added benefit, this usually creates a smaller test case that is easier to understand and debug and that runs faster.) &lt;/p&gt;</description>
                <environment>Sourceforge, Codehaus, and anyone else who&amp;#39;s rebundled Jaxen over the last six years</environment>
            <key id="70447">JAXEN-195</key>
            <summary>nitf.xml is a copyright violation</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 6 Jul 2008 17:04:42 -0500</created>
                <updated>Sun, 6 Jul 2008 17:04:42 -0500</updated>
                                    <version>1.0</version>
                <version>1.1</version>
                                <fixVersion>1.2</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 17 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-194] Invalid XPath expression errors</title>
                <link>http://jira.codehaus.org/browse/JAXEN-194</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I get &quot;Invalid XPath expression errors&quot; when I use the expressions: &lt;/p&gt;

&lt;p&gt;results = document.selectNodes(&quot;/books/book&lt;span class=&quot;error&quot;&gt;&amp;#91;(details/(price!=&amp;#39;100&amp;#39;))&amp;#93;&lt;/span&gt;&quot;);         or &lt;br/&gt;
results = document.selectNodes(&quot;/books/book&lt;span class=&quot;error&quot;&gt;&amp;#91;(details/not(price=&amp;#39;100&amp;#39;))&amp;#93;&lt;/span&gt;&quot;);&lt;/p&gt;

&lt;p&gt;But both expressions work OK when I use XMLSPY. &lt;/p&gt;



&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&amp;gt; &lt;br/&gt;
&amp;lt;books&amp;gt; &lt;br/&gt;
        &amp;lt;book isbn=&quot;11111111&quot;&amp;gt; &lt;br/&gt;
                &amp;lt;title&amp;gt;Das Silmarillion&amp;lt;/title&amp;gt; &lt;br/&gt;
                &amp;lt;details&amp;gt; &lt;br/&gt;
                        &amp;lt;price&amp;gt;100&amp;lt;/price&amp;gt; &lt;br/&gt;
                        &amp;lt;author&amp;gt;miller&amp;lt;/author&amp;gt; &lt;br/&gt;
                &amp;lt;/details&amp;gt; &lt;br/&gt;
        &amp;lt;/book&amp;gt; &lt;br/&gt;
        &amp;lt;book isbn=&quot;22222222&quot;&amp;gt; &lt;br/&gt;
                &amp;lt;title&amp;gt;Die Belgariad-Saga&amp;lt;/title&amp;gt; &lt;br/&gt;
                &amp;lt;details&amp;gt; &lt;br/&gt;
                        &amp;lt;price&amp;gt;200&amp;lt;/price&amp;gt; &lt;br/&gt;
                        &amp;lt;author&amp;gt;shaw&amp;lt;/author&amp;gt; &lt;br/&gt;
                &amp;lt;/details&amp;gt; &lt;br/&gt;
        &amp;lt;/book&amp;gt; &lt;br/&gt;
                &amp;lt;book isbn=&quot;33333333&quot;&amp;gt; &lt;br/&gt;
                &amp;lt;title&amp;gt;BookWithNoPrice&amp;lt;/title&amp;gt; &lt;br/&gt;
                &amp;lt;details&amp;gt; &lt;br/&gt;
                        &amp;lt;author&amp;gt;shaw&amp;lt;/author&amp;gt; &lt;br/&gt;
                &amp;lt;/details&amp;gt; &lt;br/&gt;
        &amp;lt;/book&amp;gt; &lt;br/&gt;
&amp;lt;/books&amp;gt; &lt;/p&gt;




&lt;p&gt;Regards Mario Mueller&lt;/p&gt;</description>
                <environment>Eclipse, Windows XP Professional SP2</environment>
            <key id="65376">JAXEN-194</key>
            <summary>Invalid XPath expression errors</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mariomueller">Mario Mueller</reporter>
                        <created>Mon, 31 Mar 2008 04:15:25 -0500</created>
                <updated>Mon, 31 Mar 2008 12:22:10 -0500</updated>
                    <resolved>Mon, 31 Mar 2008 09:48:27 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>dom4j</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="129203" author="mariomueller" created="Mon, 31 Mar 2008 04:18:51 -0500"  >&lt;p&gt;I use Jaxen 1.1.1&lt;/p&gt;</comment>
                    <comment id="129219" author="elharo" created="Mon, 31 Mar 2008 09:45:21 -0500"  >&lt;p&gt;I&apos;ll have to double check, but at first glance it looks like jaxen is right and XMLSpy is either wrong or using a different version of XPath (i.e. 2.0). The apparent mistake is here:&lt;/p&gt;

&lt;p&gt;details/(price!=&apos;100&apos;)&lt;/p&gt;

&lt;p&gt;A boolean such as price != &apos;100&apos; cannot be a child step of a location path. &lt;/p&gt;</comment>
                    <comment id="129220" author="elharo" created="Mon, 31 Mar 2008 09:48:27 -0500"  >&lt;p&gt;libxslt agrees with my surmise:&lt;/p&gt;

&lt;p&gt;$ xsltproc test.xsl &lt;a href=&quot;http://www.cafeaulait.org/&quot;&gt;http://www.cafeaulait.org/&lt;/a&gt;&lt;br/&gt;
XPath error : Invalid expression&lt;br/&gt;
(details/(price!=&apos;100&apos;))&lt;/p&gt;

&lt;p&gt;P.S. We need an &quot;invalid/not a bug&quot; option for bugs like this one in Jira.  &lt;/p&gt;</comment>
                    <comment id="129227" author="mariomueller" created="Mon, 31 Mar 2008 12:22:10 -0500"  >&lt;p&gt;Hi Rusty,&lt;/p&gt;

&lt;p&gt;many thanks. I had a deeper look in XMLSPY.&lt;br/&gt;
My expressions are XPATH 2.0.&lt;br/&gt;
Unfortunately JAXEN does not support this.&lt;/p&gt;

&lt;p&gt;So I have to search for other xpath endine. Sorry.&lt;/p&gt;

&lt;p&gt;Regards Mario&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="33539" name="books.xml" size="786" author="mariomueller" created="Mon, 31 Mar 2008 04:15:25 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 31 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>mariomueller</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-193] child::* in non-final position causes XPathSyntaxException</title>
                <link>http://jira.codehaus.org/browse/JAXEN-193</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The valid XPath expression &lt;/p&gt;

&lt;p&gt;   /*[ * or processing-instruction() ]&lt;/p&gt;

&lt;p&gt;causes Jaxen to report an XPathSyntaxException with message &quot;Expected: ]&quot; (at char 6). &lt;/p&gt;

&lt;p&gt;Re-arrange it to this:&lt;/p&gt;

&lt;p&gt;   /*[ processing-instruction() or * ]&lt;/p&gt;

&lt;p&gt;and the problem goes away.&lt;/p&gt;

&lt;p&gt;From some probing of the XPathLexer class, it looks as though &apos;&lt;b&gt;&apos; in the sequence &apos;&lt;/b&gt; or...&apos; is being handled incorrectly here as a multiply operator rather than a NameTest wildcard.&lt;/p&gt;

&lt;p&gt;A (so far insufficiently tested) fix is to apply the rules relating to &apos;*&apos; in section 3.7 of XPath 1.0 as soon as star() is called in XPathLexer.java and return disambiguated token types for each of multiply operator and NameTest wildcard.&lt;/p&gt;</description>
                <environment></environment>
            <key id="57601">JAXEN-193</key>
            <summary>child::* in non-final position causes XPathSyntaxException</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="andrews">Andrew Sales</reporter>
                        <created>Fri, 19 Oct 2007 09:53:38 -0500</created>
                <updated>Sat, 29 Nov 2008 12:00:04 -0600</updated>
                    <resolved>Sat, 29 Nov 2008 11:59:53 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="132760" author="elharo" created="Sat, 26 Apr 2008 19:16:26 -0500"  >&lt;p&gt;I can confirm this one. I&apos;ve added a test case for it. &lt;/p&gt;</comment>
                    <comment id="138723" author="bazzargh" created="Mon, 16 Jun 2008 05:00:34 -0500"  >&lt;p&gt;As you say this is to do with 3.7. Short answer is that we had this in the javacc version of the parser ages ago, the implementation is at the bottom of this comment. Saxpath should have been binned years ago, etc etc.&lt;/p&gt;

&lt;p&gt;Long answer: that tokenizer was written to be stateful, using the previous token to determine what the current token should be emitted as. The same fix would probably work here. A direct translation doesn&apos;t correspond to a change in &apos;star()&apos;, but a second switch statement in &apos;nextToken()&apos;. &lt;/p&gt;

&lt;p&gt;An implementation would be: instead of storing &apos;previousToken&apos; in XPathLexer, store &apos;boolean expectOperator = false;&apos;. Remove the switch statement from identifierOrOperatorName(), and place it at the end of nextToken(), use it to set &apos;expectOperator&apos;. In the first switch statement in  nextToken, the entry for &apos;*&apos; should read:&lt;/p&gt;

&lt;p&gt;case &apos;*&apos;:&lt;br/&gt;
  {&lt;br/&gt;
    if (expectOperator) {
      token = star();
    } else {
      // or something less ambiguous; I havent checked the knock-on effects of this
      token = identifier();
    }&lt;br/&gt;
    break;&lt;/p&gt;

&lt;p&gt;and the entry for default:&lt;br/&gt;
default:&lt;br/&gt;
  {&lt;br/&gt;
    if ( isIdentifierStartChar( LA(1) ) )&lt;br/&gt;
    {&lt;br/&gt;
      if (expectOperator) {
        token = operatorName();
      } else {
        token = identifier();
      }&lt;br/&gt;
    }&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;this boils down to much the same change as in the first comment, but there should be a bit less duplication of the previousToken logic. &lt;/p&gt;

&lt;p&gt;For completeness, here&apos;s how it looked in javacc:&lt;/p&gt;

&lt;p&gt;/*&lt;br/&gt;
If there is a preceding token and the preceding token is not one of @, ::,&lt;br/&gt;
(, [, , or an Operator, then a * must be recognized as a MultiplyOperator&lt;br/&gt;
and an NCName must be recognized as an OperatorName.&lt;br/&gt;
*/&lt;br/&gt;
&amp;lt;OP&amp;gt; TOKEN: {&lt;br/&gt;
      &amp;lt;MultiplyOperator: &quot;*&quot;&amp;gt; : DEFAULT&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;AND:&quot;and&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;OR:&quot;or&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;MOD:&quot;mod&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &amp;lt;DIV:&quot;div&quot;&amp;gt; : DEFAULT&lt;br/&gt;
}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&amp;lt;*&amp;gt; TOKEN: {&lt;br/&gt;
      &amp;lt;LEFT_PAREN:&quot;(&quot;&amp;gt; : DEFAULT&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;RIGHT_PAREN:&quot;)&quot;&amp;gt; : OP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;LEFT_SQUARE:&quot;[&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;RIGHT_SQUARE:&quot;]&quot;&amp;gt; : OP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;PERIODS:&quot;..&quot;&amp;gt; : OP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;Number: &amp;lt;Digits&amp;gt; (&quot;.&quot; (&amp;lt;Digits&amp;gt;)?)? &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &quot;.&quot; &amp;lt;Digits&amp;gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;PERIOD:&quot;.&quot;&amp;gt; : OP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;AT:&quot;@&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;COMMA:&quot;,&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;COLONS:&quot;::&quot;&amp;gt; : DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;SLASHES: &quot;//&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;SLASH: &quot;/&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;PIPE: &quot;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;PLUS: &quot;+&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;MINUS: &quot;-&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;EQ: &quot;=&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;NE: &quot;!=&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;LTE: &quot;&amp;lt;=&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;LT: &quot;&amp;lt;&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;GTE: &quot;&amp;gt;=&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;GT: &quot;&amp;gt;&quot;&amp;gt; :DEFAULT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;Literal: &quot;\&quot;&quot; (~&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;\&amp;quot;&amp;quot;&amp;#93;&lt;/span&gt;)* &quot;\&quot;&quot; &lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; &quot;&apos;&quot; (~&lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;&amp;#39;&amp;quot;&amp;#93;&lt;/span&gt;)* &quot;&apos;&quot;&amp;gt; : OP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;lt;VariableReference: &quot;$&quot; &amp;lt;QName&amp;gt;&amp;gt; : OP&lt;br/&gt;
}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</comment>
                    <comment id="138724" author="bazzargh" created="Mon, 16 Jun 2008 05:02:48 -0500"  >&lt;p&gt;ugh. jira completely messed up the formatting there, sorry. Unfortunately the preview button shows a completely different (also wrong) formatting, so I&apos;ve no idea how to fix that up. You get the gist.&lt;/p&gt;</comment>
                    <comment id="140960" author="bazzargh" created="Mon, 7 Jul 2008 12:37:51 -0500"  >&lt;p&gt;Sorry meant to get back to you on this Elliotte. I&apos;ll attach 2 variants of the patch, the first one leaves the getter and setter for PreviousToken in place - in case you want to preserve the API. Both variants add a second token type (STAR_OPERATOR) for * as a multiply op. I can get away without doing that but the changes started to look pretty ugly; you end up using Token.IDENTIFIER for &apos;&lt;b&gt;&apos; instead, and having to test everywhere that&apos;s used to see if it matches &apos;&lt;/b&gt;&apos;. Bleh. Tests ran mostly ok for me except for a jdom issue which I believe is my environment - its picking up an older/newer jdom somewhere.&lt;/p&gt;</comment>
                    <comment id="140961" author="bazzargh" created="Mon, 7 Jul 2008 12:40:57 -0500"  >&lt;p&gt;Second variant with the unused previousToken methods removed. BTW another issue you run into if you try to do this with identifier() is that it won&apos;t collect the token text for &apos;*&apos;, you get lots of parse errors because the token text collected becomes &apos;&apos;. Or something. I didn&apos;t delve too far into that because this solution was neater.&lt;/p&gt;</comment>
                    <comment id="155834" author="elharo" created="Sat, 29 Nov 2008 11:59:53 -0600"  >&lt;p&gt;Brian&apos;s patch works. Committed&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="35655" name="jaxen.patch" size="6902" author="bazzargh" created="Mon, 7 Jul 2008 12:37:51 -0500" />
                    <attachment id="35656" name="jaxen2.patch" size="7421" author="bazzargh" created="Mon, 7 Jul 2008 12:40:57 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 49 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>andrews</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-192] The self axis doesn&apos;t work on attributes : @*[self::xml:base]</title>
                <link>http://jira.codehaus.org/browse/JAXEN-192</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;count( /&lt;b&gt;/@&lt;/b&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;self::xml:base&amp;#93;&lt;/span&gt; )&lt;br/&gt;
return 0&lt;br/&gt;
on&lt;br/&gt;
&amp;lt;doc xml:base=&quot;foo&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;it seems that the self axis doesn&apos;t apply to attributes whereas it should&lt;br/&gt;
the right result should be 1&lt;/p&gt;

&lt;p&gt;it was working on 1.0-FCS ; the following code was added in DefaultNameStep#matches() &lt;span class=&quot;error&quot;&gt;&amp;#91;line 334&amp;#93;&lt;/span&gt; :&lt;br/&gt;
    if (getAxis() != Axis.ATTRIBUTE) {
        return false;
    }&lt;br/&gt;
it should be something like this :&lt;br/&gt;
    if (getAxis() != Axis.ATTRIBUTE &amp;amp;&amp;amp; getAxis() != Axis.SELF) {        return false;    } }&lt;/p&gt;</description>
                <environment>Jaxen 1.1.1</environment>
            <key id="56284">JAXEN-192</key>
            <summary>The self axis doesn&apos;t work on attributes : @*[self::xml:base]</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="ppoulard">Philippe Poulard</reporter>
                        <created>Mon, 17 Sep 2007 11:07:51 -0500</created>
                <updated>Fri, 28 Sep 2007 17:46:06 -0500</updated>
                    <resolved>Fri, 28 Sep 2007 17:46:06 -0500</resolved>
                            <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="108527" author="bazzargh" created="Fri, 28 Sep 2007 08:53:02 -0500"  >&lt;p&gt;No, the result from jaxen is correct here, if a little counter-intuitive. &lt;/p&gt;

&lt;p&gt;Read section 2.3 of the spec:&lt;/p&gt;

&lt;p&gt;&quot;    * For the attribute axis, the principal node type is attribute.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For the namespace axis, the principal node type is namespace.&lt;/li&gt;
	&lt;li&gt;For other axes, the principal node type is element.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A node test that is a QName is true if and only if the type of the node (see &lt;span class=&quot;error&quot;&gt;&amp;#91;5 Data Model&amp;#93;&lt;/span&gt;) is the principal node type and has an expanded-name equal to the expanded-name specified by the QName.&quot;&lt;/p&gt;

&lt;p&gt;The principal node type of the &apos;self&apos; axis is element, so your step &apos;self::xml:base&apos; will always return false when evaluated at an attribute. &lt;/p&gt;

&lt;p&gt;What you intended by &apos;count( /&lt;b&gt;/@&lt;/b&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;self::xml:base&amp;#93;&lt;/span&gt; )&apos; was &apos;count( /&lt;b&gt;/@xml:base )&apos;, or equivalently count( /&lt;/b&gt;/attribute::xml:base ) anyway. You can achieve other filtering effects like so: &apos;count( /&lt;b&gt;/@&lt;/b&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;local-name() = &amp;#39;base&amp;#39;&amp;#93;&lt;/span&gt; ), and so on.&lt;/p&gt;</comment>
                    <comment id="108556" author="elharo" created="Fri, 28 Sep 2007 17:46:06 -0500"  >&lt;p&gt;Thanks Brian. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 6 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>ppoulard</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-191] string-length() incorrectly identifying surrogate pairs</title>
                <link>http://jira.codehaus.org/browse/JAXEN-191</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;(This issue was previously addressed as &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-116&quot; title=&quot;string-length is counting UTF-16 code points, not Unicode characters&quot;&gt;&lt;del&gt;JAXEN-116&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The XPath expression &apos;/tr[ string-length(.) = 1 ]&apos; incorrectly throws a FunctionCallException (&quot;Bad surrogate pair in string&quot;) when evaluated against this document:&lt;/p&gt;

&lt;p&gt;    &amp;lt;tr&amp;gt;&amp;#xFF0C;&amp;lt;/tr&amp;gt;&lt;/p&gt;

&lt;p&gt;Line 140 of StringLengthFunction.java has:&lt;/p&gt;

&lt;p&gt;   if (c &amp;gt;= 0xD800)&lt;/p&gt;

&lt;p&gt;which needs to be extended to exclude characters above U+DFFF, but which are not part of the Surrogates Area:&lt;/p&gt;

&lt;p&gt;   if( c &amp;gt;= 0xD800 &amp;amp;&amp;amp; c &amp;lt;= 0xDFFF )&lt;/p&gt;</description>
                <environment></environment>
            <key id="55584">JAXEN-191</key>
            <summary>string-length() incorrectly identifying surrogate pairs</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="andrews">Andrew Sales</reporter>
                        <created>Wed, 29 Aug 2007 09:07:53 -0500</created>
                <updated>Sat, 26 Apr 2008 20:49:47 -0500</updated>
                    <resolved>Sat, 26 Apr 2008 20:49:47 -0500</resolved>
                            <version>1.1</version>
                                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="132761" author="elharo" created="Sat, 26 Apr 2008 20:49:47 -0500"  >&lt;p&gt;Fixed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 28 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>andrews</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-190] XPathSyntaxException when Xpath has asterisk namespace prefix</title>
                <link>http://jira.codehaus.org/browse/JAXEN-190</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;When the XPath &quot;/&lt;b&gt;:BackgroundCheck/@userId&apos;, containing &quot;&lt;/b&gt;&quot; as namespace prefix,  is used to evaluate the user id in the XML, XPathSyntaxException is thrown.&lt;/p&gt;

&lt;p&gt;Exception message: Unexpected &apos;:&apos;&lt;br/&gt;
Stack trace:&lt;br/&gt;
Caused by: class org.jaxen.saxpath.XPathSyntaxException: /*:BackgroundCheck/@userId: 2: Unexpected &apos;:&apos;&lt;br/&gt;
                at: org.jaxen.saxpath.base.XPathReader.createSyntaxException (XPathReader.java:108)&lt;br/&gt;
                at: org.jaxen.saxpath.base.XPathReader.parse (XPathReader.java:106)&lt;/p&gt;</description>
                <environment>Windows XP</environment>
            <key id="55070">JAXEN-190</key>
            <summary>XPathSyntaxException when Xpath has asterisk namespace prefix</summary>
                <type id="6" iconUrl="http://www.codehaus.org/newtest.gif">Test</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="srivatsan">Srivatsan Sridharan</reporter>
                        <created>Tue, 14 Aug 2007 21:38:25 -0500</created>
                <updated>Fri, 28 Sep 2007 17:45:18 -0500</updated>
                    <resolved>Fri, 28 Sep 2007 17:45:18 -0500</resolved>
                            <version>1.1</version>
                                                <component>dom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="108530" author="bazzargh" created="Fri, 28 Sep 2007 09:13:01 -0500"  >&lt;p&gt;Jaxen is correct, it is a syntax error.&lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/TR/xpath#NT-NameTest&quot;&gt;http://www.w3.org/TR/xpath#NT-NameTest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can&apos;t have &apos;*&apos; as a namespace-prefix in a nametest.&lt;/p&gt;</comment>
                    <comment id="108554" author="elharo" created="Fri, 28 Sep 2007 17:45:18 -0500"  >&lt;p&gt;We really should add an option to close an issue as &quot;invalid&quot; but since we don&apos;t have that, I&apos;ll close this as &quot;Won&apos;t Fix&quot;. Thanks Brian. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 6 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>srivatsan</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-189] numberValueOf returns double that is not enough for long</title>
                <link>http://jira.codehaus.org/browse/JAXEN-189</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Tested with Dom4j:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; DocumentFactory documentFactory = DocumentFactory.getInstance();

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testJaxen() {
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; l = 1234567890123456789L;
    Element element = documentFactory.createElement(&lt;span class=&quot;code-quote&quot;&gt;&quot;bebe&quot;&lt;/span&gt;);
    element.addElement(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;).setText(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;.valueOf(l));

    &lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt; number = element.numberValueOf(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;&quot;&lt;/span&gt;);
    assertEquals(l, number.longValue());
}&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;fails.&lt;/p&gt;

&lt;p&gt;I think numberValueOf() should return BigDecimal (not Double).&lt;/p&gt;</description>
                <environment>jaxen 1.1.1</environment>
            <key id="54647">JAXEN-189</key>
            <summary>numberValueOf returns double that is not enough for long</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="yozh">Stepan Koltsov</reporter>
                        <created>Fri, 3 Aug 2007 09:24:48 -0500</created>
                <updated>Sun, 5 Aug 2007 06:59:52 -0500</updated>
                    <resolved>Sat, 4 Aug 2007 12:35:24 -0500</resolved>
                            <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="103989" author="elharo" created="Sat, 4 Aug 2007 12:35:24 -0500"  >&lt;p&gt;In XPath 1.0, &quot;A number can have any double-precision 64-bit format IEEE 754 value &lt;span class=&quot;error&quot;&gt;&amp;#91;IEEE 754&amp;#93;&lt;/span&gt;.&quot; In Java this is represented by a double, not a BigDecimal. Values over that range, should, I think, be converted to Inf. I believe this is the behavior we have, though I should check that on the boundaries. However. BigDecimal is definitely too large. &lt;/p&gt;</comment>
                    <comment id="103990" author="yozh" created="Sat, 4 Aug 2007 12:48:37 -0500"  >&lt;p&gt;If so, numberValueOf should return Double, not Number to avoid misunderstanding.&lt;/p&gt;</comment>
                    <comment id="103991" author="yozh" created="Sat, 4 Aug 2007 12:49:14 -0500"  >&lt;p&gt;Anyway, thank you for the explaination.&lt;/p&gt;</comment>
                    <comment id="104018" author="elharo" created="Sun, 5 Aug 2007 06:59:52 -0500"  >&lt;p&gt;Perhaps it should have returned Double instead of Number. However, at this point I tend to doubt we&apos;ll make such a breaking change to the API. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 13 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>yozh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-188] org.jaxen.util.PrecedingSiblingAxisIterator returns same results as org.jaxen.util.PrecedingAxisIterator</title>
                <link>http://jira.codehaus.org/browse/JAXEN-188</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Here&apos;s a code snippet that illustrates how I&apos;m generating the bug:&lt;/p&gt;

&lt;p&gt;// Given a valid XPath String xPath  referring to a unique node in org.dom4j.Document doc, see if&lt;br/&gt;
// there is a preceding sibling 	&lt;br/&gt;
org.dom4j.Node startNode = DocumentHelper.createXPath(xPath).selectSingleNode(doc);&lt;br/&gt;
DocumentNavigator nav = new DocumentNavigator();&lt;br/&gt;
PrecedingSiblingAxisIterator sibs;&lt;br/&gt;
try {&lt;br/&gt;
	sibs = new PrecedingSiblingAxisIterator(startNode, nav);&lt;br/&gt;
	if (sibs.hasNext()) { 
	// do something with     (org.dom4j.Node) sibs.next();
	}&lt;br/&gt;
...&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;This returns exactly the same results if I use PrecedingAxisIterator instead of PrecedingSiblingAxisIterator &amp;#8211;&lt;br/&gt;
results that are correct for PrecedingAxisIterator, but not for PrecedingSiblingAxisIterator.&lt;/p&gt;

&lt;p&gt;(No such problem using FollowingSiblingAxisIterator.)&lt;/p&gt;
</description>
                <environment>Mac OS 10.4.10 java version &amp;quot;1.5.0_07&amp;quot; using binary download of jaxen-1.1.1.jar </environment>
            <key id="53685">JAXEN-188</key>
            <summary>org.jaxen.util.PrecedingSiblingAxisIterator returns same results as org.jaxen.util.PrecedingAxisIterator</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="neelsmith">Neel Smith</reporter>
                        <created>Tue, 10 Jul 2007 10:25:34 -0500</created>
                <updated>Sat, 26 Apr 2008 18:52:51 -0500</updated>
                                    <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="102035" author="elharo" created="Thu, 12 Jul 2007 03:34:30 -0500"  >&lt;p&gt;It would be helpful if you could provide a complete self-contained or JUnit test case for this issue.&lt;/p&gt;

&lt;p&gt;Also, can it be reproduced with a navigator other than dom4j?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 17 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>neelsmith</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-187] Add jira components for build and website issues</title>
                <link>http://jira.codehaus.org/browse/JAXEN-187</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Add jira components for build and website issues&lt;/p&gt;</description>
                <environment></environment>
            <key id="50727">JAXEN-187</key>
            <summary>Add jira components for build and website issues</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 6 May 2007 07:14:11 -0500</created>
                <updated>Sun, 6 May 2007 07:14:11 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 26 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-186] Fix Changelog</title>
                <link>http://jira.codehaus.org/browse/JAXEN-186</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Figure out how to set up Maven changelog so it counts from last release rather than last 30 days. Moving to maven 2 may be a prerequisite here. &lt;/p&gt;</description>
                <environment></environment>
            <key id="50726">JAXEN-186</key>
            <summary>Fix Changelog</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 6 May 2007 07:11:21 -0500</created>
                <updated>Sun, 6 May 2007 07:11:21 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 26 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-185] Convert Repository to Subversion</title>
                <link>http://jira.codehaus.org/browse/JAXEN-185</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;a href=&quot;http://codehaus.org/Subversion+at+the+haus&quot;&gt;http://codehaus.org/Subversion+at+the+haus&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="50725">JAXEN-185</key>
            <summary>Convert Repository to Subversion</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 6 May 2007 06:35:02 -0500</created>
                <updated>Sat, 26 Apr 2008 18:41:14 -0500</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="103859" author="elharo" created="Thu, 2 Aug 2007 08:03:35 -0500"  >&lt;p&gt;We need to update the web pages with instructions on how to get the code from SVN instead of CVS. Right now the links are broken. &lt;/p&gt;</comment>
                    <comment id="132751" author="elharo" created="Sat, 26 Apr 2008 16:42:59 -0500"  >&lt;p&gt;Do these look right for the connection strings?&lt;/p&gt;

&lt;p&gt;  &amp;lt;repository&amp;gt;&lt;br/&gt;
    &amp;lt;connection&amp;gt;scm:svn:&lt;a href=&quot;https://svn.codehaus.org/jaxen/trunk/jaxen/&quot;&gt;https://svn.codehaus.org/jaxen/trunk/jaxen/&lt;/a&gt;&amp;lt;/connection&amp;gt;&lt;br/&gt;
    &amp;lt;url&amp;gt;&lt;a href=&quot;https://svn.codehaus.org/jaxen/trunk/jaxen/&quot;&gt;https://svn.codehaus.org/jaxen/trunk/jaxen/&lt;/a&gt;&amp;lt;/url&amp;gt;&lt;br/&gt;
  &amp;lt;/repository&amp;gt;&lt;/p&gt;

&lt;p&gt;Will Maven automatically generate the right info from this? &lt;/p&gt;</comment>
                    <comment id="132754" author="hoju" created="Sat, 26 Apr 2008 17:44:30 -0500"  >&lt;p&gt;Well, here&apos;s what the Picocontainer project uses &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;...&lt;/p&gt;

&lt;p&gt;&amp;lt;scm&amp;gt;&lt;br/&gt;
    &amp;lt;connection&amp;gt;scm:svn:&lt;a href=&quot;https://svn.codehaus.org/picocontainer/java/2.x/trunk/pico&quot;&gt;https://svn.codehaus.org/picocontainer/java/2.x/trunk/pico&lt;/a&gt;&amp;lt;/connection&amp;gt;&lt;br/&gt;
    &amp;lt;developerConnection&amp;gt;scm:svn:&lt;a href=&quot;https://svn.codehaus.org/picocontainer/java/2.x/trunk/pico&quot;&gt;https://svn.codehaus.org/picocontainer/java/2.x/trunk/pico&lt;/a&gt;&amp;lt;/developerConnection&amp;gt;&lt;br/&gt;
    &amp;lt;url&amp;gt;&lt;a href=&quot;https://svn.codehaus.org/picocontainer/java/2.x/trunk/pico&quot;&gt;https://svn.codehaus.org/picocontainer/java/2.x/trunk/pico&lt;/a&gt;&amp;lt;/url&amp;gt;&lt;br/&gt;
&amp;lt;/scm&amp;gt;&lt;/p&gt;

&lt;p&gt;So, I guess Jaxen&apos;s might look like (notice I made it plain &quot;http&quot; for the non-developer connection and url)...&lt;/p&gt;

&lt;p&gt;&amp;lt;scm&amp;gt;&lt;br/&gt;
    &amp;lt;connection&amp;gt;scm:svn:&lt;a href=&quot;http://svn.codehaus.org/jaxen/trunk/jaxen&quot;&gt;http://svn.codehaus.org/jaxen/trunk/jaxen&lt;/a&gt;&amp;lt;/connection&amp;gt;&lt;br/&gt;
    &amp;lt;developerConnection&amp;gt;scm:svn:&lt;a href=&quot;https://svn.codehaus.org/jaxen/trunk/jaxen&quot;&gt;https://svn.codehaus.org/jaxen/trunk/jaxen&lt;/a&gt;&amp;lt;/developerConnection&amp;gt;&lt;br/&gt;
    &amp;lt;url&amp;gt;&lt;a href=&quot;http://svn.codehaus.org/jaxen/trunk/jaxen&quot;&gt;http://svn.codehaus.org/jaxen/trunk/jaxen&lt;/a&gt;&amp;lt;/url&amp;gt;&lt;br/&gt;
&amp;lt;/scm&amp;gt;&lt;/p&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://svn.codehaus.org/picocontainer/java/2.x/trunk/pico/pom.xml&quot;&gt;http://svn.codehaus.org/picocontainer/java/2.x/trunk/pico/pom.xml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jake&lt;/p&gt;</comment>
                    <comment id="132755" author="elharo" created="Sat, 26 Apr 2008 18:41:14 -0500"  >&lt;p&gt;I&apos;ve upgraded the instructions on the web site. We still need to redirect &lt;/p&gt;

&lt;p&gt;/cvs-usage.html&lt;br/&gt;
and&lt;br/&gt;
/cvs.html&lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;/scm-usage.html&lt;/p&gt;

&lt;p&gt;Does anyone know how to do that? &lt;/p&gt;

&lt;p&gt;I&apos;m not perfectly happy with the autogenerated Maven instructions for using SVN. Does anyone know how we might customize those?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 28 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-184] Fix checkstyle report/reformat code</title>
                <link>http://jira.codehaus.org/browse/JAXEN-184</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The checkstyle report is huge. At some point we should decide on coding conventions and do a serious cleanup of the code to improve this.&lt;/p&gt;

&lt;p&gt;It might well make sense to do this right before or right after the Subversion migration if we&apos;re going to lose the history in that changeover anyway. &lt;/p&gt;</description>
                <environment></environment>
            <key id="50598">JAXEN-184</key>
            <summary>Fix checkstyle report/reformat code</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 2 May 2007 11:19:18 -0500</created>
                <updated>Thu, 3 May 2007 04:41:43 -0500</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="94919" author="bazzargh" created="Thu, 3 May 2007 04:41:43 -0500"  >&lt;p&gt;a long time ago and far, far away:&lt;br/&gt;
&lt;a href=&quot;http://jira.codehaus.org/browse/MAVEN-159&quot;&gt;http://jira.codehaus.org/browse/MAVEN-159&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wrote up how to get checkstyle to only report on style problems that can&apos;t be fixed by automatically reformatting the code (since they&apos;re the interesting ones). Migration of the bug through jira versions has messed up the formatting of what I typed there - the numbered bullets are hashes. At the time the project I was working on generated something like 50,000 checkstyle errors &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I havent looked at this in a long time, I believe the config format is now xml but something similar would be useful.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 27 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-183] Unblock CVS</title>
                <link>http://jira.codehaus.org/browse/JAXEN-183</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The xdocs directory seems to have a major glitch (stale lock file or some such) that prevents anyone from commiting change here or tagging a release.&lt;/p&gt;

&lt;p&gt;Can someone please fix this?&lt;/p&gt;</description>
                <environment></environment>
            <key id="50506">JAXEN-183</key>
            <summary>Unblock CVS</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="1" iconUrl="http://jira.codehaus.org/images/icons/priority_blocker.gif">Blocker</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 30 Apr 2007 10:53:50 -0500</created>
                <updated>Sun, 6 May 2007 06:29:53 -0500</updated>
                    <resolved>Sun, 6 May 2007 06:29:53 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="95171" author="elharo" created="Sun, 6 May 2007 06:29:53 -0500"  >&lt;p&gt;Fixed. Thanks.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 26 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-182] Parser perceives missing right paren in seemingly valid xpath expression</title>
                <link>http://jira.codehaus.org/browse/JAXEN-182</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;($a/ancestor-or-self::node() intersect $b/ancestor-or-self::node())&lt;span class=&quot;error&quot;&gt;&amp;#91;last()&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The above expression fails with a complaint that we&apos;re missing a right parenthesis. It might be a good expression, or it might be a bad one, but I don&apos;t see that it is missing any right parens.&lt;/p&gt;

&lt;p&gt;The exception is thrown below XPathReader.parse called on this expression in a string.&lt;/p&gt;</description>
                <environment>Not relevant</environment>
            <key id="50504">JAXEN-182</key>
            <summary>Parser perceives missing right paren in seemingly valid xpath expression</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bmargulies">Benson Margulies</reporter>
                        <created>Mon, 30 Apr 2007 09:59:58 -0500</created>
                <updated>Mon, 30 Apr 2007 11:05:24 -0500</updated>
                                    <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="94600" author="elharo" created="Mon, 30 Apr 2007 10:51:03 -0500"  >&lt;p&gt;I think this expression fails because intersect is not legal in XPath 1.0. At the point where &quot;intersect&quot; is noted there is a missing right parenthesis.&lt;/p&gt;

&lt;p&gt;There may be a way to improve the error message here, but I&apos;m not sure. It probably goes pretty deep into the guts of the parser. If anyone sees how to fix it without breaking or slowing anything else, I&apos;d be inclined to do so, but it&apos;s not a major problem. &lt;/p&gt;</comment>
                    <comment id="94601" author="bmargulies" created="Mon, 30 Apr 2007 11:05:24 -0500"  >&lt;p&gt;Parser error management is a fairly well-trodden path, and compilers organize this sort of thing all the time without throwing all their performance out the window.. What you want is to diagnose &apos;intersect&apos; as invalid.  You have to decide on the priority of this, of course I can&apos;t argue that it&apos;s enormous.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 27 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bmargulies</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-181] Some wrong links to productions in the XPath 1.0 specification.</title>
                <link>http://jira.codehaus.org/browse/JAXEN-181</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;FilterExpr and MultiplicativeExpr link to the wrong production in the XPath 1.0 specification. I checked the rest of the Expr sub-interfaces, they are fine.&lt;/p&gt;

&lt;p&gt;Also, in filing out this bug report, version 1.1 is listed as an &quot;Unreleased Version&quot;.&lt;/p&gt;</description>
                <environment></environment>
            <key id="48782">JAXEN-181</key>
            <summary>Some wrong links to productions in the XPath 1.0 specification.</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="sparrow_ca">Ryan</reporter>
                        <created>Tue, 20 Mar 2007 12:01:54 -0500</created>
                <updated>Sat, 26 Apr 2008 20:56:43 -0500</updated>
                    <resolved>Sat, 26 Apr 2008 20:56:43 -0500</resolved>
                            <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 33 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>sparrow_ca</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-180] Make XPath unmodifiable</title>
                <link>http://jira.codehaus.org/browse/JAXEN-180</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;XPath object should be unmodifiable.&lt;/p&gt;

&lt;p&gt;Methods&lt;/p&gt;

&lt;p&gt;void setFunctionContext(...)&lt;br/&gt;
void setNamespaceContext(...)&lt;br/&gt;
void setVariableContext(...)&lt;/p&gt;

&lt;p&gt;should be replaced with:&lt;/p&gt;

&lt;p&gt;XPath withFunctionContext(...)&lt;br/&gt;
XPath withNamespaceContext(...)&lt;br/&gt;
XPath withVariableContext(...)&lt;/p&gt;

&lt;p&gt;(these methods return same XPaths with different environment)&lt;/p&gt;

&lt;p&gt;It will make life easier. For example:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I could declare XPath instance as public static final.&lt;/li&gt;
	&lt;li&gt;I could avoid compilation of XPath expression each time I need to evaluate expression with different variables.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think new methods should be added and old should be marked as deprecated.&lt;/p&gt;</description>
                <environment></environment>
            <key id="46694">JAXEN-180</key>
            <summary>Make XPath unmodifiable</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="yozh">Stepan Koltsov</reporter>
                        <created>Tue, 30 Jan 2007 10:48:33 -0600</created>
                <updated>Fri, 16 Mar 2007 10:41:23 -0500</updated>
                    <resolved>Fri, 16 Mar 2007 10:41:23 -0500</resolved>
                            <version>1.2</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="90258" author="elharo" created="Fri, 16 Mar 2007 09:00:50 -0500"  >&lt;p&gt;We&apos;re certainly not going to do this in the 1.1 series. I could perhaps see doing it in 1.2 or later, though that&apos;s not a definite commitment. &lt;/p&gt;

&lt;p&gt;You should be able to reuse the same XPath object with different contexts serially in one thread using the setter methods you want to deprecate.&lt;/p&gt;

&lt;p&gt;Are you in fact using the same XPath expression in multiple threads? If so, is the compilation time per thread really proven to be a hot spot?&lt;/p&gt;</comment>
                    <comment id="90260" author="yozh" created="Fri, 16 Mar 2007 09:35:32 -0500"  >&lt;p&gt;Same XPath expression is used in multiple threads. Compilation of XPath per thread or even per invocation is not a hot spot, but it seems to be bad design.&lt;/p&gt;</comment>
                    <comment id="90263" author="elharo" created="Fri, 16 Mar 2007 10:41:23 -0500"  >&lt;p&gt;If it&apos;s not a HotSpot, then I don&apos;t find it to be bad design. Your proposal strikes me as less obvious and more opaque than just creating a new expression.  Basic constructors and setter methods have the advantage of being simple, obvious, and well understood. And of course they don&apos;t require any deprecation. I prefer to stick with the current API. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 34 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>yozh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-179] BaseXPath(XPathExpr) constructor</title>
                <link>http://jira.codehaus.org/browse/JAXEN-179</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;According to Ryan Gustafson, PMD seems to be creating copie sof BaseXPath objects by converting them to strings and reparsing them It&apos;s not clear why they&apos;re doing that or how important this is.&lt;/p&gt;

&lt;p&gt;However, we could probably avoid a reparse step if we added a constructor to BaseXPath that took in an already parsed expression. How important this is, I don&apos;t know. &lt;/p&gt;

&lt;p&gt;It&apos;s a little tricky because a lot of the classes involved are mutable. Sharing an XPathExpr between two objects might be a problem. &lt;/p&gt;

&lt;p&gt;Possibly we could make a defensive copy more directly, or possibly we can look at this after we make a lot more of the classes in org.jaxen.expr non-public so they&apos;ll be harder to muck with. &lt;/p&gt;</description>
                <environment></environment>
            <key id="45717">JAXEN-179</key>
            <summary>BaseXPath(XPathExpr) constructor</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 7 Jan 2007 10:29:02 -0600</created>
                <updated>Mon, 8 Jan 2007 08:52:02 -0600</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="84305" author="rgustav" created="Sun, 7 Jan 2007 22:38:58 -0600"  >&lt;p&gt;I can clarify the PMD usage.  It is an attempt to convert expressions of the form (and unions of such expressions):&lt;/p&gt;

&lt;p&gt;   ///SomeType&lt;span class=&quot;error&quot;&gt;&amp;#91;Some predicate&amp;#93;&lt;/span&gt;/...&lt;/p&gt;

&lt;p&gt;By removal of a the //SomeType prefix, into expressions of the form:&lt;/p&gt;

&lt;p&gt;   self::node()&lt;span class=&quot;error&quot;&gt;&amp;#91;Some predicate&amp;#93;&lt;/span&gt;/...&lt;/p&gt;

&lt;p&gt;To do this we are creating a modified Expr from the original Expr.  The modified Expr is only usable in BaseXPath by converting to a string (using getText()) and reparsing (hence this RFE).&lt;/p&gt;

&lt;p&gt;As for motivation...  PMD uses Jaxen as a means of querying Java ASTs.  The modification described above is to reduce the time spent by Jaxen queries upon the PMD Java ASTs.  The prefix we remove from the queries is replaced by a custom PMD AST visitor, which performs AST traversal significantly faster.  When the appropriate AST nodes are visited, the modifed XPath query is applied.  The end result is PMD XPath based Rules run much faster.  Xavier Le Vourch, the PMD developer who birthed this idea, reported a reduction in runtime from 101minutes to 35 minutes as an example of the performance benefits of being able to perform this optimization.&lt;/p&gt;

&lt;p&gt;And the real point to all this, is that the PMD usage is of the general category of use cases in which an original XPath query needs to be modified by programmatic means before being used.  This RFE would facilitate this in a more direct fashion.&lt;/p&gt;</comment>
                    <comment id="84343" author="elharo" created="Mon, 8 Jan 2007 07:16:18 -0600"  >&lt;p&gt;Can you explain why PMD needs to modify the  original XPath at runtime rather than compile time? I.e. why not just put self::node()&lt;span class=&quot;error&quot;&gt;&amp;#91;Some predicate&amp;#93;&lt;/span&gt; in the original PMD rule rather than //SomeType&lt;span class=&quot;error&quot;&gt;&amp;#91;Some predicate&amp;#93;&lt;/span&gt;/ ?&lt;/p&gt;</comment>
                    <comment id="84358" author="rgustav" created="Mon, 8 Jan 2007 08:52:02 -0600"  >&lt;p&gt;Primarily for backward compatibility I suppose.  The existing XPath rules in PMD, and those used by users of PMD, are already written like //SomeType.  Also, the GUI designer for crafting the XPath queries is not aware of this optimization, and would fail to correctly apply the modified query (not that it couldn&apos;t be changed).&lt;/p&gt;

&lt;p&gt;I think we&apos;d prefer to keep it an internal PMD behavior if possible, instead of part of the external API.  Ideally, a Rule designer doesn&apos;t need to know anything about this, and they can still think of things in terms of top XPath from the Root of the Java AST.  This also leaves PMD with the most options going forward.  Perhaps when Jaxen 1.2 or 2.0 comes out and it performs much better than 1.0 we can switch tactics, transparently to the users.&lt;/p&gt;

&lt;p&gt;Also, we&apos;re not assuming every XPath can be used with the Visitor approach.  While those built into PMD can, who knows what custom queries are out there.  If the XPath is not one whose parsed Expr matching the exact structure we know we can handle, then we will fall back to using the slow, but fully functional, original query from the Root of the Java AST.  This doesn&apos;t speak to the need to modify the query, but to examining the Jaxen AST produced.&lt;/p&gt;

&lt;p&gt;This in unrelated to your interest in the above, but is instead part of the logical progression of PMD usage of XPath.  I&apos;m currently working on taking this one step further to generate a Java Rule from the Jaxen AST.  The goal is to get this working at compile time, and perhaps at runtime (via ASM/BCEL) once the solution is well understood.  This is a rather fun problem.  My initial brain dead approach, generating looping node-sets filters in series from the XPath steps/predicates, results in rules which are a fair bit faster than even the truncated XPath queries.  I&apos;m now looking into optimization scenarios where I can combine adjacent filters into a single looping construct.  I found the Gottlob, Koch, Pichler paper via Google, and am looking into that now.  Part of the paper talks about scenarios in which only certain parts of the context is needed, and it is consistent with the ideas I had (reassuring that).  I&apos;m hoping only to create a full node-set when absolutely necessary.  I&apos;m also looking to short-circuit node-set creation when ultimately the result will be used as a particular data-type (e.g. a node-set being converted to a boolean, can immediately produce the boolean result once the first node is determined).  I need to read the paper closer to see if they mention this as a viable approach too.  I&apos;m also considering some count() related optimizations, among other things.  Essentially I can choose which parts of the XPath spec I want to handle, cut various corners, and optimize in ways that Jaxen likely cannot/should not.&lt;/p&gt;

&lt;p&gt;Perhaps the final result of this in PMD will be a single XPath Rule writing interface, but with 3 possible tiers of performance, depending on the XPath query:&lt;br/&gt;
1) Pure XPath on the entire AST.  (slow)&lt;br/&gt;
2) Modified Jaxen XPath on branches of the AST.  (average)&lt;br/&gt;
3) Compiled XPath on branches of the AST. (fast)&lt;/p&gt;

&lt;p&gt;All of this would not be possible, without significant extra work, if Jaxen did not expose the underlying AST as it is does.  Further I like the design of the interfaces in Jaxen.  They really made it easier for me to come away with a deeper understand of the XPath spec, and get me head around the problems I was trying to solve.&lt;/p&gt;

&lt;p&gt;Kudos to the Jaxen team!&lt;/p&gt;

&lt;p&gt;Sorry, I ramble a lot I know. &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 43 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>rgustav</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-178] BaseXPath equals</title>
                <link>http://jira.codehaus.org/browse/JAXEN-178</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;BaseXPath, or possibly its subclasses, should have an equals() method that considers equivalent abbreviated and unabbreviated XPath to be the same. e.g. /foo should compare equal to /child::foo&lt;/p&gt;

&lt;p&gt;This would be convenient for testing. &lt;/p&gt;</description>
                <environment></environment>
            <key id="45567">JAXEN-178</key>
            <summary>BaseXPath equals</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 3 Jan 2007 14:39:55 -0600</created>
                <updated>Sun, 7 Jan 2007 07:36:27 -0600</updated>
                                    <version>1.2</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="84162" author="rgustav" created="Sat, 6 Jan 2007 01:10:34 -0600"  >&lt;p&gt;This is a patch which:&lt;/p&gt;

&lt;p&gt;(1) Adds org.jaxen.test.ExprComparator which will compare a AST nodes from org.jaxen.expr.  The comparison is arbitrary, with equal and not-equal being the only intended meaningful results.&lt;/p&gt;

&lt;p&gt;(2) A possible usage of the ExprComparator is added to the org.jaxen.test.XPathTestBase&lt;/p&gt;

&lt;p&gt;(3) Adds DefaultProcessingInstructionNodeStep.getText() method, overriding the base class version.  This was uncovered by the modifcations to the tests in (2).&lt;/p&gt;

&lt;p&gt;The patch is submitted as an example of how to go verify AST nodes are idempotent under the getText() method.  It&apos;s not meant to be a perfect patch.  I expect you&apos;ll want to consider how best to incorporate this into the Jaxen tests, if at all.&lt;/p&gt;
</comment>
                    <comment id="84174" author="elharo" created="Sat, 6 Jan 2007 06:01:13 -0600"  >&lt;p&gt;Looks good. Thanks. I&apos;ll put it in soon. Random thoughts.&lt;/p&gt;

&lt;p&gt;1. This doesn&apos;t break or change anything and the only new API is in the test package. I think this can reasonably go in a 1.1.1 along with the bug fix for 177 rather than waiting for 1.2.2. Does anyone disagree?&lt;/p&gt;

&lt;p&gt;2. All the switch-case and if-else&apos;s in the patch suggest that we&apos;re missing some necessary functionality in the AST classes. This is a very non-OO way to design this, but I don&apos;t see any other way to do it with the current API. We should probably think about fixing this at some point, possibly as a precursor to the Visitor redesign.  &lt;/p&gt;</comment>
                    <comment id="84192" author="elharo" created="Sat, 6 Jan 2007 09:54:51 -0600"  >&lt;p&gt;I&apos;ve now committed all this with some small changes. The most significant is that I made ExprComparator non-public so it can only be seen from within the org.jaxen.test package. Mostly this is just on general principle to keep the API small and not lock ourselves into anything we might regret later. I&apos;m particularly concerned that it only really implements equality comparisons. A public Comparator should make sense of less than and greater than as well.&lt;/p&gt;

&lt;p&gt;if anyone does need this class to be public, e.g. for the PMD test suite, then holler with a use case; and we can always make it public later. Of we do, we might want to think about whether it should still be in the test package. It might belong in org.jaxen.expr or org.jaxen.util instead. &lt;/p&gt;

&lt;p&gt;If we do need to make this functionality public, then a Comparator may not be the way to go due to the lack of less than and greater than. Perhaps a custom API that only implements equalTo()?&lt;/p&gt;</comment>
                    <comment id="84194" author="elharo" created="Sat, 6 Jan 2007 09:57:09 -0600"  >&lt;p&gt;This might also be exposed as an equals method on BaseXPath, though we&apos;d have to change hashCode() there too. This would change the semantics of quality comparison on BaseXPath objects but I doubt anyone implements that. &lt;/p&gt;</comment>
                    <comment id="84243" author="rgustav" created="Sun, 7 Jan 2007 02:33:54 -0600"  >&lt;p&gt;Yeah, the if-else/switch is ugly, but not much one can do.  Although since we&apos;re only interested in equality, one could do without the switch I think, and only have the if-else.  &lt;b&gt;Shrug&lt;/b&gt;, I just like switch statements. &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;A Visitor pattern would fit better, and is an interesting use case of trying to traverse two trees at the same time.&lt;/p&gt;

&lt;p&gt;I agree with making it test only and not public.  It was written purely for the tests.  If you want to expand usage beyond to an equalTo() on the expr nodes (I&apos;m not sure of a use case for it), it should be redone to only deal with equality, and not the comparator stuff.  I&apos;m not really certain why I wrote a comparator, it&apos;s just what I do when I want to compare things, probably because I always regret later not being able to sort.&lt;/p&gt;

&lt;p&gt;PMD has no need of this particular API, it can be used by the Jaxen texts only.  At this point, there is a need to use getText(), and then only because BaseXPath does not have an Expr constructor.&lt;/p&gt;</comment>
                    <comment id="84256" author="elharo" created="Sun, 7 Jan 2007 07:36:27 -0600"  >&lt;p&gt;We haven&apos;t actually satisfied this RFE yet, but clearly Ryan&apos;s code does do that. It&apos;s just in the wrong place. We could move it into an equals() method in BaseXPath, addd a hashCode methods, and we&apos;d be done. So I&apos;d like to refocus the discussion for a bit. &lt;/p&gt;

&lt;p&gt;What should the semantics of equality comparison on BaseXPath object be?&lt;/p&gt;

&lt;p&gt;Currently we just use the default identity semantics. Should we change this along the lines Ryan&apos;s patch shows? I.e. any two BaseXPaths with the same AST are equal?&lt;/p&gt;

&lt;p&gt;Assuming we do that, should only the AST matter or does the object model matter too? For instance, is the DOMXPath //foo equal or not equal to the JDOMXPath //foo ?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="25039" name="jaxen.patch" size="15797" author="rgustav" created="Sat, 6 Jan 2007 01:10:34 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 43 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>rgustav</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-177] Expression.getText() returns invalid XPath query strings</title>
                <link>http://jira.codehaus.org/browse/JAXEN-177</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;There is at least one scenario where calling the getText() method on the Jaxen XPath AST classes can result in an invalid XPath query string, such that Jaxen cannot be asked to create a new BaseXPath from the result of getText().&lt;/p&gt;

&lt;p&gt;1) A LiteralExpr where the value contains a &quot; (double quote) character.  The resulting getText() looks like:&lt;/p&gt;

&lt;p&gt;&quot;&quot;&quot;  (3 double quotes).&lt;/p&gt;

&lt;p&gt;The original XPath query string was:&lt;/p&gt;

&lt;p&gt;&apos;&quot;&apos;   (single quote, double quote, single quote)&lt;/p&gt;

&lt;p&gt;And example of a problematic query from the PMD project is the optimizations.xml/SimplifyStartsWith rule, which uses XPath:&lt;/p&gt;

&lt;p&gt;//PrimaryExpression&lt;br/&gt;
 [PrimaryPrefix/Name&lt;br/&gt;
  &lt;span class=&quot;error&quot;&gt;&amp;#91;ends-with(@Image, &amp;#39;.startsWith&amp;#39;)&amp;#93;&lt;/span&gt;]&lt;br/&gt;
 [PrimarySuffix/Arguments/ArgumentList&lt;br/&gt;
  /Expression/PrimaryExpression/PrimaryPrefix&lt;br/&gt;
  /Literal&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;string-length(@Image)=3&amp;#93;&lt;/span&gt;&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;starts-with(@Image, &amp;#39;&amp;quot;&amp;#39;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
   &lt;span class=&quot;error&quot;&gt;&amp;#91;ends-with(@Image, &amp;#39;&amp;quot;&amp;#39;)&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="45558">JAXEN-177</key>
            <summary>Expression.getText() returns invalid XPath query strings</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rgustav">Ryan Gustafson</reporter>
                        <created>Wed, 3 Jan 2007 11:22:12 -0600</created>
                <updated>Sat, 6 Jan 2007 05:51:31 -0600</updated>
                    <resolved>Sat, 6 Jan 2007 05:51:31 -0600</resolved>
                            <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="83925" author="elharo" created="Wed, 3 Jan 2007 12:28:54 -0600"  >&lt;p&gt;You specified this against 1.0. Have you tried 1.1? We&apos;ve fixed a lot of bugs since 1.0. &lt;/p&gt;

&lt;p&gt;The issue is not immediately apparent to me. If you had a test case, that would help. &lt;/p&gt;</comment>
                    <comment id="83926" author="elharo" created="Wed, 3 Jan 2007 12:35:20 -0600"  >&lt;p&gt;I see the problem. It is still present in 1.1. The solution will be tricky. There are four cases we need to handle in DefaultLiteralExpr:&lt;/p&gt;

&lt;p&gt;1. String contains no quote marks&lt;/p&gt;

&lt;p&gt;2. String contains only single quote marks&lt;/p&gt;

&lt;p&gt;3. String contains only double quote marks&lt;/p&gt;

&lt;p&gt;4. String contains both single and double quote marks&lt;/p&gt;

&lt;p&gt;That last one&apos;s painful. I can fix this. It will just make the code more convoluted. &lt;/p&gt;</comment>
                    <comment id="83927" author="rgustav" created="Wed, 3 Jan 2007 12:40:01 -0600"  >&lt;p&gt;Darn it, sorry!  It&apos;s against 1.1.&lt;/p&gt;

&lt;p&gt;Test case:&lt;/p&gt;

&lt;p&gt;    	BaseXPath baseXPath = new BaseXPath(&quot;//Name&lt;span class=&quot;error&quot;&gt;&amp;#91;@Attribute = &amp;#39;\&amp;quot;&amp;#39;&amp;#93;&lt;/span&gt;&quot;, null);&lt;br/&gt;
    	BaseXPath baseXPath2 = new BaseXPath(baseXPath.getRootExpr().getText(), null);&lt;/p&gt;


&lt;p&gt;Throws an XPathSyntaxException from the 2nd line:&lt;/p&gt;

&lt;p&gt;org.jaxen.saxpath.XPathSyntaxException: /descendant-or-self::node()/child::Name&lt;span class=&quot;error&quot;&gt;&amp;#91;(attribute::Attribute = &amp;quot;&amp;quot;&amp;quot;)&amp;#93;&lt;/span&gt;: 69: Expected: )&lt;/p&gt;</comment>
                    <comment id="83929" author="rgustav" created="Wed, 3 Jan 2007 12:52:39 -0600"  >&lt;p&gt;What I&apos;m doing for PMD is taking a query like:&lt;/p&gt;

&lt;p&gt;//PrimaryExpression&lt;br/&gt;
[PrimaryPrefix/Name&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ends-with(@Image, &amp;#39;.startsWith&amp;#39;)&amp;#93;&lt;/span&gt;]&lt;br/&gt;
[PrimarySuffix/Arguments/ArgumentList&lt;br/&gt;
/Expression/PrimaryExpression/PrimaryPrefix&lt;br/&gt;
/Literal&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;string-length(@Image)=3&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;starts-with(@Image, &amp;#39;&amp;quot;&amp;#39;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ends-with(@Image, &amp;#39;&amp;quot;&amp;#39;)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;And trying to change it into:&lt;/p&gt;

&lt;p&gt;./&lt;br/&gt;
[PrimaryPrefix/Name&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ends-with(@Image, &amp;#39;.startsWith&amp;#39;)&amp;#93;&lt;/span&gt;]&lt;br/&gt;
[PrimarySuffix/Arguments/ArgumentList&lt;br/&gt;
/Expression/PrimaryExpression/PrimaryPrefix&lt;br/&gt;
/Literal&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;string-length(@Image)=3&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;starts-with(@Image, &amp;#39;&amp;quot;&amp;#39;)&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ends-with(@Image, &amp;#39;&amp;quot;&amp;#39;)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;To do that, I&apos;m crawling the Jaxen AST, and finding the appropriate sub-branch, and hooking it up to the approriate LocationPath/AllNodeStep etc. to represent the morphed query.  I then to get a BaseXPath from it.  The only API for that I can find requires I call getText().  That&apos;s when I hit this bug.&lt;/p&gt;

&lt;p&gt;I&apos;ve worked around it temporarily to fix it for queries built into PMD, but my workaround does not work for arbitrarily XPaths a PMD user might write.&lt;/p&gt;

&lt;p&gt;I&apos;d be happy with an alternative if you can point one out.  In case you&apos;d rather not fix the bug because of the complexity.&lt;/p&gt;</comment>
                    <comment id="83941" author="elharo" created="Wed, 3 Jan 2007 14:49:54 -0600"  >&lt;p&gt;I&apos;ve checked a tentative fix into CVS. Can you try that out and verify that it solves your problem? Thanks. &lt;/p&gt;</comment>
                    <comment id="83983" author="bazzargh" created="Thu, 4 Jan 2007 00:02:56 -0600"  >&lt;p&gt;If it makes life any easier Elliotte, your case &apos;4&apos; is supposed to be disallowed by the spec.&lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/TR/xpath#NT-Literal&quot;&gt;http://www.w3.org/TR/xpath#NT-Literal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we&apos;re allowing that we have another bug &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="83985" author="rgustav" created="Thu, 4 Jan 2007 00:33:32 -0600"  >&lt;p&gt;The original problem is fixed with this change.&lt;/p&gt;

&lt;p&gt;There is however some other problem with the CVS version of Jaxen, as 3 of the PMD unit tests are failing.  I believe it is with the change to DefaultBinaryExpr which removed parenthesis in the output.  This is causing precedence problems.  For example, our original XPath is:&lt;/p&gt;

&lt;p&gt;//ConstructorDeclaration&lt;span class=&quot;error&quot;&gt;&amp;#91;@Private=&amp;#39;false&amp;#39;&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;count(BlockStatement) = 0 and ($ignoreExplicitConstructorInvocation = &amp;#39;true&amp;#39; or not(ExplicitConstructorInvocation)) and @containsComment = &amp;#39;false&amp;#39;&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;And after getText() it is:&lt;/p&gt;

&lt;p&gt;/descendant-or-self::node()/child::CatchStatement&lt;span class=&quot;error&quot;&gt;&amp;#91;count(child::Block/child::BlockStatement) = 0.0 and $allowCommentedBlocks != &amp;quot;true&amp;quot; or child::Block/attribute::containsComment = &amp;quot;false&amp;quot;&amp;#93;&lt;/span&gt;[child::FormalParameter/child::Type/child::ReferenceType/child::ClassOrInterfaceType&lt;span class=&quot;error&quot;&gt;&amp;#91;attribute::Image != &amp;quot;InterruptedException&amp;quot; and attribute::Image != &amp;quot;CloneNotSupportedException&amp;quot;&amp;#93;&lt;/span&gt;]&lt;/p&gt;

&lt;p&gt;The ( ) around the LHS of the AND have been removed.   What was (A and (B or C)) is now equivalent to ((A and B) or C).&lt;/p&gt;

&lt;p&gt;If you really want getText() to work, and stay working, I&apos;d recommend enhancing the unit tests to check every query tested with something like the following (assuming you have a means to compare &quot;equality&quot; between two AST instances):&lt;/p&gt;

&lt;p&gt;   Expr expr1 = new BaseXPath(xpath).getRootExpr();&lt;br/&gt;
   Expr expr2 = new BaseXPath(expr1.getText()).getRootExpr();&lt;br/&gt;
   assertEqualASTs(expr1, expr2);&lt;/p&gt;</comment>
                    <comment id="83986" author="rgustav" created="Thu, 4 Jan 2007 00:34:41 -0600"  >&lt;p&gt;Sorry, I meant to say RHS in the prior comment, not LHS.&lt;/p&gt;</comment>
                    <comment id="84015" author="elharo" created="Thu, 4 Jan 2007 08:32:12 -0600"  >&lt;p&gt;OK. I&apos;ll look into this, and if necessary that change should be easy enough to back out. &lt;/p&gt;

&lt;p&gt;Obviously we could use more unit tests around this functionality. I don&apos;t use it myself so I haven&apos;t looked at it very closely. Any additional tests you care to contribute would be welcome. &lt;/p&gt;

&lt;p&gt;Implementing assertEqualASTs is tricky because of the differences between abbreviated and unabbreviated paths. I&apos;ve opened an RFE for this.&lt;/p&gt;</comment>
                    <comment id="84016" author="elharo" created="Thu, 4 Jan 2007 08:32:45 -0600"  >&lt;p&gt;Changing target to 1.1&lt;/p&gt;</comment>
                    <comment id="84028" author="rgustav" created="Thu, 4 Jan 2007 11:16:11 -0600"  >&lt;p&gt;I think I can write an equality check.  However I&apos;m only familiar with the Jaxen AST interfaces at this point, and not with any of the implementation details.  I&apos;ll see what I can do for tests though.&lt;/p&gt;

&lt;p&gt;If you can point me to something in docs or code which will explain this abbreviated and unabbreviated paths difference to me, I&apos;ll look into it.  Are not the org.jaxen.expr.* trees built the same regardless of whether I specify /foo or /child::foo ?  I realize the string itself is different, but they have the same meaning, and I would expect to see the same tree result?&lt;/p&gt;</comment>
                    <comment id="84029" author="bob" created="Thu, 4 Jan 2007 11:26:45 -0600"  >&lt;p&gt;Syntactically equal  xpath expressions should build the same AST.&lt;/p&gt;

&lt;p&gt;Semantically equal xpaths might have radically different ASTs.&lt;/p&gt;

&lt;p&gt;But yes, /foo and /child::foo should be the same AST.  Same as //foo and /descendant-or-self::foo or whatnot.  All short-hand notations are erased by the parser into fully expanded versions.  I think the AST toString() demonstrates such.&lt;/p&gt;</comment>
                    <comment id="84031" author="rgustav" created="Thu, 4 Jan 2007 11:48:08 -0600"  >&lt;p&gt;Ok then, so I should be able to do a node-by-node comparison of the trees from each of the BaseXPath.getRootExpr() like I proposed?  I can whip something up this weekend hopefully and submit a patch.&lt;/p&gt;

&lt;p&gt;I&apos;m not proposing to call equal() on the nodes, but rather define a node Comparator.  Not that &amp;gt; or &amp;lt; will have any practical value, but it can be done without intrusive changes to the Jaxen internals.&lt;/p&gt;</comment>
                    <comment id="84130" author="elharo" created="Fri, 5 Jan 2007 12:34:52 -0600"  >&lt;p&gt;This should be fixed again in CVS. Please verify. &lt;/p&gt;

&lt;p&gt;The current code is often using unnecessary parentheses but that&apos;s better than not using required ones. Possibly we coudl fix this by adding ParenthesizedExpr as a separate interface so that parentheses from the original expressions would be preserved in the AST we build.&lt;/p&gt;
</comment>
                    <comment id="84157" author="rgustav" created="Sat, 6 Jan 2007 01:01:05 -0600"  >&lt;p&gt;Appears to be working.  I&apos;m considering this issue fixed, feel free to close it.&lt;/p&gt;

&lt;p&gt;I don&apos;t know the value in identical preservation of input parenthesis.  Jaxen is surely not preserving axis shorthand, etc.  The parenthesis omitted in the original query are there by implication in the same fashion the axis are.  Seems inconsistent to treat these differently.&lt;/p&gt;

&lt;p&gt;I think removal of parenthesis and use of shorthand would be more for something like a getSimplifiedText().&lt;/p&gt;

&lt;p&gt;I&apos;ll be submitting a patch under the RFE you created in a short while.&lt;/p&gt;</comment>
                    <comment id="84173" author="elharo" created="Sat, 6 Jan 2007 05:51:31 -0600"  >&lt;p&gt;Fixed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 44 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>rgustav</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-176] Add Visitor Support</title>
                <link>http://jira.codehaus.org/browse/JAXEN-176</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Some people do seem to need an XPath Visitor so I&apos;m opening this issue to track discussions.&lt;/p&gt;

&lt;p&gt;The old API is simply not feasible. It is tightly coupled to an implementation we want to change. Furthermore, the implementation was buggy. It did not in fact visit everything it claimed to visit.&lt;/p&gt;

&lt;p&gt;I think a new API can perhaps follow the same design pattern. However it should be developed independently of the implementation. In particular, I suspect it should follow the BNF grammar of the XPath 1.0 spec rather than Jaxen&apos;s internal implementation of that grammar. &lt;/p&gt;

&lt;p&gt;An initial straw man proposal will follow.&lt;/p&gt;</description>
                <environment></environment>
            <key id="44674">JAXEN-176</key>
            <summary>Add Visitor Support</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 10 Dec 2006 09:10:35 -0600</created>
                <updated>Sat, 6 Jan 2007 11:56:15 -0600</updated>
                                    <version>2.0</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="82290" author="elharo" created="Sun, 10 Dec 2006 09:18:40 -0600"  >&lt;p&gt;Concrete use cases would help a great deal in the design of this API. Please submit some. &lt;/p&gt;</comment>
                    <comment id="82292" author="elharo" created="Sun, 10 Dec 2006 09:38:37 -0600"  >&lt;p&gt;A straw man to start discussion:&lt;/p&gt;


&lt;p&gt;&amp;lt;pre&amp;gt;package org.jaxen;&lt;/p&gt;

&lt;p&gt;public interface Visitor {

    public void visitExpr();
    public void visitOrExpr();
    public void visitAndExpr();
    public void visitEqualityExpr();
    public void visitRelationalExpr();
    public void visitAdditiveExpr();
    public void visitMultiplicativeExpr();
    public void visitUnaryExpr();
    public void visitUnionExpr();
    public void visitPathExpr();
    public void visitLocationPath();
    public void visitFilterExpr();
    public void visitPrimaryExpr();
    public void visitPredicate();
    public void visitRelativeLocationPath();
    public void visitAbsoluteLocationPath();
    public void visitVariableReference();
    public void visitLiteral();
    public void visitNumber();
    public void visitFunctionCall();
    public void visitFunctionName();
    public void visitArgument();
    public void visitStep();
    public void visitAxis();
    public void visitNodeTest();
    public void visitFunction();

}&amp;lt;/pre&amp;gt;&lt;/p&gt;

&lt;p&gt;I propose that we not distinguish abbreviate from unabbreviated location paths.&lt;/p&gt;


&lt;p&gt;We&apos;ll need to fill in the method arguments. For instance, visitAxis() might be&lt;/p&gt;


&lt;p&gt;    public void visitAxis(String name);&lt;/p&gt;

&lt;p&gt;or &lt;/p&gt;

&lt;p&gt;    public void visitAxis(int axis);&lt;/p&gt;


&lt;p&gt;Or perhaps there can be some other Expression interface we pass as argument to some of these methods; e.g.&lt;/p&gt;

&lt;p&gt;    public void visitOrExpr(Expression lhs, Expression rhs);&lt;/p&gt;

&lt;p&gt;However this would not be the same interface we use internally for parsing.&lt;/p&gt;

&lt;p&gt;Another question: do we want to visit top down or left to right? Tokenize or parse? Would mere tokenization satisfy the use cases? &lt;/p&gt;</comment>
                    <comment id="82303" author="bazzargh" created="Sun, 10 Dec 2006 14:03:12 -0600"  >&lt;p&gt;Some use cases. Some of these are a bit random, I&apos;m just thinking off the top of my head.&lt;/p&gt;

&lt;p&gt;Alex has documents that match a specific schema. He&apos;d like to apply this schema knowledge to the xpath, since he knows that &apos;//foo/bar&apos; can never happen, but customers keep typing that in.&lt;/p&gt;

&lt;p&gt;Bob sees his users type: //foo&lt;span class=&quot;error&quot;&gt;&amp;#91;@id=&amp;#39;x&amp;#39;&amp;#93;&lt;/span&gt;, but he knows that &apos;id(&quot;x&quot;)&lt;span class=&quot;error&quot;&gt;&amp;#91;name()=&amp;quot;foo&amp;quot;&amp;#93;&lt;/span&gt; is faster. He&apos;d like to rearrage the queries to reflect this. (theres a couple of other optimisations we don&apos;t do, like constant subexpression elimination. Similarly refactoring to use a custom function might be useful.)&lt;/p&gt;

&lt;p&gt;Charlie has a schematron schema for his document. He&apos;s renamed some of the elements, he&apos;d like to update the xpath expressions. (a bit far fetched, I guess - there are way easier ways to do this) &lt;/p&gt;

&lt;p&gt;Desmond presents a view to the user of a document like &apos;/foo/bar/baz&apos; (in a GUI tree element). Users can write xpaths to look up this tree. However, in the underlying model, the query should actually read &apos;/element&lt;span class=&quot;error&quot;&gt;&amp;#91;@name=&amp;quot;foo&amp;quot;&amp;#93;&lt;/span&gt;/element&lt;span class=&quot;error&quot;&gt;&amp;#91;@name=&amp;quot;bar&amp;quot;&amp;#93;&lt;/span&gt;/element&lt;span class=&quot;error&quot;&gt;&amp;#91;@name=&amp;quot;baz&amp;quot;&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;(I&apos;ve seen this a lot when people have decided they must have validatable documents that store generic things - the validation enforces having a small set of names for elements. Obviously they could work round this in jaxen by writing a Navigator. )&lt;/p&gt;

&lt;p&gt;Eric feels the need - the need for speed. He&apos;s decided to compile all his xpaths into classes to avoid some of the method-call overhead, using BCEL or ASM.&lt;/p&gt;

&lt;p&gt;Brian wants to write an xpath evaluator that stores no logic in the parse tree but just visits the nodes &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; (if we went with a javacc generated parser like I&apos;ve posted in the past we can get the AST nodes and the visitor API generated for us: &lt;a href=&quot;http://www.xrce.xerox.com/people/beesley/VisitorJJTree.html&quot;&gt;http://www.xrce.xerox.com/people/beesley/VisitorJJTree.html&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;Elliott is writing unit tests for xom. He&apos;d like to verify that xpaths parsed as he expected. (also &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;

&lt;p&gt;Sally has built a navigator on top of a SQL db. In a number of cases, she can translate the xpath directly into SQL; in all other cases she falls back on using a generic xpath. (this kind of thing - bypassing jaxen where possible - would be /exceedingly useful/ since it can be made very fast)&lt;/p&gt;
</comment>
                    <comment id="84198" author="elharo" created="Sat, 6 Jan 2007 11:27:59 -0600"  >&lt;p&gt;What is it we reall need here? Is it a Visitor specifically or just some means of inspecting the parsed AST? If the latter there may be other alternatives including simple tree traversal and iterator. &lt;/p&gt;</comment>
                    <comment id="84199" author="elharo" created="Sat, 6 Jan 2007 11:33:06 -0600"  >&lt;p&gt;Looking at Ryan Gustafson&apos;s patch for comparing parsed expressions, it strikes me that my initial straw man is broken. Indeed it went the wrong way from the original visitor pattern. Rather than making things simpler it made them more complex. &lt;/p&gt;

&lt;p&gt;One problem with the original Visitor code was that it tied jaxen to a very specific tree model. We could only visit certain things that matched the nodes in our tree. I think it would be better if rather than 12 or 20 different visit methods we had one, which took a generic Expr as an argument. Then we&apos;d have to add some functionality to Expr to allow it do a few more things. &lt;/p&gt;

&lt;p&gt;If we keep the Visitor (or Iterator, or Composite, or whatever) generic enough, then we won&apos;t be locked into one particular tree model and parsing pattern. &lt;/p&gt;</comment>
                    <comment id="84201" author="proyal" created="Sat, 6 Jan 2007 11:56:15 -0600"  >&lt;p&gt;yes, the Visitor was ultimately used to inspect the parsed AST. A highly-generic Visitor that just took Expr would be fine, and I think would provide all the functionality the users of it need.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 44 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-175] fails with  org.dom4j.InvalidXPathException: (...) Caused by: org/jaxen/dom4j/Dom4jXPath</title>
                <link>http://jira.codehaus.org/browse/JAXEN-175</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I get :&lt;br/&gt;
org.dom4j.InvalidXPathException: Invalid XPath expression: &apos;/hello/petstore&apos;. Caused by: org/jaxen/dom4j/Dom4jXPath&lt;br/&gt;
        at org.dom4j.xpath.DefaultXPath.parse(DefaultXPath.java:362)&lt;br/&gt;
        at org.dom4j.xpath.DefaultXPath.&amp;lt;init&amp;gt;(DefaultXPath.java:59)&lt;br/&gt;
        at org.dom4j.DocumentFactory.createXPath(DocumentFactory.java:230)&lt;br/&gt;
        at org.dom4j.tree.AbstractNode.createXPath(AbstractNode.java:207)&lt;br/&gt;
        at org.dom4j.tree.AbstractNode.selectSingleNode(AbstractNode.java:183)&lt;br/&gt;
        at Main.main(Main.java:17)&lt;/p&gt;

&lt;p&gt;Greetings&lt;br/&gt;
Alban&lt;/p&gt;</description>
                <environment>Debian Sid &lt;br/&gt;
java version &amp;quot;1.5.0_08&amp;quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_08-b03)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 1.5.0_08-b03, mixed mode, sharing)&lt;br/&gt;
&lt;br/&gt;
</environment>
            <key id="44614">JAXEN-175</key>
            <summary>fails with  org.dom4j.InvalidXPathException: (...) Caused by: org/jaxen/dom4j/Dom4jXPath</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="prahal">Alban Browaeys</reporter>
                        <created>Fri, 8 Dec 2006 05:00:27 -0600</created>
                <updated>Thu, 14 Dec 2006 06:17:17 -0600</updated>
                    <resolved>Sat, 9 Dec 2006 04:39:38 -0600</resolved>
                            <version>1.1</version>
                                                <component>dom4j</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="82048" author="prahal" created="Fri, 8 Dec 2006 05:03:37 -0600"  >&lt;p&gt;NB: -beta4 is not affected;&lt;br/&gt;
Cheers&lt;br/&gt;
Alban&lt;/p&gt;</comment>
                    <comment id="82049" author="prahal" created="Fri, 8 Dec 2006 05:04:43 -0600"  >&lt;p&gt;&lt;b&gt;Damn&lt;/b&gt;, I forgot.&lt;br/&gt;
I am using 1.1-beta11&lt;/p&gt;</comment>
                    <comment id="82196" author="elharo" created="Fri, 8 Dec 2006 14:09:40 -0600"  >&lt;p&gt;Could you please provide some more details on this? the raw stack trace I&apos;m afraid doesn&apos;t point to any obvious bugs. What code causes this?&lt;/p&gt;

&lt;p&gt;The stack trace does suggest the bug may by in dom4j rather than jaxen, though I&apos;m not sure about that. None of the lines of code in the stack trace seem to come from jaxen. It&apos;s org.dom4j.xpath.DefaultXPath that throws the exception. Have you tried reporting this against dom4j?  &lt;/p&gt;</comment>
                    <comment id="82222" author="bazzargh" created="Sat, 9 Dec 2006 03:42:05 -0600"  >&lt;p&gt;org.dom4j.InvalidXPathException: Invalid XPath expression: &apos;/hello/petstore&apos;. Caused by: org/jaxen/dom4j/Dom4jXPath&lt;/p&gt;

&lt;p&gt;This line is the clue. NoClassDefFoundException and ClassNotFoundException both print class names as their exception message, which then shows up as a class name where you&apos;d expect to see a message, like after &apos;Caused by: ...&apos;. You can tell the two apart because CNFE uses a &apos;.&apos; separator for the package name, and NCDFE uses a &apos;/&apos;. Hence, what you&apos;re seeing there is a NoClassDefFoundException being wrapped up in a &apos;nice&apos; error message.&lt;/p&gt;

&lt;p&gt;You don&apos;t have the correct version of jaxen or one of its dependencies on the classpath.&lt;/p&gt;</comment>
                    <comment id="82224" author="elharo" created="Sat, 9 Dec 2006 04:39:38 -0600"  >&lt;p&gt;There should be an option to close this as &quot;not our bug&quot; or &quot;invalid&quot; but since there isn&apos;t I&apos;m going to close it as Fixed. &lt;/p&gt;

&lt;p&gt;Ask on the dom4j or jaxen mailing list if you&apos;d like further help with this, but it doesn&apos;t look like our bug. &lt;/p&gt;</comment>
                    <comment id="82606" author="prahal" created="Wed, 13 Dec 2006 16:27:49 -0600"  >&lt;p&gt;Anyway upgrading to -beta12 fixed the issue. So this is really fixed.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Alban &lt;/p&gt;</comment>
                    <comment id="82641" author="marcusb" created="Thu, 14 Dec 2006 06:17:17 -0600"  >&lt;p&gt;This was actually an issue in the Debian package of dom4j. See&lt;br/&gt;
&lt;a href=&quot;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=403039&quot;&gt;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=403039&lt;/a&gt;&lt;br/&gt;
for details.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="24520" name="Main.java" size="819" author="prahal" created="Fri, 8 Dec 2006 05:00:27 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 47 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>prahal</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>marcusb</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-174] Implement XPath2</title>
                <link>http://jira.codehaus.org/browse/JAXEN-174</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;FAQ says concerning XPath 2 that &quot;little interest in this has been shown&quot;. I open this issue to give the opportunity to Jaxen users to show that it is not the case (I hope).&lt;/p&gt;

&lt;p&gt;Jaxen is the XPath engine used by htmlunit (&lt;a href=&quot;http://htmlunit.sf.net&quot;&gt;http://htmlunit.sf.net&lt;/a&gt;) and by WebTest (&lt;a href=&quot;http://webtest.canoo.com&quot;&gt;http://webtest.canoo.com&lt;/a&gt;) and I think that a lot of users of this 2 open source tools would be interested in XPath 2 support (or at least in some of the new features).&lt;/p&gt;

&lt;p&gt;I can imagine that it could be possible to first provide the new XPath functions (for example the regex functions) that don&apos;t necessary require changes to the internal data structure. WebTest already provides (in its own namespace) a matches function that should work like the one from the XPath2 spec. This function can be contributed to Jaxen without problem.&lt;/p&gt;</description>
                <environment></environment>
            <key id="44501">JAXEN-174</key>
            <summary>Implement XPath2</summary>
                <type id="5" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Wish</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mguillem">Marc Guillemot</reporter>
                        <created>Tue, 5 Dec 2006 10:43:26 -0600</created>
                <updated>Tue, 5 Dec 2006 10:43:26 -0600</updated>
                                                                    <component>core</component>
                        <due></due>
                    <votes>5</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 48 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>mguillem</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-173] Dep on old XOM</title>
                <link>http://jira.codehaus.org/browse/JAXEN-173</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Jaxen seems to depend on the obsolete XOM 1.0:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cvs.jaxen.codehaus.org/browse/jaxen/jaxen/project.xml?r=1.70&quot;&gt;http://cvs.jaxen.codehaus.org/browse/jaxen/jaxen/project.xml?r=1.70&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This XOM release in turn depends on ICU4J 2.6.1. This is also obsolete:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://icu.sourceforge.net/download/&quot;&gt;http://icu.sourceforge.net/download/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and corrupt:&lt;/p&gt;

&lt;p&gt;.../jdk6/bin/javap -classpath icu4j_2_6_1.jar com.ibm.icu.impl.data.LocaleElements_zh__PINYIN&lt;br/&gt;
java.lang.ClassFormatError: invalid constant type: 60&lt;br/&gt;
	at sun.tools.javap.ClassData.readCP(ClassData.java:180)&lt;br/&gt;
	&lt;span class=&quot;error&quot;&gt;&amp;#91;....&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;XOM 1.1 does not appear to have this bad dep:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://xom.dev.java.net/source/browse/xom/project.xml#rev1.2&quot;&gt;https://xom.dev.java.net/source/browse/xom/project.xml#rev1.2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Found when using a NetBeans development build with &quot;Mevenide&quot; Maven 2 integration on Hudson (dev.java.net) sources: transitive dependencies cause icu4j-2.6.1.jar to be scanned for code completion purposes, which writes an error to the log file due to the invalid class file.&lt;/p&gt;</description>
                <environment></environment>
            <key id="44249">JAXEN-173</key>
            <summary>Dep on old XOM</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="jglick">Jesse Glick</reporter>
                        <created>Tue, 28 Nov 2006 14:51:53 -0600</created>
                <updated>Tue, 28 Nov 2006 15:46:45 -0600</updated>
                    <resolved>Tue, 28 Nov 2006 15:46:45 -0600</resolved>
                                                            <component>xom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="81348" author="elharo" created="Tue, 28 Nov 2006 15:46:45 -0600"  >&lt;p&gt;None of this is Jaxen&apos;s problem. Jaxen deliberately supports XOM 1.0 or later. It does not require XOM 1.1 though it will work with it. Maven 1.0 does not allow us to say depends on 1.0 or 1.1. That&apos;s Maven&apos;s issue. We&apos;ll probably upgrade to Maven 2 that does allow us to do this next year, but not for the 1.1 release. &lt;/p&gt;

&lt;p&gt;I don&apos;t know what&apos;s up with ICU4J, though I suspect it may be your bug, not theirs. (Try using a non-beta JDK to compile and see what happens.) However there&apos;s nothing Jaxen can do about that, regardless of where the source of that problem lies. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 49 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>jglick</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-172] PredicateSet, class or interface</title>
                <link>http://jira.codehaus.org/browse/JAXEN-172</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I just noticed an inconsistency in org.jaxen.expr. Although almost every class has a public interface and non-public (or soon to be non-public) default implementation, PredicateSet is simply a concrete class. Should this be split into a PredicateSet interface and a DefaultPredicateSet class? For consistency if nothing else?&lt;/p&gt;

&lt;p&gt;If so, when? 1.1, 1.2 or 2.0?&lt;/p&gt;</description>
                <environment></environment>
            <key id="43687">JAXEN-172</key>
            <summary>PredicateSet, class or interface</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 13 Nov 2006 16:14:50 -0600</created>
                <updated>Wed, 15 Nov 2006 18:36:35 -0600</updated>
                                    <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="80267" author="elharo" created="Wed, 15 Nov 2006 18:36:35 -0600"  >&lt;p&gt;This class seems to use protected methods in place of package-protected. However interfaces can;t have protected methods or package protected methods, so these methods would either need to be public or we couldn&apos;t easily make the change. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 51 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-171] Axis class should use typesafe enum</title>
                <link>http://jira.codehaus.org/browse/JAXEN-171</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The org.jaxen.saxpath.Axis class should use the typesafe enum design pattern. &lt;/p&gt;</description>
                <environment></environment>
            <key id="43593">JAXEN-171</key>
            <summary>Axis class should use typesafe enum</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 9 Nov 2006 10:10:35 -0600</created>
                <updated>Sat, 26 Apr 2008 18:59:17 -0500</updated>
                                    <version>2.0</version>
                                <fixVersion>2.0</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-170] Predicated list and set</title>
                <link>http://jira.codehaus.org/browse/JAXEN-170</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The org.jaxen.expr.Predicated interface exposes the same content as both a list and a set. Why not simplify matters by using one or the other, probably just a set? &lt;/p&gt;</description>
                <environment></environment>
            <key id="43555">JAXEN-170</key>
            <summary>Predicated list and set</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 8 Nov 2006 12:08:41 -0600</created>
                <updated>Mon, 8 Jan 2007 12:26:19 -0600</updated>
                                    <version>1.2</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="84384" author="rgustav" created="Mon, 8 Jan 2007 12:19:30 -0600"  >&lt;p&gt;The terminology is confusing.  You&apos;re refering to org.jaxen.expr.PredicateSet, not java.util.Set, correct?  I would be concerned if the ordering of the predicates was lost using a java.util.Set.&lt;/p&gt;

&lt;p&gt;Looking at the Predicated interface and the DefaultStep implementation, addPredicate(Predicate), getPredicates(), would both appear to be convenience methods, for operations which exist on PredicateSet.  This could be simplified, either by removal of the PredicateSet access, or by the removal of these convenience methods, take your pick.&lt;/p&gt;

&lt;p&gt;Also, PredicateSet is not an interface, it is a class.  That seems inconsistent to me.  I would think it should either be a first class citizen (interface), or changed to an implementation utility class and removed from the interface API.  This would depend on the approach taken in the previous paragraph.&lt;/p&gt;</comment>
                    <comment id="84386" author="rgustav" created="Mon, 8 Jan 2007 12:26:19 -0600"  >&lt;p&gt;One could also argue for keep List only.  From the perspective of someone looking at the Jaxen AST only, PredicateSet adds no value, and the methods addPredicate(Predicate) and getPredicates() are the interesting ones.  The other methods on PredicateSet are implementation details.&lt;/p&gt;

&lt;p&gt;One could also consider rounding out the API with an removePredicate(Predicate) as an option, depending whether one is allowed to modify the List or not.  If done, consistency would dictate adding similar methods such as LocationPath.removeStep(Step), etc.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 43 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>rgustav</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-169] Add getOperator to BinaryExpr</title>
                <link>http://jira.codehaus.org/browse/JAXEN-169</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I&apos;m still looking but it seems that all the BinaryExpr subinterfaces have a &lt;/p&gt;

&lt;p&gt;public String getOperator();&lt;/p&gt;

&lt;p&gt;method. Should/could this be pulled up into BinaryExpr? &lt;/p&gt;</description>
                <environment></environment>
            <key id="43548">JAXEN-169</key>
            <summary>Add getOperator to BinaryExpr</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 8 Nov 2006 09:09:23 -0600</created>
                <updated>Thu, 9 Nov 2006 10:21:28 -0600</updated>
                    <resolved>Thu, 9 Nov 2006 10:21:28 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="79584" author="elharo" created="Wed, 8 Nov 2006 09:55:10 -0600"  >&lt;p&gt;UnionExpr doesn&apos;t have getOperator, but it probably should. DefaultUnionExpr does have it. &lt;/p&gt;</comment>
                    <comment id="79733" author="elharo" created="Thu, 9 Nov 2006 10:21:28 -0600"  >&lt;p&gt;I&apos;ve made the change. It&apos;s a little cleaner. Didn&apos;t break anything. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-168] BinaryExpr necessary?</title>
                <link>http://jira.codehaus.org/browse/JAXEN-168</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;BinaryExpr does not match any of the productions in XPath 1.0. Do we need it, or do we need it to be public? &lt;/p&gt;</description>
                <environment></environment>
            <key id="43547">JAXEN-168</key>
            <summary>BinaryExpr necessary?</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 8 Nov 2006 09:07:47 -0600</created>
                <updated>Thu, 9 Nov 2006 10:22:30 -0600</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="79734" author="elharo" created="Thu, 9 Nov 2006 10:22:30 -0600"  >&lt;p&gt;Deferring to 1.2&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-167] testcases can&apos;t be compiled with 1.4 JDK due to use of 1.5+ API</title>
                <link>http://jira.codehaus.org/browse/JAXEN-167</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Compiling of testcases (SimpleVariableContextTest.java) fail with 1.4 JDK because java.lang.Double.valueOf(double d) method was added only in 1.5. Attaching a patch that uses constructor Double(double) instead. See also &lt;a href=&quot;http://bugs.gentoo.org/show_bug.cgi?id=152400&quot;&gt;http://bugs.gentoo.org/show_bug.cgi?id=152400&lt;/a&gt; for original report.&lt;/p&gt;</description>
                <environment>Gentoo Linux, x86</environment>
            <key id="43164">JAXEN-167</key>
            <summary>testcases can&apos;t be compiled with 1.4 JDK due to use of 1.5+ API</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="caster">Vlastimil Babka</reporter>
                        <created>Thu, 26 Oct 2006 19:42:01 -0500</created>
                <updated>Fri, 27 Oct 2006 06:38:23 -0500</updated>
                    <resolved>Fri, 27 Oct 2006 06:38:23 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="78622" author="elharo" created="Fri, 27 Oct 2006 06:38:23 -0500"  >&lt;p&gt;Thanks for catching this. I&apos;ve fixed it in CVS. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="23673" name="jaxen-1.1_beta11-fix-jdk14-tests.patch" size="1040" author="caster" created="Thu, 26 Oct 2006 19:42:01 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 2 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>caster</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_10130" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Patch attached</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[Yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                    </customfields>
    </item>

<item>
            <title>[JAXEN-166] Remove MatrixConcat or get permission</title>
                <link>http://jira.codehaus.org/browse/JAXEN-166</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I&apos;ve pinged  James Pereira to get his permission for the MatrixConcat license change. If we don&apos;t receive that, we should remove this class before 1.1.&lt;/p&gt;</description>
                <environment></environment>
            <key id="42738">JAXEN-166</key>
            <summary>Remove MatrixConcat or get permission</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 15 Oct 2006 15:35:31 -0500</created>
                <updated>Fri, 27 Oct 2006 06:59:18 -0500</updated>
                    <resolved>Fri, 27 Oct 2006 06:59:18 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="78553" author="bayard" created="Thu, 26 Oct 2006 15:32:38 -0500"  >&lt;p&gt;Any word on this one?&lt;/p&gt;</comment>
                    <comment id="78623" author="elharo" created="Fri, 27 Oct 2006 06:40:17 -0500"  >&lt;p&gt;I have not received any response so I&apos;m going to take out this class. It&apos;s not really documented, and I&apos;m not sure if anyone&apos;s using it. If anyone can explain what it does, we can always reimplement it from scratch if we have to. &lt;/p&gt;</comment>
                    <comment id="78628" author="elharo" created="Fri, 27 Oct 2006 06:59:18 -0500"  >&lt;p&gt;For now I&apos;ve just removed the class. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 2 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>bayard</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-165] IterableFooAxis constructors</title>
                <link>http://jira.codehaus.org/browse/JAXEN-165</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Another old issue I&apos;m reprising from the  mailing list so we don&apos;t forget it again. &lt;/p&gt;

&lt;p&gt;The following code in IterableChildAxis has me a little confused:&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Constructor.&lt;br/&gt;
     *&lt;/li&gt;
	&lt;li&gt;@param value the axis value&lt;br/&gt;
     */&lt;br/&gt;
    public IterableChildAxis(int value) {
        super(value);
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Shouldn&apos;t value always be Axis.CHILD here? i.e. shouldn&apos;t this be:&lt;/p&gt;

&lt;p&gt;    public IterableChildAxis() {
        super(Axis.CHILD);
    }&lt;br/&gt;
&lt;br/&gt;
Is there any reason we might ever want to have an iterable child axis with a different code? If so, could someone fill in the JavaDoc to explain a little more explicitly what the axis value is? Thanks.&lt;br/&gt;
&lt;br/&gt;
If it should always be Axis.CHILD, backwards compatibility prevents us from removing the argument but we could ignore it like this:&lt;br/&gt;
&lt;br/&gt;
    public IterableChildAxis(int value) {        super(Axis.CHILD);    } }&lt;/p&gt;

&lt;p&gt;Or we could deprecate this constructor and add a no-args constructor.&lt;/p&gt;

&lt;p&gt;The other IterableXXXAxes have similar issues.&lt;/p&gt;</description>
                <environment></environment>
            <key id="42696">JAXEN-165</key>
            <summary>IterableFooAxis constructors</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Fri, 13 Oct 2006 12:41:03 -0500</created>
                <updated>Fri, 13 Oct 2006 12:41:24 -0500</updated>
                                    <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 4 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-164] MatrixConcatFunction needs unti tests</title>
                <link>http://jira.codehaus.org/browse/JAXEN-164</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The org.jaxen.function.ext.MatrixConcatFunction has no unit tests. It needs some.&lt;/p&gt;

&lt;p&gt;It wouldn&apos;t hurt to add some documentation either. As is, it&apos;s not obvious to me what this function is supposed to do o how it works. &lt;/p&gt;</description>
                <environment></environment>
            <key id="42614">JAXEN-164</key>
            <summary>MatrixConcatFunction needs unti tests</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 11 Oct 2006 17:00:22 -0500</created>
                <updated>Wed, 11 Oct 2006 17:00:22 -0500</updated>
                                    <version>1.1</version>
                                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 4 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-163] Automate deployment</title>
                <link>http://jira.codehaus.org/browse/JAXEN-163</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;It might be possible to use the Ant copy task to automate the deployment of the build to the Web DAV URLs:&lt;/p&gt;

&lt;p&gt;site: &lt;a href=&quot;https://dav.codehaus.org/jaxen/&quot;&gt;https://dav.codehaus.org/jaxen/&lt;/a&gt;&lt;br/&gt;
distro: &lt;a href=&quot;https://dav.codehaus.org/dist/jaxen/&quot;&gt;https://dav.codehaus.org/dist/jaxen/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explore this possibility.&lt;/p&gt;</description>
                <environment>Maven 1.0.2</environment>
            <key id="42519">JAXEN-163</key>
            <summary>Automate deployment</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 9 Oct 2006 08:16:08 -0500</created>
                <updated>Mon, 9 Oct 2006 08:16:08 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 4 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-162] Announce mailing list is spam firendly</title>
                <link>http://jira.codehaus.org/browse/JAXEN-162</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The jaxen announce mailing list archived at &lt;a href=&quot;http://archive.jaxen.codehaus.org/announce/&quot;&gt;http://archive.jaxen.codehaus.org/announce/&lt;/a&gt; seems to be nothing but viruses and spam. We should make it moderated, and possibly clean up the archive. Who has privileges to do this? &lt;/p&gt;</description>
                <environment>&lt;a href=&quot;http://archive.jaxen.codehaus.org/announce/&quot;&gt;http://archive.jaxen.codehaus.org/announce/&lt;/a&gt;</environment>
            <key id="42517">JAXEN-162</key>
            <summary>Announce mailing list is spam firendly</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 9 Oct 2006 08:10:18 -0500</created>
                <updated>Mon, 9 Oct 2006 08:12:43 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="77042" author="elharo" created="Mon, 9 Oct 2006 08:12:43 -0500"  >&lt;p&gt;Once this is done, we can restore the announcement mailing list to the site by editing project.xml to uncomment its info. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 4 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-161] Generate POMs from maven</title>
                <link>http://jira.codehaus.org/browse/JAXEN-161</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The current Maven build is not making pom files. It should. &lt;/p&gt;</description>
                <environment>Maven 1.0.2</environment>
            <key id="42496">JAXEN-161</key>
            <summary>Generate POMs from maven</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 8 Oct 2006 17:33:29 -0500</created>
                <updated>Mon, 9 Oct 2006 08:08:28 -0500</updated>
                    <resolved>Mon, 9 Oct 2006 08:08:28 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="77040" author="elharo" created="Mon, 9 Oct 2006 08:08:28 -0500"  >&lt;p&gt;Fixed by adding a postGoal to maven.xml:&lt;/p&gt;

&lt;p&gt;    &amp;lt;postGoal name=&quot;dist:build-bin&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;ant:copy &lt;br/&gt;
          tofile=&quot;${maven.build.dir}/distributions/jaxen-${pom.currentVersion}.pom&quot; &lt;br/&gt;
          file=&quot;project.xml&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;/postGoal&amp;gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 4 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-160] Expr.getText problems on DefaultVariableReferenceExpr and DefaultPathExpr</title>
                <link>http://jira.codehaus.org/browse/JAXEN-160</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;1. In the org.jaxen.saxpath.base.XPathReader class at line 308, if the colon is not found, the prefix is set to an empty string while in the DefaultVariableReferenceExpr::getText() the test is (prefix == null).&lt;/p&gt;

&lt;p&gt;2. For an expression like &quot;$var1/foo&quot; the PathExpr::getText() produce &quot;$var1child::foo&quot; instead of &quot;$var1/child::foo&quot;.&lt;/p&gt;</description>
                <environment>Windows XP, jdk 1.5, jaxen 1.1 beta 10</environment>
            <key id="42139">JAXEN-160</key>
            <summary>Expr.getText problems on DefaultVariableReferenceExpr and DefaultPathExpr</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="pcasar">Paolo Casarini</reporter>
                        <created>Fri, 29 Sep 2006 11:39:06 -0500</created>
                <updated>Fri, 6 Oct 2006 08:40:12 -0500</updated>
                    <resolved>Fri, 6 Oct 2006 08:40:12 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="76475" author="elharo" created="Tue, 3 Oct 2006 11:03:59 -0500"  >&lt;p&gt;Can you supply test cases that trigger these two bugs? &lt;/p&gt;</comment>
                    <comment id="76479" author="elharo" created="Tue, 3 Oct 2006 11:25:36 -0500"  >&lt;p&gt;I&apos;ve written a test case and committed fixes for the getText() parts of the bug, I still need a test case and fix for the toString parts of the bug. &lt;/p&gt;</comment>
                    <comment id="76780" author="pcasar" created="Fri, 6 Oct 2006 03:41:39 -0500"  >&lt;p&gt;I&apos;ve provied a new version of the DefaultXPathExprTest.testJAXEN160 that add a test for the toString case.&lt;/p&gt;</comment>
                    <comment id="76794" author="elharo" created="Fri, 6 Oct 2006 04:58:33 -0500"  >&lt;p&gt;Can someone check the proposed test case:&lt;/p&gt;

&lt;p&gt;    public void testJAXEN160()&lt;br/&gt;
      throws JaxenException, ParserConfigurationException {
        
        DOMXPath xpath = new DOMXPath(&quot;$var1/foo&quot;);
        Expr expr = xpath.getRootExpr();
        assertEquals(&quot;$var1/child::foo&quot;, expr.getText());
        assertEquals(&quot;[(DefaultPathExpr): [(DefaultVariableReferenceExpr): var1], [(DefaultRelativeLocationPath): [(DefaultNameStep): :foo]]]&quot;, expr.toString());
    }&lt;/p&gt;

&lt;p&gt;Is that in fact the result we want? The &lt;span class=&quot;error&quot;&gt;&amp;#91;(DefaultNameStep): :foo&amp;#93;&lt;/span&gt; bit looks suspicious, but I&apos;m really not sure what this method is supposed to produce in the first place. &lt;/p&gt;</comment>
                    <comment id="76815" author="elharo" created="Fri, 6 Oct 2006 08:40:12 -0500"  >&lt;p&gt;I think this is fully fixed now. Reopen if you notice any further problems. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="23177" name="DefaultPathExpr.patch" size="468" author="pcasar" created="Fri, 29 Sep 2006 11:39:06 -0500" />
                    <attachment id="23178" name="DefaultVariableReferenceExpr.patch" size="609" author="pcasar" created="Fri, 29 Sep 2006 11:39:07 -0500" />
                    <attachment id="23302" name="DefaultXPathExprTest.java" size="1532" author="pcasar" created="Fri, 6 Oct 2006 03:41:39 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 5 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>pcasar</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_10130" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Patch attached</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[Yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                    </customfields>
    </item>

<item>
            <title>[JAXEN-159] PathExpr copy not possible</title>
                <link>http://jira.codehaus.org/browse/JAXEN-159</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;It is not possible to build a PathExpr copy starting from a PathExpr that already exists.&lt;/p&gt;

&lt;p&gt;I&apos;ve modified the XPathFactory.java and DefaultXPathFactory changing the createPathExpr signature: I&apos;ve changed the type of the filterExpr parameter from FilterExpr to Expr. In fact the PathExpr::getFilterExpr returns Expr.&lt;/p&gt;</description>
                <environment>Windows XP, jdk 1.5</environment>
            <key id="42138">JAXEN-159</key>
            <summary>PathExpr copy not possible</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="pcasar">Paolo Casarini</reporter>
                        <created>Fri, 29 Sep 2006 11:34:01 -0500</created>
                <updated>Thu, 12 Oct 2006 03:26:40 -0500</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="76473" author="elharo" created="Tue, 3 Oct 2006 11:01:14 -0500"  >&lt;p&gt;We do not want to make any signature level changes at this time. &lt;/p&gt;

&lt;p&gt;Beyond that, please explain the use case for this change. It is not apparent to me why you need to do this. &lt;/p&gt;</comment>
                    <comment id="76474" author="elharo" created="Tue, 3 Oct 2006 11:02:18 -0500"  >&lt;p&gt;Deferring to at least 1.2. &lt;/p&gt;</comment>
                    <comment id="76635" author="pcasar" created="Thu, 5 Oct 2006 02:49:05 -0500"  >&lt;p&gt;I&apos;m working with jaxen to build an IndentityVisitor that it is able to build a copy of a parsed expression. This visitor implements the Visitor interface but to build a copy of a PathExpr I&apos;ve modified the XPathFactory.java and DefaultXPathFactory changing the createPathExpr.&lt;/p&gt;

&lt;p&gt;The use case is my implementation of the Visitor.visit(PathExpr) method:&lt;/p&gt;

&lt;p&gt;public void visit(PathExpr expr) {&lt;br/&gt;
    try {
        cloned = xpathFactory.createPathExpr(
                    clone(expr.getFilterExpr()),
                    clone(expr.getLocationPath()));
    } catch (JaxenException e) {
        manageException(e);
    }&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;If the full IdentityVisitor code could be useful, I can send it to you.&lt;/p&gt;

&lt;p&gt;In my opinion the createPathExpr factory method should require and Expr as first parameter as DefaultPathExpr constructor does and as PathExpr.getFilterExpr method returns.&lt;/p&gt;</comment>
                    <comment id="76816" author="elharo" created="Fri, 6 Oct 2006 08:42:19 -0500"  >&lt;p&gt;1. Why do you want to build a copy of a parsed expression?&lt;/p&gt;

&lt;p&gt;2. Can you get away with just reparsing the text form of the expression?&lt;/p&gt;</comment>
                    <comment id="77405" author="pcasar" created="Thu, 12 Oct 2006 03:26:40 -0500"  >&lt;p&gt;I try to answer to the first question:&lt;/p&gt;

&lt;p&gt;I&apos;m working on a compiler and I need to trasform XPATH expressions written with some extensions defined in the source language in  &quot;standard&quot; XPATH expression to be executed by jaxen.&lt;/p&gt;

&lt;p&gt;For example, we could imagine an XPATH extension that introduce the function &quot;sum(string numberVarNameA, string numberVarNameB):number&quot; that could be traslated into the expression &quot;$a + $b&quot;.&lt;/p&gt;

&lt;p&gt;To make the transformation required in compile time I use an extension of my IdentityVisitor that trasform a FunctionCallExpr (when the functionName is &quot;sum&quot;) to the equivalent sum XPATH expression.&lt;/p&gt;

&lt;p&gt;The createPathExpr in xpathFactory is the only method that make not possible to implement my IndetityVisitor.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="23175" name="DefaultXPathFactory.patch" size="513" author="pcasar" created="Fri, 29 Sep 2006 11:34:01 -0500" />
                    <attachment id="23174" name="XPathFactory.patch" size="508" author="pcasar" created="Fri, 29 Sep 2006 11:34:01 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 4 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>pcasar</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_10130" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Patch attached</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[Yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                    </customfields>
    </item>

<item>
            <title>[JAXEN-158] JDOM navigator does selects with null namespace</title>
                <link>http://jira.codehaus.org/browse/JAXEN-158</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;From Dominik Krupp:&lt;/p&gt;

&lt;p&gt;here is an even simpler but runnable example.&lt;br/&gt;
All three paths have the same Xpath namespace scopes. I still think&lt;br/&gt;
there should be zero selected nodes with the &quot;/root&quot; path, but there is one.&lt;/p&gt;

&lt;p&gt;My output with JDOM 1.0 and  Jaxen 1.1beta10 in classpath:&lt;/p&gt;

&lt;p&gt;Element root has namespace URI: &lt;a href=&quot;http://mynamespace.org/&quot;&gt;http://mynamespace.org/&lt;/a&gt;&lt;br/&gt;
Size of node set (/root): 1&lt;br/&gt;
Size of node set (/my:root): 1&lt;br/&gt;
Size of node set (/foreign:root): 0&lt;/p&gt;

&lt;p&gt;Program producing that output:&lt;/p&gt;

&lt;p&gt;import java.util.List;&lt;br/&gt;
import org.jaxen.JaxenException;&lt;br/&gt;
import org.jaxen.XPath;&lt;br/&gt;
import org.jaxen.jdom.JDOMXPath;&lt;br/&gt;
import org.jdom.Document;&lt;br/&gt;
import org.jdom.Element;&lt;br/&gt;
import org.jdom.Namespace;&lt;/p&gt;

&lt;p&gt;public class NullNamespaceXpath {&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) {&lt;br/&gt;
        Namespace my = Namespace.getNamespace(&quot;my&quot;,&lt;br/&gt;
&quot;http://mynamespace.org/&quot;);&lt;br/&gt;
        Document doc = new Document();&lt;br/&gt;
        Element root = new Element(&quot;root&quot;, my);&lt;br/&gt;
        doc.setRootElement(root);&lt;br/&gt;
        try {
            XPath nullNamespacePath = new JDOMXPath(&quot;/root&quot;);
            nullNamespacePath.addNamespace(&quot;my&quot;, &quot;http://mynamespace.org/&quot;);
            nullNamespacePath.addNamespace(&quot;foreign&quot;,
                    &quot;http://foreignnamespace.org/&quot;);

            XPath myNamespacePath = new JDOMXPath(&quot;/my:root&quot;);
            myNamespacePath.addNamespace(&quot;my&quot;, &quot;http://mynamespace.org/&quot;);
            myNamespacePath.addNamespace(&quot;foreign&quot;,
                    &quot;http://foreignnamespace.org/&quot;);

            XPath foreignNamespacePath = new JDOMXPath(&quot;/foreign:root&quot;);
            foreignNamespacePath.addNamespace(&quot;my&quot;,
&quot;http://mynamespace.org/&quot;);
            foreignNamespacePath.addNamespace(&quot;foreign&quot;,
                    &quot;http://foreignnamespace.org/&quot;);

            List selectedNodesNullNamespace = nullNamespacePath
                    .selectNodes(doc);
            List selectedNodesMyNamespace =
myNamespacePath.selectNodes(doc);
            List selectedNodesForeignNamespace = foreignNamespacePath
                    .selectNodes(doc);

            System.out.println(&quot;Element root has namespace URI: &quot;
                    + root.getNamespaceURI());
            System.out.println(&quot;Size of node set (/root): &quot;
                    + selectedNodesNullNamespace.size());
            System.out.println(&quot;Size of node set (/my:root): &quot;
                    + selectedNodesMyNamespace.size());
            System.out.println(&quot;Size of node set (/foreign:root): &quot;
                    + selectedNodesForeignNamespace.size());
        } catch (JaxenException e) {
            e.printStackTrace();
        }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

</description>
                <environment></environment>
            <key id="41746">JAXEN-158</key>
            <summary>JDOM navigator does selects with null namespace</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 19 Sep 2006 14:36:46 -0500</created>
                <updated>Thu, 21 Sep 2006 06:45:59 -0500</updated>
                    <resolved>Thu, 21 Sep 2006 06:45:59 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>jdom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="75355" author="dksc" created="Thu, 21 Sep 2006 03:38:15 -0500"  >&lt;p&gt;I&apos;m not a jaxen committer but I think it could suffice to add the following lines in org.jaxen.jdom.DocumentNavigator#getChildAxisIterator(Object,String,String,String) to fix the problem, because it only occurs when the context node is a Document, not when it is an Element.&lt;/p&gt;

&lt;p&gt;----------------------------------------------------&lt;br/&gt;
 else if(el.getNamespace() != null) {
            	return JaxenConstants.EMPTY_ITERATOR;
 }&lt;br/&gt;
----------------------------------------------------&lt;/p&gt;

&lt;p&gt;Insert just before the following line&lt;br/&gt;
----------------------------------------------------&lt;br/&gt;
return new SingleObjectIterator(el);&lt;br/&gt;
----------------------------------------------------&lt;/p&gt;</comment>
                    <comment id="75364" author="elharo" created="Thu, 21 Sep 2006 05:29:42 -0500"  >&lt;p&gt;While that would fix this issue, it breaks 21 other unit tests. Still that gives me an idea where to look to fix this, and that&apos;s helpful. &lt;/p&gt;

&lt;p&gt;P.S. Even if you aren&apos;t a committer you can still check out the code, and run the tests; then submit a patch if you figure out how to fix this. That&apos;s how people get to be committers. &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="75369" author="elharo" created="Thu, 21 Sep 2006 06:45:41 -0500"  >&lt;p&gt;This should be fixed now. The fix you proposed was very close. However, in JDOM no namespace is indicated by the constant Namespace.NO_NAMESPACE, not by null. Once I changed &amp;lt;code&amp;gt;el.getNamespace() != null&amp;lt;/code&amp;gt; to &amp;lt;code&amp;gt;el.getNamespace() != Namespace.NO_NAMESPACE&amp;lt;/code&amp;gt; all tests passed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 7 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>dksc</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-157] Push Beta 10 POM and JAR out to central maven repository at IBiblio</title>
                <link>http://jira.codehaus.org/browse/JAXEN-157</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/poms/&quot;&gt;http://www.ibiblio.org/maven/jaxen/poms/&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/jars/&quot;&gt;http://www.ibiblio.org/maven/jaxen/jars/&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="41298">JAXEN-157</key>
            <summary>Push Beta 10 POM and JAR out to central maven repository at IBiblio</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 7 Sep 2006 09:01:53 -0500</created>
                <updated>Sat, 26 Apr 2008 19:01:32 -0500</updated>
                    <resolved>Sat, 26 Apr 2008 19:01:32 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="132757" author="elharo" created="Sat, 26 Apr 2008 19:01:32 -0500"  >&lt;p&gt;No longer relevant now that 1.1.1 is out.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 28 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-156] Changing the node-set does not update the position or node size</title>
                <link>http://jira.codehaus.org/browse/JAXEN-156</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;According to Nikil Dinesh,&lt;/p&gt;

&lt;p&gt;I was trying to implement some extension functions which rely on the&lt;br/&gt;
context. Here is a snippet of the call method:&lt;/p&gt;

&lt;p&gt;int position = context.getPosition();&lt;br/&gt;
int size = context.getSize();&lt;br/&gt;
Object node = context.getNodeSet().get(position -1)&lt;/p&gt;

&lt;p&gt;However, this crashes with a java.lang.IndexOutOfBoundsException. The&lt;br/&gt;
values were as follows:&lt;/p&gt;

&lt;p&gt;position = 2, size=26, context.getNodeSet().size()=1&lt;/p&gt;

&lt;p&gt;I looked through a couple of places in the source, where setNodeSet is invoked, for example, DefaultAbsoluteLocationPath.java, LocationPathPattern.java. It seems like the position and size are not updated when the node set is.&lt;/p&gt;</description>
                <environment></environment>
            <key id="41192">JAXEN-156</key>
            <summary>Changing the node-set does not update the position or node size</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 4 Sep 2006 17:39:42 -0500</created>
                <updated>Fri, 27 Oct 2006 15:06:09 -0500</updated>
                    <resolved>Fri, 27 Oct 2006 15:06:09 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="74063" author="elharo" created="Mon, 4 Sep 2006 17:41:56 -0500"  >&lt;p&gt;A request for further information and a test case for this issue was not responded to. However, just looking at the code  for org.jaxen.Context it does seem questionable. Changing the context&apos;s node-set should absolutely update the node-set&apos;s size and probably its position. What the new position should be, I&apos;m not sure. Maybe 0? What if the node-set has size zero? That could be tricky. This needs to be investigated further. &lt;/p&gt;</comment>
                    <comment id="74064" author="elharo" created="Mon, 4 Sep 2006 17:44:59 -0500"  >&lt;p&gt;Why do we even allow the size to be set independently of the node-set? i.e. why is there both a setSize and a setNodeSet method? Is the size ever anything other than the size of the current node-set? I&apos;m tempted to rewrite getSize() so it just returns this.nodeSet.size() and deprecate setSize while turning ti into a do-nothing method. &lt;/p&gt;</comment>
                    <comment id="74269" author="elharo" created="Thu, 7 Sep 2006 10:38:31 -0500"  >&lt;p&gt;This is used in one place. PredicateSet does change the position and the size independently of changing the node-set. So we can&apos;t just remove setSize and return this.nodeSet.size() from getSize(). However, I do expect that when changing the node-set we do need to adjust the size, and possibly the position. The size shoudl be set to just the size of the new node-set. I&apos;m not sure what the position should be set to, perhaps 0 or -1?&lt;/p&gt;</comment>
                    <comment id="74278" author="bazzargh" created="Thu, 7 Sep 2006 11:11:03 -0500"  >&lt;p&gt;I think this is just more ancient wierdness in the APIs - its really pretty nasty that context is mutable at all, we could handle all of what it should be doing by passing more method parameters. A long time ago I did try to refactor context to &apos;make sense&apos; and it just broke predicates, as you&apos;ve seen.&lt;/p&gt;

&lt;p&gt;Another couple of things make me uncomfortable about trying to fix this properly:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if you&apos;re defining extension functions in jaxp (say) you don&apos;t get access to any context information, just the arguments. Things that rely on context may break in future. (in a jaxp implementation, functions in the default namespace arent replaceable, and so can use a different API that gets access to the context)&lt;/li&gt;
	&lt;li&gt;secondly, keeping size() up-to-date is bad for performance, since it requires enumerating the entire nodeset. While jaxen currently does do that, it shouldn&apos;t.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d be tempted to punt this to a future version where the problem will be made moot by an API change.&lt;/p&gt;</comment>
                    <comment id="77700" author="elharo" created="Sun, 15 Oct 2006 15:41:32 -0500"  >&lt;p&gt;Bleah. I see what you mean. If we pass in a context node set object, then since we don;t make a defensive copy that node-set can be changed externally later, which could change the size and position. That&apos;s evil. &lt;/p&gt;

&lt;p&gt;I think I agree that we can&apos;t fully fix this absent API changes that we should not make at this late date.  However, I do think we can make some improvements. It&apos;s easy enough for setNodeSet to change the size. &lt;/p&gt;

&lt;p&gt;The position is harder, but I&apos;m thinking we&apos;ll reset that to 0 either:&lt;/p&gt;

&lt;p&gt;A, Every time the node-set is changed&lt;br/&gt;
B. Whenever the node-set is set to a size smaller than the current position.&lt;/p&gt;

&lt;p&gt;Would anyone care to argue for either of these two or for a third option such as setting the position to -1 when the node-set is changed?&lt;/p&gt;</comment>
                    <comment id="77701" author="elharo" created="Sun, 15 Oct 2006 15:50:10 -0500"  >&lt;p&gt;FWIW, neither of the following two changes break any unit tests:&lt;/p&gt;

&lt;p&gt;    public void setNodeSet(List nodeSet)&lt;/p&gt;
    {
        this.nodeSet = nodeSet;
        this.size    = nodeSet.size();
        this.position = -1;
    }

&lt;p&gt;    public void setNodeSet(List nodeSet)&lt;/p&gt;
    {
        this.nodeSet = nodeSet;
        this.size    = nodeSet.size();
        this.position = 0;
    }

&lt;p&gt;Nor does this:&lt;/p&gt;

&lt;p&gt;    public void setNodeSet(List nodeSet)&lt;/p&gt;
    {
        this.nodeSet = nodeSet;
        this.size    = nodeSet.size();
        if (position &amp;gt;= size) this.position = 0;
    }

&lt;p&gt;We should probably go with the last, as it&apos;s the least radical change.&lt;/p&gt;

&lt;p&gt;If nothing else, I am definitely going to add some JavaDoc warning clients to call setSize and setPosition after calling setNodeSet. &lt;/p&gt;</comment>
                    <comment id="78696" author="elharo" created="Fri, 27 Oct 2006 15:06:09 -0500"  >&lt;p&gt;I&apos;ve fixed this as far as it will be fixed for 1.1. We can revisit the API later and try to make the context immutable.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 2 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-155] Upgrade Cobertura plugin to 1.2</title>
                <link>http://jira.codehaus.org/browse/JAXEN-155</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Use the latest cobertura plugin, 1.2 for the plugin and 1.8 for Cobertura I think&lt;/p&gt;</description>
                <environment></environment>
            <key id="41157">JAXEN-155</key>
            <summary>Upgrade Cobertura plugin to 1.2</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 2 Sep 2006 13:13:54 -0500</created>
                <updated>Sun, 15 Oct 2006 15:27:25 -0500</updated>
                    <resolved>Sun, 15 Oct 2006 15:27:25 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 10 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-154] Decoupling Navigator and XPath</title>
                <link>http://jira.codehaus.org/browse/JAXEN-154</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Brian Ewins noted this on the mailing list about a year ago. Adding his comments here so we don&apos;t losr track fo them:&lt;/p&gt;

&lt;p&gt;The one cycle that always bothers me is the one between &apos;Navigator&apos; and &apos;XPath&apos;.&lt;/p&gt;

&lt;p&gt;For comparison, first here&apos;s how things work in jaxp:&lt;br/&gt;
//in jaxen we could use OM uris which are Navigator class names.&lt;br/&gt;
String uri = &quot;urn:jaxen:my.funky.jaxen.Navigator&quot;;&lt;br/&gt;
XPathFactory xpf = XPathFactory.newInstance(uri);&lt;br/&gt;
// set up the evaluation context&lt;br/&gt;
XPath xpath = xpf.newXPath();&lt;br/&gt;
xpath.setXPathFunctionResolver(fresolver);&lt;br/&gt;
xpath.setXPathVariableResolver(vresolver);&lt;br/&gt;
// because we have the resolvers set up we can do all var/fn resolving&lt;br/&gt;
// in the /parsing/ stage (unless someone made the mistake of adding&lt;br/&gt;
an &apos;eval&apos; function!)&lt;br/&gt;
XPathExpression xexpr = xpath.compile(expression);&lt;br/&gt;
// the compiled expression needs the navigator.&lt;br/&gt;
// other evaluation paths are just sugar for getting the compiled&lt;br/&gt;
expression first.&lt;br/&gt;
Object result1 = xexpr.evaluate(context1, returnType);&lt;br/&gt;
Object result2 = xexpr.evaluate(context2, returnType);&lt;/p&gt;

&lt;p&gt;The Navigator only appeared in that as something other classes depended on,&lt;br/&gt;
it never depends on the public xpath api, or on the parser. Contrast&lt;br/&gt;
this with jaxen:&lt;/p&gt;

&lt;p&gt;Navigator nav = new MyNavigator();&lt;br/&gt;
// option 1: compile using navigator&lt;br/&gt;
XPath xpath = nav.parseXPath(expression);&lt;br/&gt;
// option 2: create by hand from base xpath&lt;br/&gt;
XPath xpath = new BaseXPath(expression, nav);&lt;br/&gt;
// option 3: use OM-specific xpath implementation&lt;br/&gt;
XPath xpath = new MyXPath(nav);&lt;br/&gt;
Object result1 = xpath.stringValueOf(context1);&lt;br/&gt;
// jaxen has very late binding. This means that we can&apos;t do the&lt;br/&gt;
// lookups earlier, to eliminate constant expressions etc.&lt;br/&gt;
xpath.setFunctionContext(fc);&lt;br/&gt;
xpath.setVariableContext(vc);&lt;br/&gt;
Object result2 = xpath.stringValueOf(context2);&lt;/p&gt;

&lt;p&gt;So, &quot;option 1&quot; makes the navigator depend on the parser and the xpath&lt;br/&gt;
implementation, which in turn depends on the navigator - a cycle.&lt;br/&gt;
Option 3 is just sugar for option 2. Option 2 is a little grotty&lt;br/&gt;
compared to jaxp, a factory method returning an XPath given a string&lt;br/&gt;
and a navigator would be just as good.&lt;/p&gt;

&lt;p&gt;Another cause of odd dependencies is the &apos;eval&apos; function. This causes&lt;br/&gt;
the &apos;function&apos; package to depend on &apos;saxpath&apos;, which depends on &apos;expr&apos;&lt;br/&gt;
which depends on &apos;function&apos;... ew. And once you&apos;re rid of &apos;eval&apos;,&lt;br/&gt;
theres no longer a reason why fc/vc need to be bound so late, allowing&lt;br/&gt;
some optimisations.&lt;/p&gt;

&lt;p&gt;Finally, theres the &apos;evaluate/simplify&apos; methods in the expr package.&lt;br/&gt;
In order to break the dependency between the parser and the runtime,&lt;br/&gt;
we have saxpath calling a handler which creates objects of a given&lt;br/&gt;
interface, which can be evaluated directly. However, because saxpath&lt;br/&gt;
is borked, it really only works properly if you always create the tree&lt;br/&gt;
with the expr.Default* objects. An alternative approach would be to&lt;br/&gt;
have separate parser/evaluator packages both depending on a concrete&lt;br/&gt;
AST package with visitor support - all of the &apos;BlahExpr&apos; classes can&lt;br/&gt;
be concrete so theres no need for all those interfaces to break the&lt;br/&gt;
cycles. However, I don&apos;t think the current split is responsible for&lt;br/&gt;
any cycles.&lt;/p&gt;

&lt;p&gt;I think if you drop that Navigator.parseXPath method and remove the&lt;br/&gt;
&apos;eval&apos; function (which is completely unnecessary IMHO) most of the&lt;br/&gt;
cycles can be made to disappear.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="41156">JAXEN-154</key>
            <summary>Decoupling Navigator and XPath</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 2 Sep 2006 12:59:17 -0500</created>
                <updated>Sat, 2 Sep 2006 12:59:17 -0500</updated>
                                                    <fixVersion>1.2</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 10 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-153] jaxenException should not extend SAXPathException</title>
                <link>http://jira.codehaus.org/browse/JAXEN-153</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Found this unresolved issue in my old e-mail. Adding here so we won&apos;t lose track of it again:&lt;/p&gt;

&lt;p&gt;Recently I noticed that JaxenException now extends SAXPathException. Does this make sense? It feels to me that maybe it should be the other way around, if these two classes have an inheritance relationship at all. Possibly they should each be independent classes. Ideally I&apos;d like to hide the org.jaxen.saxpath classes completely from public view. However, this prevents that. Should a casual user of Jaxen (i.e. someone not implementing their own navigator class or using org.jaxen.saxpath directly) encounter SAXPathExceptions, or should JaxenException be sufficient?&lt;/p&gt;

&lt;p&gt;Compatibility wise the SAXPathException class has changed packages since 1.0, so changing the inheritance relationship would not be an additional incompatibility beyond what&apos;s already there.&lt;/p&gt;

&lt;p&gt;I plan to fix this in beta 11. If anyone would rather not see this change, comment here. Thanks.&lt;/p&gt;</description>
                <environment></environment>
            <key id="41155">JAXEN-153</key>
            <summary>jaxenException should not extend SAXPathException</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 2 Sep 2006 12:54:13 -0500</created>
                <updated>Fri, 8 Sep 2006 14:11:43 -0500</updated>
                                    <version>1.1</version>
                                <fixVersion>1.2</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="74254" author="elharo" created="Thu, 7 Sep 2006 10:02:04 -0500"  >&lt;p&gt;I&apos;ve taken my first crack at fixing this and all tests are passing. Furthermore, the SAXPath packages are now pretty effectively decoupled from the other jaxen packages. The jaxen packages are less coupled to the SAXPath packages. This prevents a casual user (i.e. someone not implementing a navigator) from encountering or worrying about SAXPath at all.&lt;/p&gt;

&lt;p&gt;There is one downside to this change. It breaks pretty much all existing navigators. The fix, however, is straight-forward. You just need to change &quot;throws SAXPathException&quot; to &quot;throws JaxenException&quot; on one method, parseXPath. No other changes should be needed in third party code. Still, this makes me a little nervous. Should we:&lt;/p&gt;

&lt;p&gt;1. Check the code in.&lt;br/&gt;
2. Mark it Won&apos;t Fix and accept the confusing an irrational exception structure.&lt;br/&gt;
3. Defer this to 1.2 or 2.0..&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                    <comment id="74277" author="proyal" created="Thu, 7 Sep 2006 11:08:09 -0500"  >&lt;p&gt;I say defer until 1.2/2.0 .. I&apos;d rather not force this breaking change on users so late in a release cycle. It can be the first thing we do after shipping 1.1&lt;/p&gt;</comment>
                    <comment id="74364" author="elharo" created="Fri, 8 Sep 2006 14:11:43 -0500"  >&lt;p&gt;Deferring to 1.2 per Peter&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 9 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-152] Mailing list archives are down</title>
                <link>http://jira.codehaus.org/browse/JAXEN-152</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In project.xml we list URLs for a number of mailing lists such as &lt;a href=&quot;http://archive.jaxen.codehaus.org/user/&quot;&gt;http://archive.jaxen.codehaus.org/user/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are currently broken. We should restore them. However, until we do I&apos;m commenting out the links in project.xml. &lt;/p&gt;</description>
                <environment></environment>
            <key id="41154">JAXEN-152</key>
            <summary>Mailing list archives are down</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 2 Sep 2006 12:19:39 -0500</created>
                <updated>Sun, 15 Oct 2006 15:26:12 -0500</updated>
                    <resolved>Sun, 15 Oct 2006 15:26:12 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 10 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-151] Jaxen has unnecessary and unexpected dependencies (which cause problems with JDK 1.5)</title>
                <link>http://jira.codehaus.org/browse/JAXEN-151</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;(This issue was originally filed to Maven Evangelism: &lt;a href=&quot;http://jira.codehaus.org/browse/MEV-413&quot;&gt;http://jira.codehaus.org/browse/MEV-413&lt;/a&gt;&lt;br/&gt;
But there has been no response so I guess I should have filed it here instead)&lt;/p&gt;

&lt;p&gt;The pom (&lt;a href=&quot;http://www.ibiblio.org/maven2/jaxen/jaxen/1.1-beta-9/jaxen-1.1-beta-9.pom&quot;&gt;http://www.ibiblio.org/maven2/jaxen/jaxen/1.1-beta-9/jaxen-1.1-beta-9.pom&lt;/a&gt;) has dependencies on domj, jdom, xom, xerces:xercesImpl and xerces:xmlParserAPIs (see below).&lt;/p&gt;

&lt;p&gt;I can&apos;t see why any of these dependencies are necessary - especially not the dependency on xerces. A slimmed down verson of Xerces is included with JDK 1.5 and adding an addition Xerces in the classpath caused some major headache. JDK 1.5 or not, I have the exclude all the dependencies that Jaxen 1.1-beta-9 has.&lt;/p&gt;

&lt;p&gt;   &amp;lt;dependency&amp;gt;&lt;br/&gt;
      &amp;lt;artifactId&amp;gt;jaxen&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
      &amp;lt;groupId&amp;gt;jaxen&amp;lt;/groupId&amp;gt;&lt;br/&gt;
      &amp;lt;version&amp;gt;1.1-beta-9&amp;lt;/version&amp;gt;&lt;br/&gt;
      &amp;lt;exclusions&amp;gt;&lt;br/&gt;
         &amp;lt;exclusion&amp;gt;&lt;br/&gt;
            &amp;lt;artifactId&amp;gt;dom4j&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
            &amp;lt;groupId&amp;gt;domj&amp;lt;/groupId&amp;gt;&lt;br/&gt;
         &amp;lt;/exclusion&amp;gt;&lt;br/&gt;
         &amp;lt;exclusion&amp;gt;&lt;br/&gt;
            &amp;lt;artifactId&amp;gt;jdom&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
            &amp;lt;groupId&amp;gt;jdom&amp;lt;/groupId&amp;gt;&lt;br/&gt;
         &amp;lt;/exclusion&amp;gt;&lt;br/&gt;
         &amp;lt;exclusion&amp;gt;&lt;br/&gt;
            &amp;lt;artifactId&amp;gt;xerces&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
            &amp;lt;groupId&amp;gt;xmlParserAPIs&amp;lt;/groupId&amp;gt;&lt;br/&gt;
         &amp;lt;/exclusion&amp;gt;&lt;br/&gt;
         &amp;lt;exclusion&amp;gt;&lt;br/&gt;
            &amp;lt;artifactId&amp;gt;xerces&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
            &amp;lt;groupId&amp;gt;xercesImpl&amp;lt;/groupId&amp;gt;&lt;br/&gt;
         &amp;lt;/exclusion&amp;gt;&lt;br/&gt;
         &amp;lt;exclusion&amp;gt;&lt;br/&gt;
            &amp;lt;artifactId&amp;gt;xom&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
            &amp;lt;groupId&amp;gt;xom&amp;lt;/groupId&amp;gt;&lt;br/&gt;
         &amp;lt;/exclusion&amp;gt;&lt;br/&gt;
      &amp;lt;/exclusions&amp;gt;&lt;br/&gt;
    &amp;lt;/dependency&amp;gt;&lt;/p&gt;</description>
                <environment>Maven 2.0.4&lt;br/&gt;
Jaxen-1.1-beta9</environment>
            <key id="39963">JAXEN-151</key>
            <summary>Jaxen has unnecessary and unexpected dependencies (which cause problems with JDK 1.5)</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="jimisola">Jimisola Laursen</reporter>
                        <created>Wed, 2 Aug 2006 15:47:39 -0500</created>
                <updated>Sun, 8 Oct 2006 06:42:14 -0500</updated>
                    <resolved>Sun, 8 Oct 2006 06:42:14 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.2</fixVersion>
                                <component>dom</component>
                <component>dom4j</component>
                <component>jdom</component>
                <component>xom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="71437" author="elharo" created="Wed, 2 Aug 2006 16:55:52 -0500"  >&lt;p&gt;The Xerces dependency is necessary because jaxen works with Java 1.2 and later. Unless Maven has a way to specify different dependencies for different Java versions that&apos;s not going away.&lt;/p&gt;

&lt;p&gt;The dependency on individual object models is scheduled to be fixed in 1.2 when  we&apos;ll debundle the individual models. That will happen sometime after 1.1. &lt;/p&gt;</comment>
                    <comment id="71444" author="bazzargh" created="Wed, 2 Aug 2006 19:34:42 -0500"  >&lt;p&gt;This is really a dupe of &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-138&quot; title=&quot;incorrect maven 2 poms on ibiblio are not from cvs&quot;&gt;&lt;del&gt;JAXEN-138&lt;/del&gt;&lt;/a&gt; - marked as wontfix, see the explanation there (ie  those maven 2 poms were produced by the maven project, not by jaxen developers). When I reported this previously, Brett offered to fix it if it became a problem and we raised a MEV bug, which you&apos;ve done.&lt;/p&gt;</comment>
                    <comment id="73682" author="jimisola" created="Wed, 30 Aug 2006 11:07:19 -0500"  >&lt;p&gt;Elliotte, I see. I&apos;m not aware of Maven being able to have different dependencies based on Java versions.&lt;/p&gt;

&lt;p&gt;Is there a roadmap and/or ETA available for 1.1 and/or 1.2? I had a look on the web site, but didn&apos;t find anything.&lt;/p&gt;</comment>
                    <comment id="73955" author="elharo" created="Sat, 2 Sep 2006 12:23:55 -0500"  >&lt;p&gt;1.1 should be able to be finished by the end of the year. Really it&apos;s just a question of finding the time and motivation to clean up the last few issues. 1.2, who knows?&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10010">
                <name>Related</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="38046">MEV-413</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 10 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>jimisola</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-150] Fix LaTeX for site</title>
                <link>http://jira.codehaus.org/browse/JAXEN-150</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;When I uncomment the maven-latex task in project.xml, it seems to get stuck in an infinite loop. It would be nice if someone could figure out how to fix this, so we could edit and update Bob&apos;s slides.&lt;/p&gt;

&lt;p&gt;xdoc:&lt;br/&gt;
latex:prepare-filesystem:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir: /Users/elharo/Projects/Jaxen/target/docs/pdf&lt;/p&gt;

&lt;p&gt;latex:generate:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; scanning: /Users/elharo/Projects/Jaxen/src/latex/&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;copy&amp;#93;&lt;/span&gt; Copying 1 file to /Users/elharo/Projects/Jaxen/target/latex&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Generating from /Users/elharo/Projects/Jaxen/target/latex/intro-slides.tex&lt;br/&gt;
Delete is not set: Use default-values!&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; Running LaTeX now!&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; latexfile  = /Users/elharo/Projects/Jaxen/target/latex/intro-slides.tex&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; bibtexfile = /Users/elharo/Projects/Jaxen/target/latex/intro-slides.tex&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; latexdir   = /Users/elharo/Projects/Jaxen/target/latex&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; verbose    = true&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; bibtex     = true&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; bibtex     = true&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; clean      = false&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; delete     = org.apache.tools.ant.taskdefs.Delete@e28803&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; running command: pdflatex &amp;amp;pdflatex \nonstopmode\input{/Users/elharo/Projects/Jaxen/target/latex/intro-slides.tex}&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; This is pdfeTeX, Version 3.141592-1.21a-2.2 (Web2C 7.5.4)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; entering extended mode&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; ! I can&apos;t find file `&quot; &amp;amp;pdflatex &quot;&apos;.&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; &amp;lt;to be read again&amp;gt; &lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt;                    \nonstopmode &lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; &amp;lt;*&amp;gt; &quot; &amp;amp;pdflatex \nonstopmode&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt;                             \input{/Users/elharo/Projects/Jaxen/target/latex...&lt;br/&gt;
^C    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; Please type another input file name: &lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; command exitcode = 143&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;latex&amp;#93;&lt;/span&gt; running command: bibtex/Users/elharo/Projects/Jaxen/target/latex/intro-slides&lt;/p&gt;</description>
                <environment>Mac OS X 10.4; possibly others?</environment>
            <key id="38989">JAXEN-150</key>
            <summary>Fix LaTeX for site</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 10 Jul 2006 15:37:33 -0500</created>
                <updated>Tue, 25 Jul 2006 10:29:20 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="70609" author="elharo" created="Tue, 25 Jul 2006 08:54:35 -0500"  >&lt;p&gt;Running the command manually I note a complaint about some missing foils.cls file. Perhaps this is some collection of macros we need to run this? Bob, trhey&apos;re your notes. Can you shed some light on this? &lt;/p&gt;

&lt;p&gt;~$ pdflatex /Users/elharo/Projects/Jaxen/target/latex/intro-slides.texThis is pdfeTeX, Version 3.141592-1.21a-2.2 (Web2C 7.5.4)&lt;br/&gt;
entering extended mode&lt;br/&gt;
(/Users/elharo/Projects/Jaxen/target/latex/intro-slides.tex&lt;br/&gt;
LaTeX2e &amp;lt;2003/12/01&amp;gt;&lt;br/&gt;
Babel &amp;lt;v3.8d&amp;gt; and hyphenation patterns for american, french, german, ngerman, bahasa, basque, bulgarian, catalan, croatian, czech, danish, dutch, esperanto, estonian, finnish, greek, icelandic, irish, italian, latin, magyar, norsk, polish, portuges, romanian, russian, serbian, slovak, slovene, spanish, swedish, turkish, ukrainian, nohyphenation, loaded.&lt;/p&gt;

&lt;p&gt;! LaTeX Error: File `foils.cls&apos; not found.&lt;/p&gt;

&lt;p&gt;Type X to quit or &amp;lt;RETURN&amp;gt; to proceed,&lt;br/&gt;
or enter new name. (Default extension: cls)&lt;/p&gt;</comment>
                    <comment id="70628" author="lukas" created="Tue, 25 Jul 2006 10:22:07 -0500"  >&lt;p&gt;You have to download and install foiltex first: &lt;a href=&quot;http://www.ctan.org/tex-archive/nonfree/macros/latex/contrib/foiltex/&quot;&gt;http://www.ctan.org/tex-archive/nonfree/macros/latex/contrib/foiltex/&lt;/a&gt;&lt;br/&gt;
Running latex manually then worked for me, even though there are two figures missing (infoset-doc and infoset-elem).&lt;br/&gt;
Note however that you can&apos;t use the maven plugin for that, as it uses pdflatex and is non-functional anyway.&lt;/p&gt;</comment>
                    <comment id="70629" author="elharo" created="Tue, 25 Jul 2006 10:29:20 -0500"  >&lt;p&gt;To top that off, foiltex is non-free. Bleah. Anyone feel like porting these notes to DocBook-slides or something else we have some hope of handling?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 15 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>lukas</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-149] Upgrade to Maven 2</title>
                <link>http://jira.codehaus.org/browse/JAXEN-149</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;One of these days we should move forward to Maven 2, but not for Jaxen 1.1. &lt;/p&gt;</description>
                <environment></environment>
            <key id="38678">JAXEN-149</key>
            <summary>Upgrade to Maven 2</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 3 Jul 2006 06:26:26 -0500</created>
                <updated>Thu, 5 Nov 2009 08:00:03 -0600</updated>
                                    <version>1.1</version>
                                <fixVersion>1.1.3</fixVersion>
                                <component>Build</component>
                        <due></due>
                    <votes>2</votes>
                                                    <comments>
                    <comment id="194834" author="olo" created="Thu, 15 Oct 2009 05:40:32 -0500"  >&lt;p&gt;I gave a shot at doing it automatically using maven-one-plugin:&lt;/p&gt;

&lt;p&gt;mvn one:convert&lt;/p&gt;

&lt;p&gt;The result is mostly OK, but some dependencies need to have their version numbers updated. The unit tests run all OK.&lt;/p&gt;

&lt;p&gt;Attaching patch (which only covers the new pom.xml) and the raw pom.xml itself.&lt;/p&gt;</comment>
                    <comment id="194835" author="olo" created="Thu, 15 Oct 2009 05:40:51 -0500"  >&lt;p&gt;The pom.xml&lt;/p&gt;</comment>
                    <comment id="194836" author="olo" created="Thu, 15 Oct 2009 05:41:24 -0500"  >&lt;p&gt;The patch.&lt;/p&gt;</comment>
                    <comment id="194837" author="olo" created="Thu, 15 Oct 2009 05:46:50 -0500"  >&lt;p&gt;Notes about the supplied pom.xml:&lt;/p&gt;

&lt;p&gt;1) I&apos;ve changed the project version to 1.1.3-SNAPSHOT.&lt;br/&gt;
Non-snapshots version numbers should be only reserved for stable teleases (they should only occur on branches and tags in SVN, never in trunk).&lt;/p&gt;

&lt;p&gt;2) Relevant dependency numbers, which were too old for the build to succeed, were corrected (these were: maven-cobertura-plugin, maven-findbugs-plugin)&lt;/p&gt;

&lt;p&gt;3) All the unit tests seem to run fine:&lt;/p&gt;

&lt;p&gt;Results :&lt;/p&gt;

&lt;p&gt;Tests run: 694, Failures: 0, Errors: 0, Skipped: 0&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;jar:jar&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Building jar: c:\projekty\3rdparty\jaxen\jaxen-SVN\target\jaxen-1.1.3-SNAPSHOT.jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;install:install&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Installing c:\projekty\3rdparty\jaxen\jaxen-SVN\target\jaxen-1.1.3-SNAPSHOT.jar to C:\Documents and Settings\aadamowski\.m2\repository\jaxen\jaxen\1.1.3-SNAPSHOT\jaxen-1.1.3-SNAPSHOT.jar&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; BUILD SUCCESSFUL&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Total time: 7 seconds&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Finished at: Thu Oct 15 12:45:58 CEST 2009&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; Final Memory: 29M/254M&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;INFO&amp;#93;&lt;/span&gt; ------------------------------------------------------------------------&lt;/p&gt;
</comment>
                    <comment id="196122" author="bazzargh" created="Mon, 26 Oct 2009 09:51:53 -0500"  >&lt;p&gt;Attached an updated version of the patch for testing. The previous version wasn&apos;t quite correct:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;the jdom, dom4j, xom dependencies should be optional (see &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-138&quot; title=&quot;incorrect maven 2 poms on ibiblio are not from cvs&quot;&gt;&lt;del&gt;JAXEN-138&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;the xmlapis/xerces dependencies should be &apos;provided&apos; (later JREs have these, don&apos;t need to impose old xerces version)&lt;/li&gt;
	&lt;li&gt;&apos;mvn site&apos; didn&apos;t work due to missing/misconfigured plugins&lt;/li&gt;
	&lt;li&gt;the linkcheck plugin doesn&apos;t exist in m2. (Unfortunately - running it from maven 1 shows we have a bunch of broken links)&lt;/li&gt;
	&lt;li&gt;the issue reporting system needs specified - its JIRA (otherwise reports fail looking for TRAC)&lt;/li&gt;
	&lt;li&gt;the changes plugin needs a commons-codec dependency. At least, on one of my machines it did. This is apparently intermittently reported for that plugin and always ends up being fixed by adding an external dependency.&lt;/li&gt;
	&lt;li&gt;added the assembly plugin, and src-assembly.xml, to simulate the additional artifacts our old maven.xml was creating for &apos;maven dist&apos;. I /presume/ these are the things we offered for download from sourceforge - is this still necessary? Use &quot;mvn assembly:assembly&quot; to generate these artifacts (XXX-bin.tar.gz, XXX-bin.zip, XXX-src.tar.gz, and XXX-src.zip)&lt;/li&gt;
	&lt;li&gt;fixed a bug that the assembly plugin creates archives containing the full path to your files by depending on an explicit version of this plugin.&lt;/li&gt;
	&lt;li&gt;javadoc plugin was misconfigured, leading to unrecognized &apos;@todo&apos; (the tags configuration block needs to be in the reporting section)&lt;/li&gt;
	&lt;li&gt;source file encoding needs specified to suppress a lot of warning messages in report generation.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Building like this was surprisingly flaky. I tried with IDEA 8.1 (win32), mvn directly (win32, OS X), and Eclipse Ganymede (OS X). Each environment complained slightly differently about missing dependencies. &lt;/p&gt;

&lt;p&gt;Hence, I don&apos;t think this is ready to land just yet, but worth trying out.&lt;/p&gt;</comment>
                    <comment id="196148" author="bazzargh" created="Mon, 26 Oct 2009 14:20:41 -0500"  >&lt;p&gt;Some things were still not working correctly, as all the xdoc and resources needed to be moved to work with the new site plugin; also the old navigation.xml doesn&apos;t work any more, so I crafted a new site.xml. This patch can&apos;t be applied with svn - it will apply to the master branch of the git repo attached in jaxen-31. (I don&apos;t know how to get git to produce svn-compatible patches when there&apos;s binary stuff involved - in this case the jaxen logo moved). Stylistically, this appears to be pretty much what we have on the website, except the legend is gone from the bottom of the left hand menu - there doesn&apos;t seem to be a way to get that any more.&lt;/p&gt;

&lt;p&gt;Also, the checkstyle report had 14000+ errors in it, which wasn&apos;t believable. I&apos;ve added a checkstyle.xml which I believe covers what we used to do in the project.properties, but it still reports 4000+ errors - checkstyle has gained a lot of checks since the version we used.&lt;/p&gt;</comment>
                    <comment id="197348" author="olo" created="Thu, 5 Nov 2009 08:00:03 -0600"  >&lt;p&gt;Brian, in my environment the site build (actually site:stage) would fail unless I&apos;d specify the groupIds and stable versions of relevant plugins.&lt;/p&gt;


&lt;p&gt;Have a look at attached patch. With those changes applied, jaxen.codehaus.org site gets built properly on my machine in target/staging/jaxen.codehaus.org/home/projects/jaxen/public_html/.&lt;/p&gt;

&lt;p&gt;One should specify plugin versions anyway, to make the build repeatable. Also, specifying groupId is a good practice as it sometimes creates problems in resolving plugin dependencies (the site is notorious for that).&lt;/p&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="45460" name="0001-maven-2-build-support.patch" size="144908" author="bazzargh" created="Mon, 26 Oct 2009 14:20:41 -0500" />
                    <attachment id="45650" name="0001-Specified-groupId-and-version-for-reporting-plugins.patch" size="3744" author="olo" created="Thu, 5 Nov 2009 08:00:03 -0600" />
                    <attachment id="45290" name="jaxen-maven2-upgrade.patch" size="10388" author="olo" created="Thu, 15 Oct 2009 05:41:24 -0500" />
                    <attachment id="45455" name="mvn.patch" size="15731" author="bazzargh" created="Mon, 26 Oct 2009 09:51:53 -0500" />
                    <attachment id="45289" name="pom.xml" size="9908" author="olo" created="Thu, 15 Oct 2009 05:40:51 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>olo</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-148] invalid evaluation of text() function</title>
                <link>http://jira.codehaus.org/browse/JAXEN-148</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;br/&gt;
I have xml document with node having whitespaces in first position of body. Eg. &amp;lt;document&amp;gt;&amp;lt;node&amp;gt;\nbody \n body&amp;lt;/node&amp;gt;&amp;lt;/document&amp;gt;. Evaluating expresion /document/node/text() return node, without text. Method getText(), return empty text. &lt;/p&gt;</description>
                <environment></environment>
            <key id="37992">JAXEN-148</key>
            <summary>invalid evaluation of text() function</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bartosz.szkudlarek">Bartosz Szkudlarek</reporter>
                        <created>Tue, 13 Jun 2006 11:03:06 -0500</created>
                <updated>Wed, 14 Jun 2006 06:28:06 -0500</updated>
                    <resolved>Tue, 13 Jun 2006 11:35:11 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="67270" author="elharo" created="Tue, 13 Jun 2006 11:23:40 -0500"  >&lt;p&gt;I&apos;ve verified this. The test case was very helpful. Thanks.&lt;/p&gt;

&lt;p&gt;My suspicion is that this is really a bug in dom4j, not jaxen. If it is a bug in jaxen it&apos;s probably in the dom4j navigator; but I&apos;m not sure. Any dom4j folks want to look at this more closely? &lt;/p&gt;</comment>
                    <comment id="67271" author="elharo" created="Tue, 13 Jun 2006 11:27:31 -0500"  >&lt;p&gt;On further investigation with a debugger it appears that dom4j&apos;s SAXReader is splitting the text node into two pieces before Jaxen ever gets a hold of it. Lord only knows why. However, the result is that selectSingleNode() only finds the first piece. That&apos;s why the white space appears to get lost.&lt;/p&gt;

&lt;p&gt;This is definitely non-conformant to the DOM specification, and thus should be classified as a bug in dom4j. However, dom4j has never been a model of spec-conformance. &lt;/p&gt;</comment>
                    <comment id="67272" author="elharo" created="Tue, 13 Jun 2006 11:35:11 -0500"  >&lt;p&gt;The equivalent test in JDOM passes.The bug is real, but it belongs to dom4j, not Jaxen.&lt;/p&gt;</comment>
                    <comment id="67273" author="bazzargh" created="Tue, 13 Jun 2006 11:45:55 -0500"  >&lt;p&gt;There is a bug in the test case too.&lt;/p&gt;

&lt;p&gt;SAXReader reader = new SAXReader();&lt;/p&gt;

&lt;p&gt;Should be followed by:&lt;br/&gt;
reader.setMergeAdjacentText(true);&lt;/p&gt;

&lt;p&gt;XPath requires that adjacent text nodes are merged. Jaxen, and the dom4j Navigator, don&apos;t do this on the fly because there is a performance cost involved, and the only time you can reasonably decide whether merging text nodes is required is when you build the document. Hence, you need to build your documents with xpath in mind.&lt;/p&gt;

&lt;p&gt;In the past bugs in dom4j prevented this working see &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-67&quot; title=&quot;Text nodes not coalesced as required by XPath&quot;&gt;&lt;del&gt;JAXEN-67&lt;/del&gt;&lt;/a&gt; for details (and links to the dom4j bug report)&lt;/p&gt;</comment>
                    <comment id="67275" author="elharo" created="Tue, 13 Jun 2006 12:24:09 -0500"  >&lt;p&gt;dom4j claims to implement DOM, and DOM requires that adjacent text nodes be merged on parse. This is a dom4j bug. Spec-comformant behavior shouldn&apos;t require the use of extra options. &lt;/p&gt;</comment>
                    <comment id="67364" author="bazzargh" created="Wed, 14 Jun 2006 06:28:06 -0500"  >&lt;p&gt;In this instance, yes dom4j has a bug. But you would generally need to use this option anyway when combining jaxen and dom4j. &lt;/p&gt;

&lt;p&gt;DOM requires no contiguous Text nodes after parsing, but &lt;b&gt;may&lt;/b&gt; also have CDATA nodes. With the usual DOM/SAX defaults you don&apos;t get lexical events, and hence no CDATA nodes, so this isn&apos;t an issue. However, dom4j registers a lexical handler by default, so you will see this problem...:&lt;br/&gt;
&lt;a href=&quot;http://www.dom4j.org/xref/org/dom4j/io/SAXReader.html#911&quot;&gt;http://www.dom4j.org/xref/org/dom4j/io/SAXReader.html#911&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(I&apos;m not saying this is the Right Thing, just pointing out what dom4j does and how to get around it)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="21019" name="JaxenSsieTest.java" size="1730" author="bartosz.szkudlarek" created="Tue, 13 Jun 2006 11:03:06 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bartosz.szkudlarek</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-147] ContextSupport is not really serializable</title>
                <link>http://jira.codehaus.org/browse/JAXEN-147</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I found this unresolved issue in my Inbox from the dev mailing list. Logging it here so we don&apos;t forget about it again.&lt;/p&gt;

&lt;p&gt;ContextSupport implements Serializable. It has four instance fields:&lt;/p&gt;

&lt;p&gt;    /** Function context. */&lt;br/&gt;
    private transient FunctionContext functionContext;&lt;/p&gt;

&lt;p&gt;    /** Namespace context. */&lt;br/&gt;
    private NamespaceContext namespaceContext;&lt;/p&gt;

&lt;p&gt;    /** Variable context. */&lt;br/&gt;
    private VariableContext variableContext;&lt;/p&gt;

&lt;p&gt;    /** Model navigator. */&lt;br/&gt;
    private Navigator navigator;&lt;/p&gt;


&lt;p&gt;functionContext is transient so it doesn&apos;t matter in serialization. Navigator itself implements Serializable so it&apos;s fine. However, the other two are neither marked transient nor implement Serializable. The implementation classes (SimpleNamespaceContext and SimpleVariableContext) do implement Serializable. However, there&apos;s no guarantee other instances of these interfaces implement Serializable.&lt;/p&gt;

&lt;p&gt;I see two options here:&lt;/p&gt;

&lt;p&gt;1. Mark namespaceContext and variableContext transient.&lt;br/&gt;
2. Declare that NamespaceContext and VariableContext implement Serializable.&lt;/p&gt;

&lt;p&gt;Both have potential backwards compatibility issues. I think I prefer 2 since I suspect few if any developers are providing their own namespace or variable contexts that don&apos;t extend SimpleNamespaceContext or SimpleVariableContext. Thoughts?&lt;/p&gt;


&lt;p&gt;Discussion a year ago on the mailing decided to make the two interfaces both implement Serializable, despite the minor backwards incompatibility issues. &lt;/p&gt;</description>
                <environment></environment>
            <key id="37764">JAXEN-147</key>
            <summary>ContextSupport is not really serializable</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 6 Jun 2006 12:25:20 -0500</created>
                <updated>Mon, 3 Jul 2006 06:59:34 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 06:59:34 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="66730" author="bazzargh" created="Tue, 6 Jun 2006 12:52:48 -0500"  >&lt;p&gt;&quot;functionContext is transient so it doesn&apos;t matter in serialization.&quot;&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-141&quot; title=&quot;Serializable FunctionContext&quot;&gt;JAXEN-141&lt;/a&gt; - this isn&apos;t the case. As I recall (not having looked at this for a while) you&apos;ll drop all custom functions if you serialize the contextsupport because of this, and custom functions do seem to be widely used - they are a recurring theme on the mailing list anyway. My take on this stuff is that in the dim and distant past, someone made a mistake in declaring ContextSupport serializable.&lt;/p&gt;

&lt;p&gt;I agree with your comments on &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-141&quot; title=&quot;Serializable FunctionContext&quot;&gt;JAXEN-141&lt;/a&gt; btw - I don&apos;t think this is possible to fix without breaking the API. However fixing everything but this doesn&apos;t make ContextSupport meaningfully serializable; I&apos;d prefer to document that it isn&apos;t really serializable and start discussions on an API-breaking 2.0.&lt;/p&gt;</comment>
                    <comment id="68820" author="elharo" created="Mon, 3 Jul 2006 06:59:34 -0500"  >&lt;p&gt;I&apos;ve been convinced to go with Option 3; add a coment to the JavaDoc that &quot;Implementations of this interface should implement &amp;lt;code&amp;gt;Serializable&amp;lt;/code&amp;gt;.&quot; That should be sufficient for now. We can revisit the whole serialization story in 2.0 if we like.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-146] Fix CVS (or instructions)</title>
                <link>http://jira.codehaus.org/browse/JAXEN-146</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Since the server crash, the instructions on the web site for checking Jaxen out of CVS no longer work. They say:&lt;/p&gt;

&lt;p&gt;This project&apos;s CVS repository can be checked out through anonymous (pserver) CVS with the following instruction set. When prompted for a password for anonymous, simply press the Enter key.&lt;/p&gt;

&lt;p&gt;cvs -d :pserver:anonymous@cvs.jaxen.codehaus.org:/home/projects/jaxen/scm login&lt;br/&gt;
cvs -z3 -d :pserver:anonymous@cvs.jaxen.codehaus.org:/home/projects/jaxen/scm co jaxen &lt;/p&gt;

&lt;p&gt;However this results in &lt;/p&gt;

&lt;p&gt;~/tmp$ cvs -z3 -d :pserver:anonymous@cvs.jaxen.codehaus.org:/home/projects/jaxen/scm co jaxen&lt;br/&gt;
/home/projects/jaxen/scm: no such repository&lt;/p&gt;

&lt;p&gt;I&apos;m not sure whatever needs to be done to fix this, whether the instructions need to be changed to point somewhere else or whether the directories on the server need to be configured. Whichever solution is adopted, I&apos;d appreciate it if someone could look at this. XOM is currently failing in Gump due to this. &lt;/p&gt;</description>
                <environment></environment>
            <key id="37681">JAXEN-146</key>
            <summary>Fix CVS (or instructions)</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 3 Jun 2006 08:18:28 -0500</created>
                <updated>Sat, 2 Dec 2006 14:32:53 -0600</updated>
                    <resolved>Sat, 2 Dec 2006 14:32:53 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="66550" author="proyal" created="Sat, 3 Jun 2006 09:22:49 -0500"  >&lt;p&gt;We will be moving to subversion (per the haus despots) once we have CVS back up-to-date with what was there pre-crash. Then this will be fixed, because Gump can do an anonymous SVN checkout.&lt;/p&gt;</comment>
                    <comment id="66555" author="elharo" created="Sat, 3 Jun 2006 10:44:27 -0500"  >&lt;p&gt;So is the problem only with anonymous checkouts? Is that why I can work with CVS within Eclipse but not using the instructions on the web site? &lt;/p&gt;</comment>
                    <comment id="66560" author="proyal" created="Sat, 3 Jun 2006 12:12:46 -0500"  >&lt;p&gt;correct.&lt;/p&gt;</comment>
                    <comment id="66561" author="bob" created="Sat, 3 Jun 2006 12:21:17 -0500"  >&lt;p&gt;Full instructions/options are here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://xircles.codehaus.org/projects/jaxen/repo&quot;&gt;http://xircles.codehaus.org/projects/jaxen/repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully they are correct&lt;/p&gt;</comment>
                    <comment id="66563" author="elharo" created="Sat, 3 Jun 2006 13:40:25 -0500"  >&lt;p&gt;The instructions on xircles are a little different (they reference /cvs/jaxen instead of /cvs/jaxen/scm) byt they still give me a &quot;/home/projects/jaxen: no such repository&quot; message when I try to access them anonymously. &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="68824" author="elharo" created="Mon, 3 Jul 2006 07:20:04 -0500"  >&lt;p&gt;FYI, the xircles instructions now give me a different error:&lt;/p&gt;

&lt;p&gt;~/tmp$ export CVSROOT=:pserver:anonymous@cvs.jaxen.codehaus.org:/cvs/jaxen/&lt;br/&gt;
~/tmp$ cvs login&lt;br/&gt;
Logging in to :pserver:anonymous@cvs.jaxen.codehaus.org:2401/cvs/jaxen&lt;br/&gt;
CVS password: &lt;br/&gt;
Fatal error, aborting.&lt;br/&gt;
anonymous: no such user&lt;/p&gt;


&lt;p&gt;Can anyone get anonymous checkout to work? The lack of this is a problem for the current XOM setup.&lt;/p&gt;

&lt;p&gt;Also, Subversion isn&apos;t really an ideal replacement since Ant doesn;t support it yet. I should probably fix that in XOM&apos;s build file anyway. &lt;/p&gt;</comment>
                    <comment id="68825" author="elharo" created="Mon, 3 Jul 2006 07:22:03 -0500"  >&lt;p&gt;I&apos;m changing the fix version to &quot;Unknown&quot; since I don&apos;t know that this should really block 1.1. However fixing this should be a very high priority regardless. I&apos;ve upgraded it to &quot;Critical&quot;.&lt;/p&gt;</comment>
                    <comment id="81463" author="proyal" created="Wed, 29 Nov 2006 22:19:31 -0600"  >&lt;p&gt;i just tried:&lt;/p&gt;

&lt;p&gt;cvs -d :pserver:anonymous@cvs.jaxen.codehaus.org:/cvs/jaxen/ co jaxen&lt;/p&gt;

&lt;p&gt;and it checked out fine&lt;/p&gt;</comment>
                    <comment id="81464" author="proyal" created="Wed, 29 Nov 2006 22:21:01 -0600"  >&lt;p&gt;(that was with the instructions from &lt;a href=&quot;http://xircles.codehaus.org/projects/jaxen/repo&quot;&gt;http://xircles.codehaus.org/projects/jaxen/repo&lt;/a&gt; )&lt;/p&gt;</comment>
                    <comment id="81467" author="cowtowncoder" created="Wed, 29 Nov 2006 22:48:53 -0600"  >&lt;p&gt;Would it be possible to update this page:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jaxen.codehaus.org/cvs-usage.html&quot;&gt;http://jaxen.codehaus.org/cvs-usage.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;with instructions too? (it has incorrect project path) I tried accessing cvs few days ago and it failed, but fortunately the proper path Peter gave works ok.&lt;/p&gt;
</comment>
                    <comment id="81527" author="elharo" created="Thu, 30 Nov 2006 12:55:06 -0600"  >&lt;p&gt;Just scheduling for 1.1&lt;/p&gt;</comment>
                    <comment id="81655" author="elharo" created="Sat, 2 Dec 2006 14:32:53 -0600"  >&lt;p&gt;I&apos;ve fixed this in CVS per Peter&apos;s instructions. The site will be updated when we push the next release. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 49 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
            <customfieldvalue>cowtowncoder</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-144] JavaBean implementation mishandles arrays, should assume document</title>
                <link>http://jira.codehaus.org/browse/JAXEN-144</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The current JavaBean implementation does not handle beans created with JAX-RPC well.  There are several problems:&lt;/p&gt;

&lt;p&gt;1) Arrays aren&apos;t handled at all.&lt;br/&gt;
2) Array contents need to be addressable directly instead of through &apos;element&apos;.  The patch that was originally submitted for 1.1 beta 2 has this issue.  So in the old patch, bar&lt;span class=&quot;error&quot;&gt;&amp;#91;.=&amp;#39;3&amp;#39;&amp;#93;&lt;/span&gt; would fail, but bar/*&lt;span class=&quot;error&quot;&gt;&amp;#91;.=3&amp;#93;&lt;/span&gt; would not.  Forcing the extra /* doesn&apos;t make sense for array contents.  To understand why, you need to understand that JAX-RPC takes an XML document like this:&lt;br/&gt;
&amp;lt;foo&amp;gt;&lt;br/&gt;
  &amp;lt;bar&amp;gt;1&amp;lt;/bar&amp;gt;&lt;br/&gt;
  &amp;lt;bar&amp;gt;2&amp;lt;/bar&amp;gt;&lt;br/&gt;
  &amp;lt;bar&amp;gt;3&amp;lt;/bar&amp;gt;&lt;br/&gt;
&amp;lt;/foo&amp;gt;&lt;/p&gt;

&lt;p&gt;and creates a bean similar to the following:&lt;br/&gt;
public class Foo { // the name comes from the WSDL&lt;br/&gt;
   public void setBar(int[] bar) ..&lt;br/&gt;
   public int[] getBar();&lt;br/&gt;
   ...&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;The goal is that any XPath statement we create should work equally well when evaluated against the XML document as when it is evaluated against the beans that are generated from that document.  In XOM the XPath bar&lt;span class=&quot;error&quot;&gt;&amp;#91;.=&amp;#39;3&amp;#39;&amp;#93;&lt;/span&gt; would work, but bar/*&lt;span class=&quot;error&quot;&gt;&amp;#91;.=3&amp;#93;&lt;/span&gt; would fail.  The same should be the case for beans.&lt;/p&gt;

&lt;p&gt;3) JavaBeans don&apos;t have a Document that wraps them.  The API doesn&apos;t provide any way to give a Document wrapper.  Since there is no document, absolute positioning in paths fails for JavaBeans.  Plain JavaBeans don&apos;t have the ability to reference their container.  That is one of the reasons why the Element class is needed to wrap them.  Thus, the topmost Element, (the one with a null parent) must be assumed to be the &apos;Document&apos;.  This allows absolute positioning to be used.&lt;/p&gt;

&lt;p&gt;The included test case tests each of these conditions, as well as embedded arrays.  It appears that there is an additional problem using the // syntax to start an xpath.  That is not fixed in the patch that is included.&lt;/p&gt;</description>
                <environment>Using Jaxen with beans generated by JAX-RPC.  These beans never have a &amp;#39;Document&amp;#39; wrapper, and treat multiple elements with the same name as an array.</environment>
            <key id="37396">JAXEN-144</key>
            <summary>JavaBean implementation mishandles arrays, should assume document</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="averyregier">Avery J. Regier</reporter>
                        <created>Fri, 26 May 2006 00:51:43 -0500</created>
                <updated>Fri, 26 May 2006 00:51:43 -0500</updated>
                                    <version>1.1</version>
                                                <component>javabean</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                    <attachment id="20718" name="DocumentNavigator.java" size="12060" author="averyregier" created="Fri, 26 May 2006 00:51:43 -0500" />
                    <attachment id="20717" name="JavaBeanNavigatorTest.java" size="4957" author="averyregier" created="Fri, 26 May 2006 00:51:43 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 24 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>averyregier</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-143] Upload to maven2 repo @ www.ibiblio.org</title>
                <link>http://jira.codehaus.org/browse/JAXEN-143</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Could somebody upload the 1.1 beta-9 packages to ibiblio?&lt;/p&gt;</description>
                <environment>N/A</environment>
            <key id="36762">JAXEN-143</key>
            <summary>Upload to maven2 repo @ www.ibiblio.org</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="david@davidkarlsen.com">David J. M. Karlsen</reporter>
                        <created>Sun, 7 May 2006 13:32:57 -0500</created>
                <updated>Mon, 3 Jul 2006 07:09:22 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 07:09:22 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="65199" author="lukas" created="Thu, 11 May 2006 11:05:42 -0500"  >&lt;p&gt;I filed an upload request: &lt;a href=&quot;http://jira.codehaus.org/browse/MAVENUPLOAD-890&quot; title=&quot;Please upload jaxen-1.1-beta-9&quot;&gt;&lt;del&gt;MAVENUPLOAD-890&lt;/del&gt;&lt;/a&gt;, it&apos;s usually done within a day.&lt;/p&gt;</comment>
                    <comment id="68822" author="elharo" created="Mon, 3 Jul 2006 07:09:22 -0500"  >&lt;p&gt;This seems to have been done:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ibiblio.org/maven2/jaxen/jaxen/1.1-beta-9/&quot;&gt;http://www.ibiblio.org/maven2/jaxen/jaxen/1.1-beta-9/&lt;/a&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>david@davidkarlsen.com</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>lukas</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-142] Unit tests for serialization</title>
                <link>http://jira.codehaus.org/browse/JAXEN-142</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Serialization is part of the public interface. Therefore it should be tested. In particular, we should add .ser files for various types of objects to the the distro, and write unit tests that deserialize and verify them. This will help avoid accidentally breaking serialization comptaibility in the future. &lt;/p&gt;</description>
                <environment></environment>
            <key id="36610">JAXEN-142</key>
            <summary>Unit tests for serialization</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 3 May 2006 11:05:02 -0500</created>
                <updated>Wed, 3 May 2006 11:05:02 -0500</updated>
                                    <version>1.1</version>
                                                <component>core</component>
                <component>dom</component>
                <component>dom4j</component>
                <component>function</component>
                <component>javabean</component>
                <component>jdom</component>
                <component>saxpath</component>
                <component>xom</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-141] Serializable FunctionContext</title>
                <link>http://jira.codehaus.org/browse/JAXEN-141</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Moving over from Jaxen-108:&lt;/p&gt;

&lt;p&gt;Brian Ewins writes:&lt;/p&gt;

&lt;p&gt;A related serialization issue: in ContextSupport, there is this line:&lt;/p&gt;

&lt;p&gt;private transient FunctionContext functionContext;&lt;/p&gt;

&lt;p&gt;The upshot of this is that functionContext will end up null on deserialization, and will be recreated as the default function context (in BaseXPath.java). So, XPaths that use extension functions are not actually serializable. Its not even clear that the non-transient members of ContextSupport are serializable either.&lt;/p&gt;

&lt;p&gt;I think the correct answer here is that functionContext shouldn&apos;t be transient. I also thought it was considered best practice not to declare interfaces serializable (I&apos;m thinking of Navigator here - interfaces that are effectively private, like Expr, don&apos;t matter). We&apos;re inconsistent there - eg VariableContext isn&apos;t marked Serializable but is stored in a non-transient field of ContextSupport, but Navigator is stored the same way and marked Serializable.&lt;/p&gt;


&lt;p&gt;Comment by Elliotte Rusty Harold &lt;span class=&quot;error&quot;&gt;&amp;#91;17/Sep/05 08:02 AM&amp;#93;&lt;/span&gt; &lt;/p&gt;

&lt;p&gt;FunctionContext does not implement Serializable. Making it implement Serializable would be tricky since most of the functions it contains aren&apos;t serializable either. This is especially true when considering the possibility of user defined extension functions not known to us at compile time.&lt;/p&gt;</description>
                <environment></environment>
            <key id="36526">JAXEN-141</key>
            <summary>Serializable FunctionContext</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 1 May 2006 06:39:42 -0500</created>
                <updated>Mon, 1 May 2006 06:39:42 -0500</updated>
                                    <version>2.0</version>
                                <fixVersion>2.0</fixVersion>
                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-139] Patterns fail when a predicate involves the position of a node</title>
                <link>http://jira.codehaus.org/browse/JAXEN-139</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;hi,&lt;/p&gt;

&lt;p&gt;I have been tested the following code on Jaxen 1.1-beta 8 but I notice that trouble on Jaxen 1.0 FCS&lt;br/&gt;
I don&apos;t get the right values when I execute it (see below)&lt;/p&gt;

&lt;p&gt;========= TEST&lt;/p&gt;

&lt;p&gt;import java.io.StringReader;&lt;/p&gt;

&lt;p&gt;import javax.xml.parsers.DocumentBuilderFactory;&lt;/p&gt;

&lt;p&gt;import org.jaxen.Context;&lt;br/&gt;
import org.jaxen.ContextSupport;&lt;br/&gt;
import org.jaxen.dom.DocumentNavigator;&lt;br/&gt;
import org.jaxen.pattern.Pattern;&lt;br/&gt;
import org.jaxen.pattern.PatternParser;&lt;br/&gt;
import org.w3c.dom.Document;&lt;br/&gt;
import org.w3c.dom.Node;&lt;br/&gt;
import org.xml.sax.InputSource;&lt;/p&gt;

&lt;p&gt;public class Test {&lt;/p&gt;

&lt;p&gt;    static Node elem;&lt;br/&gt;
    static Context context; &lt;br/&gt;
    static {&lt;br/&gt;
        try {
            InputSource is = new InputSource( new StringReader( &quot;&amp;lt;root&amp;gt;   &amp;lt;a/&amp;gt;&amp;lt;!-- --&amp;gt;&amp;lt;b/&amp;gt;&amp;lt;?pi ip?&amp;gt;&amp;lt;b foo=&apos;bar&apos;/&amp;gt;&amp;lt;/root&amp;gt;&quot; ) );
            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse( is );
            elem = doc.getDocumentElement().getLastChild();
            System.out.println( &quot;Current node is the last &amp;lt;&quot;+ elem.getNodeName() +&quot;&amp;gt;&quot; );
            context = new Context( new ContextSupport( null, null, null, new DocumentNavigator() ) );
        } catch (Exception e) { System.out.println(&quot;boo boo&quot;);}&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    public static void main( String[] args ) throws Exception {
        test(&quot;a&quot;);
        test(&quot;b&quot;);
        test(&quot;root/b&quot;);
        test(&quot;a/b&quot;);
        test(&quot;/root/b&quot;);
        test(&quot;/root/b[@foo]&quot;);
        test(&quot;/root/b[@bar]&quot;);
// the troubles come here
        test(&quot;/root/b[1]&quot;);
        test(&quot;/root/b[2]&quot;);
        test(&quot;/root/*[1]&quot;);
        test(&quot;/root/*[2]&quot;);
        test(&quot;/root/*[3]&quot;);
        test(&quot;/root/node()[1]&quot;);
        test(&quot;/root/node()[5]&quot;);
        test(&quot;/root/node()[6]&quot;);
    }&lt;/p&gt;

&lt;p&gt;    private static void test( String pattern ) throws Exception {
        Pattern p = PatternParser.parse( pattern );
        boolean b = p.matches( elem, context );
        System.out.println( b  + &quot;  &quot; + pattern );
    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;======= RESULT&lt;/p&gt;

&lt;p&gt;&amp;lt;root&amp;gt;   &amp;lt;a/&amp;gt;&amp;lt;!-- --&amp;gt;&amp;lt;b/&amp;gt;&amp;lt;?pi ip?&amp;gt;&amp;lt;b foo=&apos;bar&apos;/&amp;gt;&amp;lt;/root&amp;gt;&lt;/p&gt;

&lt;p&gt;Current node is the last &amp;lt;b&amp;gt;&lt;br/&gt;
false  a&lt;br/&gt;
true  b&lt;br/&gt;
true  root/b&lt;br/&gt;
false  a/b&lt;br/&gt;
true  /root/b&lt;br/&gt;
true  /root/b&lt;span class=&quot;error&quot;&gt;&amp;#91;@foo&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/b&lt;span class=&quot;error&quot;&gt;&amp;#91;@bar&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/b&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/b&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/*&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/*&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/node()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/node()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/node()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;========= RESULT EXPECTED&lt;/p&gt;

&lt;p&gt;All patterns that have a number are failing ; the result should be :&lt;/p&gt;

&lt;p&gt;false  /root/b&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/b&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/*&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/*&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/node()&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
false  /root/node()&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;&lt;br/&gt;
true  /root/node()&lt;span class=&quot;error&quot;&gt;&amp;#91;6&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The entry of a pattern is a single node, not a node-set ; the context is built with this single node, which makes the pattern matching on &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; ; node()&lt;span class=&quot;error&quot;&gt;&amp;#91;n&amp;#93;&lt;/span&gt; matches all the time because the predicate is discarded.&lt;/p&gt;

&lt;p&gt;To fix this, I wrote some new code because there are more intricacies than it seems : the position of an item depends on the test performed ; thus, it appears that at some stage, we need to know one of the 4 kind of positions :&lt;br/&gt;
-the absolute index (when node() is involved)&lt;br/&gt;
-the absolute index in the type (&lt;b&gt;, @&lt;/b&gt;, text(), comment(), pi(), ns::*)&lt;br/&gt;
-the absolute index in the &quot;family&quot; (p:&lt;b&gt;, @p:&lt;/b&gt;)&lt;br/&gt;
-the absolute index in the same name (foo, p:foo, @bar, @p:bar, pi(target), ns:&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;br/&gt;
(The position of the document is 1) &lt;/p&gt;

&lt;p&gt;The best place to resolve them is in the navigators, which implies to add 4 new methods. With DOM, computing these indexes is trivial, just walk on previous siblings.&lt;br/&gt;
Now, there is a similar issue if last() or count() was involved ; there is a need for 4 other methods that return the size according to the test performed.&lt;/p&gt;</description>
                <environment></environment>
            <key id="35749">JAXEN-139</key>
            <summary>Patterns fail when a predicate involves the position of a node</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="ppoulard">Philippe Poulard</reporter>
                        <created>Fri, 7 Apr 2006 11:39:54 -0500</created>
                <updated>Fri, 7 Apr 2006 12:10:42 -0500</updated>
                                    <version>1.0</version>
                <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="63073" author="elharo" created="Fri, 7 Apr 2006 11:51:15 -0500"  >&lt;p&gt;1.0 is very old and extremely buggy. It is likely that this bug has been fixed in 1.1, which is superior in every way depite the beta designation. Please don&apos;t report bugs against 1.0. Patches will only be accepted against the head. Finally, we really don&apos;t want to change the navigator interface unless we absolutely have to since that would break a lot of third party code. &lt;/p&gt;</comment>
                    <comment id="63076" author="elharo" created="Fri, 7 Apr 2006 12:10:42 -0500"  >&lt;p&gt;I&apos;ve tested this in 1.1, and it is broken there too. The pattern package is weird. I don&apos;t use it, and I&apos;m not sure what&apos;s going here. If it were a question of making  backwards incompatible change to navigator or deleting the pattern package, i would favor deleting the pattern package. Perhaps someone else can figure out how to fix this without adding methods to Navigator.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 31 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>ppoulard</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-138] incorrect maven 2 poms on ibiblio are not from cvs</title>
                <link>http://jira.codehaus.org/browse/JAXEN-138</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;a href=&quot;http://www.ctoforaday.com/archives/000049.html&quot;&gt;http://www.ctoforaday.com/archives/000049.html&lt;/a&gt; Gregory Block was blogging about experiences with maven 2, jaxen came up:&lt;/p&gt;

&lt;p&gt;&quot;Which brings us neatly to jaxen. There&apos;s a flag that allows libraries to list other libraries as optional dependencies - so you&apos;d think that a system that includes plugins for jDOM, dom4j, and xom would list them as being optional, so you don&apos;t end up with all three. Fat chance. Worse yet, jdom&apos;s got the xmlapi/xerces problem. So in the end, Maven will go to download jDOM, dom4j, and xom - and all of their dependent libraries. Solution? More exclusions to go with your exclusions, forcing them all to excluded so you can manually choose what you end up deploying.&quot;&lt;/p&gt;

&lt;p&gt;He&apos;s referring to the &apos;scope&apos; element in v4 poms for maven2. This struck me as odd since we only use maven1, but checking on ibiblio I see the only poms we have up there are for maven2. &lt;/p&gt;

&lt;p&gt;Can we fix this without jumping to m2 ourselves?&lt;/p&gt;</description>
                <environment>all</environment>
            <key id="33351">JAXEN-138</key>
            <summary>incorrect maven 2 poms on ibiblio are not from cvs</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 6 Feb 2006 17:48:00 -0600</created>
                <updated>Sat, 4 Apr 2009 08:50:18 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 07:14:03 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="57991" author="elharo" created="Mon, 6 Feb 2006 18:04:38 -0600"  >&lt;p&gt;&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/poms/&quot;&gt;http://www.ibiblio.org/maven/jaxen/poms/&lt;/a&gt; looks like Maven 1 poms to me. I&apos;m not sure what you&apos;re loking at. I don&apos;t know anything about maven 2 POMs for jaxen.&lt;/p&gt;

&lt;p&gt;Also Gregory Block  is wrong about jaxen&apos;s structure. There are no plugins. There&apos;s one monolithic code base that depends on everything. Breaking this up into a more modular system has been on the todo list for  a while now, but I doubt we&apos;ll get to it in time for Jaxen 1.1.&lt;/p&gt;</comment>
                    <comment id="57993" author="bazzargh" created="Mon, 6 Feb 2006 18:14:57 -0600"  >&lt;p&gt;What he&apos;s referring to is that in maven 2 you can define some dependencies as being build-time only (that&apos;s what &apos;scope&apos; is for) so that you don&apos;t pull them in as transitive dependencies when you&apos;re only depending on jaxen. It isn&apos;t about splitting jaxen into modules, just recording in the pom that not everything is required to use jaxen at runtime.&lt;/p&gt;

&lt;p&gt;Now compare our project xml:&lt;br/&gt;
&lt;a href=&quot;http://cvs.jaxen.codehaus.org/viewrep/jaxen/jaxen/project.xml?r=1.58&quot;&gt;http://cvs.jaxen.codehaus.org/viewrep/jaxen/jaxen/project.xml?r=1.58&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;with what&apos;s up on ibiblio, eg:&lt;br/&gt;
&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/poms/jaxen-1.1-beta-4.pom&quot;&gt;http://www.ibiblio.org/maven/jaxen/poms/jaxen-1.1-beta-4.pom&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The one on ibiblio begins with &apos;&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&apos;. &lt;br/&gt;
take a look at &apos;modelVersion&apos; - not only is the modelVersion element just called &apos;version&apos; in maven 1, the value refers to the maven 2 schema. All of the pom files there are for maven 2.&lt;/p&gt;</comment>
                    <comment id="57997" author="bazzargh" created="Mon, 6 Feb 2006 18:35:14 -0600"  >&lt;p&gt;I&apos;ve changed the title to make it clearer what the problem is here Elliotte. I know we dont have m2 poms, but they&apos;ve sprouted up on ibiblio, and don&apos;t seem connected with Peter deploying the corresponding jars. &lt;/p&gt;

&lt;p&gt;I&apos;m guessing one of the maven people has added them to support the m2 release, and its ended up with complaints about jaxen. I&apos;d prefer we had /no/ poms on ibiblio than have random files appearing there unconnected to our releases; who should users complain to?&lt;/p&gt;

&lt;p&gt;When I asked if we could fix this without upgrading to m2, I was referring to the method of deployment onto ibiblio (ie maven jar:deploy). Since we use maven 1, its hardly going to deploy maven 2 descriptors for us.&lt;/p&gt;</comment>
                    <comment id="58008" author="elharo" created="Mon, 6 Feb 2006 19:14:31 -0600"  >&lt;p&gt;I&apos;m not sure what&apos;s happening there. I guess some maven person went through and modified the poms, possibly automatically. We shoudl probably file a bug on this with maven and ask for our orignal poms back or something. &lt;/p&gt;</comment>
                    <comment id="58046" author="proyal" created="Tue, 7 Feb 2006 07:09:35 -0600"  >&lt;p&gt;I know the maven guys have a routine that auto-generates m2 poms from m1 project.xml&apos;s....&lt;/p&gt;

&lt;p&gt;And speaking of m2, I took a look at converting the build to m2 this past weekend but gave up. There&apos;s too little documentation, especially on migrating, given that we have extra things in our build like cobertura and findbugs. If anything, going back to just an ant build seems most sensible.&lt;/p&gt;</comment>
                    <comment id="63261" author="brettporter" created="Mon, 10 Apr 2006 16:45:36 -0500"  >&lt;p&gt;Basically what happened here:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;m1 poms get automatically converted to m2 poms in /maven2/&lt;/li&gt;
	&lt;li&gt;We changed /maven/ to map to /maven2/ to ease long term maintenance.&lt;/li&gt;
	&lt;li&gt;This means m1 poms aren&apos;t accessible from ibiblio any more. This shouldn&apos;t be a problem, as m1 doesn&apos;t use them.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If this is causing an issue, or the conversion is wrong, let me know (you can file a bug at MEV under jira.codehaus.org). If it just looks different but appears to be correct in terms of data, everything should be fine.&lt;/p&gt;

&lt;p&gt;In terms of what I can see here, you want to change the way it is converted - this can be done in m1 by adding:&lt;br/&gt;
&amp;lt;properties&amp;gt;&lt;br/&gt;
  &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;&lt;br/&gt;
&amp;lt;/properties&amp;gt;&lt;/p&gt;

&lt;p&gt;(or &amp;lt;properties&amp;gt;&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;, or similar...). These have no effect on m1, but will be converted to m2 correctly.&lt;/p&gt;

&lt;p&gt;BTW, Peter - let me know if I can help regarding converting to m2. There is admittedly little documentation on converting from m1 because there isn&apos;t a great migration path, but it is meant to be easy enough to start from scratch (in parallel to the existing build) without being any more time consuming than a migration, or an ant build. Some folks are working on organizing the documentation at the moment in the wiki.&lt;/p&gt;</comment>
                    <comment id="63329" author="proyal" created="Tue, 11 Apr 2006 13:06:02 -0500"  >&lt;p&gt;Brett, thanks for the offer of m2 conversion help &amp;#8211; I might hit you up on IRC about that when I get some free time to devote to it.&lt;/p&gt;</comment>
                    <comment id="63349" author="bazzargh" created="Tue, 11 Apr 2006 18:32:19 -0500"  >&lt;p&gt;If you&apos;re going to discuss this on irc, can you ping me? Adding a comment to this bug would do, I&apos;ll pop over if/when the mail comes in. If I&apos;m not around, just don&apos;t wait for me. I&apos;m just interested in listening in on this. Thanks!&lt;/p&gt;</comment>
                    <comment id="68823" author="elharo" created="Mon, 3 Jul 2006 07:14:03 -0500"  >&lt;p&gt;I&apos;m not convinced this is our bug. It really sound slike it&apos;s Maven that has the problem. Jaxen itself is just fine. If there&apos;s a specific action Jaxen can take short of moving to Maven 2, and the Maven folks tell us what that is, then we can do it.&lt;/p&gt;

&lt;p&gt;Longer term I think we&apos;ll move to Maven 2 after 1.1; and presumably that will fix any remaining issues. &lt;/p&gt;</comment>
                    <comment id="152495" author="diathesis2" created="Thu, 30 Oct 2008 13:07:06 -0500"  >&lt;p&gt;Well, since this doesn&apos;t seem to have happened yet, is there any interest in having an outsider do a Maven 2 conversion for you?  I might be persuadable (although I&apos;d have to check out XOM to get a sense for what&apos;s required) before I make any commitments.&lt;/p&gt;</comment>
                    <comment id="172028" author="elharo" created="Sat, 4 Apr 2009 08:50:18 -0500"  >&lt;p&gt;Geoffrey,&lt;/p&gt;

&lt;p&gt;Now would be a good time to do a Maven 2 conversion since the code&apos;s fairly stable and no other major work is happening at the moment. Possibly we could release a 1.1.3 that did nothing except upgrade to Maven 2. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 31 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>brettporter</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>diathesis2</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-137] No Implementation-Vendor-Id in manifest</title>
                <link>http://jira.codehaus.org/browse/JAXEN-137</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;There is no Implementation-Vendor-Id entry in the manifest of jaxen-1.1-beta8.jar.&lt;/p&gt;

&lt;p&gt;Please add one.&lt;/p&gt;</description>
                <environment>Any</environment>
            <key id="30951">JAXEN-137</key>
            <summary>No Implementation-Vendor-Id in manifest</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="pgrange">Pascal Grange</reporter>
                        <created>Wed, 14 Dec 2005 08:30:22 -0600</created>
                <updated>Wed, 12 Apr 2006 12:56:46 -0500</updated>
                                    <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="53411" author="bazzargh" created="Wed, 14 Dec 2005 08:52:42 -0600"  >&lt;p&gt;Presumably you need this because it causes a problem somewhere? Care to drop any hints? &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m guessing its a tomcat issue since that&apos;s what googling for bugs with this property throw up, but it would be useful to know so I can test that what I put in there actually resolves your problem.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10010">
                <name>Related</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="30788">MJAR-5</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 47 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>pgrange</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-136] DOMXPath cannot find xmlns node</title>
                <link>http://jira.codehaus.org/browse/JAXEN-136</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I have been able to use DOMXPath to find &quot;xmlns&quot; node under Jaxen 1.0, but after I upgraded to jaxen-1.1-beta-8,&lt;br/&gt;
it start failing to match and null result is returned by selectSingleNode().&lt;/p&gt;

&lt;p&gt;All of the following three expressions worked with Jaxen 1.0 but not anymore:&lt;br/&gt;
  &quot;//x:html/@*&lt;span class=&quot;error&quot;&gt;&amp;#91;local-name()=&amp;#39;xmlns&amp;#39;&amp;#93;&lt;/span&gt;&quot;&lt;br/&gt;
  &quot;//x:html&lt;span class=&quot;error&quot;&gt;&amp;#91;@xmlns:xmlns&amp;#93;&lt;/span&gt;&quot;&lt;br/&gt;
  &quot;//x:html/@*&lt;span class=&quot;error&quot;&gt;&amp;#91;self::xmlns:xmlns&amp;#93;&lt;/span&gt;&quot;&lt;/p&gt;

&lt;p&gt;I created a standalone JUnit test case to reproduce the behavior and am going to attach the java source for &lt;br/&gt;
the unit test.&lt;/p&gt;</description>
                <environment>sun jdk1.5.0_04</environment>
            <key id="30528">JAXEN-136</key>
            <summary>DOMXPath cannot find xmlns node</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="tomokiyo">Takashi Tomokiyo</reporter>
                        <created>Mon, 5 Dec 2005 13:54:17 -0600</created>
                <updated>Mon, 5 Dec 2005 16:14:14 -0600</updated>
                    <resolved>Mon, 5 Dec 2005 16:14:14 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="52822" author="elharo" created="Mon, 5 Dec 2005 16:14:14 -0600"  >&lt;p&gt;It sounds like Jaxen 1.0 was buggy in this respect. Attributes that declare namespaces are not part of the XPath data model, and are not addressable by XPath. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="17943" name="TestDOMXPath.java" size="3309" author="tomokiyo" created="Mon, 5 Dec 2005 13:54:17 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 48 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>tomokiyo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-135] Continuous Integration</title>
                <link>http://jira.codehaus.org/browse/JAXEN-135</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;It would be nice if someone in their Copious Spare Time&amp;trade;   could set up Jaxen with either Cruise Control or Continuum. Not urgent, but it&apos;s worth doing. Anyone happen to know if Codehaus runs a Continuum or Cruise Control system? Since we build out of Maven this shouldn&apos;t be too hard to do. Notifications could be sent via e-mail to dev@jaxen.codehaus.org.&lt;/p&gt;</description>
                <environment></environment>
            <key id="29987">JAXEN-135</key>
            <summary>Continuous Integration</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="4" iconUrl="http://jira.codehaus.org/images/icons/status_reopened.gif">Reopened</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 22 Nov 2005 07:05:53 -0600</created>
                <updated>Mon, 3 Jul 2006 08:51:36 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="51645" author="elharo" created="Tue, 22 Nov 2005 07:07:59 -0600"  >&lt;p&gt;According to &lt;a href=&quot;http://builds.codehaus.org/continuum-outage.html&quot;&gt;http://builds.codehaus.org/continuum-outage.html&lt;/a&gt; &quot;A new public Continuum site will be available shortly (mid April 2005)&quot; Anyone know what&apos;s going on?&lt;/p&gt;</comment>
                    <comment id="51646" author="bob" created="Tue, 22 Nov 2005 07:17:32 -0600"  >&lt;p&gt;&lt;a href=&quot;http://ci.codehaus.org/&quot;&gt;http://ci.codehaus.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;runs beetlejuice, cruisecontrol, and soon luntbuild and continuum.&lt;/p&gt;

&lt;p&gt;between BJ and CC, which would you prefer?&lt;/p&gt;</comment>
                    <comment id="51647" author="elharo" created="Tue, 22 Nov 2005 07:45:21 -0600"  >&lt;p&gt;I&apos;ve never even heard of Beetlejuice. If you have a string preference, pick one. I can&apos;t reallly make an informed decision. Both look fine to me. I guess pick which ever one is simpler to set up. &lt;/p&gt;</comment>
                    <comment id="51651" author="bob" created="Tue, 22 Nov 2005 08:46:18 -0600"  >&lt;p&gt;Joe Walnes set us up with Beetlejuice&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ci.codehaus.org/beetlejuice/viewProjectSummary.action?projectName=Jaxen&quot;&gt;http://ci.codehaus.org/beetlejuice/viewProjectSummary.action?projectName=Jaxen&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="51652" author="elharo" created="Tue, 22 Nov 2005 09:15:26 -0600"  >&lt;p&gt;Cool. Thanks. One more minor step. We should add a link to the build results from the web site, probably from the Project Info section. &lt;/p&gt;</comment>
                    <comment id="68832" author="elharo" created="Mon, 3 Jul 2006 08:51:36 -0500"  >&lt;p&gt;The lack of anonymous CVS has broken this. &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-134] Wrong link to the binary download page</title>
                <link>http://jira.codehaus.org/browse/JAXEN-134</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The page &amp;lt;&lt;a href=&quot;http://jaxen.org/releases.html&quot;&gt;http://jaxen.org/releases.html&lt;/a&gt;&amp;gt; promises a link to binary releases, but the link leads to &amp;lt;&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/distributions/&quot;&gt;http://www.ibiblio.org/maven/jaxen/distributions/&lt;/a&gt;&amp;gt;, which only contains old releases.&lt;/p&gt;

&lt;p&gt;Wouldn&apos;t a link to ibiblio &amp;lt;&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/jars/&quot;&gt;http://www.ibiblio.org/maven/jaxen/jars/&lt;/a&gt;&amp;gt; be more appropriate?&lt;/p&gt;</description>
                <environment></environment>
            <key id="29083">JAXEN-134</key>
            <summary>Wrong link to the binary download page</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="d_n_a">Denis N. Antonioli</reporter>
                        <created>Sat, 5 Nov 2005 05:52:22 -0600</created>
                <updated>Mon, 3 Jul 2006 09:02:55 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 09:02:55 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="68834" author="elharo" created="Mon, 3 Jul 2006 09:02:55 -0500"  >&lt;p&gt;On further thought I don&apos;t think any of the Maven links make sense. They&apos;re not up-to-date and will just confuse people. I removed them from releases.xml.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>d_n_a</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-133] Provides recent binary build for ibiblio</title>
                <link>http://jira.codehaus.org/browse/JAXEN-133</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The latest release available at ibiblio (&lt;a href=&quot;http://www.ibiblio.org/maven/jaxen/jars/&quot;&gt;http://www.ibiblio.org/maven/jaxen/jars/&lt;/a&gt;) is jaxen-1.1-beta-6.jar &lt;/p&gt;

&lt;p&gt;Many projects uses jaxen though maven and are limited to the versions available there. Jaxen has improved since 1.1-beta-6 &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  and it&apos;s sad that these projects can&apos;t use the newer versions.&lt;/p&gt;</description>
                <environment></environment>
            <key id="28259">JAXEN-133</key>
            <summary>Provides recent binary build for ibiblio</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="d_n_a">Denis N. Antonioli</reporter>
                        <created>Mon, 17 Oct 2005 04:50:30 -0500</created>
                <updated>Thu, 20 Oct 2005 12:52:59 -0500</updated>
                    <resolved>Thu, 20 Oct 2005 10:04:32 -0500</resolved>
                            <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="48934" author="proyal" created="Thu, 20 Oct 2005 10:04:31 -0500"  >&lt;p&gt;If the jar is placed in &lt;a href=&quot;http://dist.codehaus.org/jaxen/jars/&quot;&gt;http://dist.codehaus.org/jaxen/jars/&lt;/a&gt;, it will sync to ibiblio. I&apos;ve put the beta-7 and beta-8 jars in there, they should be on ibiblio in about 4 hours.&lt;/p&gt;</comment>
                    <comment id="48945" author="proyal" created="Thu, 20 Oct 2005 12:52:59 -0500"  >&lt;p&gt;betas 6-8 are on ibiblio now&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 3 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>d_n_a</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-132] Relicense jaxen</title>
                <link>http://jira.codehaus.org/browse/JAXEN-132</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;There seems to be consensus on the mailing list for relicensing  Jaxen under the real modified BSD license, not the pseudo-BSD license it has now. For the record, let&apos;s see if we can get all the committers to add a comment here approving this relicensing. Once this is done we can go ahead and make the change. Hopefully everyone can be contacted. &lt;/p&gt;</description>
                <environment></environment>
            <key id="27878">JAXEN-132</key>
            <summary>Relicense jaxen</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jstrachan">james strachan</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 5 Oct 2005 02:54:10 -0500</created>
                <updated>Sat, 8 Apr 2006 12:37:34 -0500</updated>
                    <resolved>Sat, 8 Apr 2006 12:37:34 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="47839" author="elharo" created="Wed, 5 Oct 2005 02:57:24 -0500"  >&lt;p&gt;The license being proposed is &lt;/p&gt;

&lt;p&gt;Copyright (c) &amp;lt;YEAR&amp;gt;, &amp;lt;OWNER&amp;gt;&lt;br/&gt;
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/li&gt;
	&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/li&gt;
	&lt;li&gt;Neither the name of the &amp;lt;ORGANIZATION&amp;gt; nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</comment>
                    <comment id="47840" author="elharo" created="Wed, 5 Oct 2005 02:57:46 -0500"  >&lt;p&gt;Elliotte Rusty Harold agrees to this change.&lt;/p&gt;</comment>
                    <comment id="47844" author="bazzargh" created="Wed, 5 Oct 2005 04:17:11 -0500"  >&lt;p&gt;Brian Ewins agrees to this change.&lt;/p&gt;</comment>
                    <comment id="47857" author="proyal" created="Wed, 5 Oct 2005 06:55:16 -0500"  >&lt;p&gt;Peter Royal agrees to this change.&lt;/p&gt;</comment>
                    <comment id="47863" author="bob" created="Wed, 5 Oct 2005 07:46:26 -0500"  >&lt;p&gt;Bob McWhirter agrees to this change and apologizes profusely for the mess of licensing ERH is doing a great job of fixing.&lt;/p&gt;</comment>
                    <comment id="47867" author="scolebourne" created="Wed, 5 Oct 2005 08:12:50 -0500"  >&lt;p&gt;Stephen Colebourne agrees to this change (although not asked to, I did author the NamedAccessNavigator)&lt;/p&gt;</comment>
                    <comment id="47877" author="purple" created="Wed, 5 Oct 2005 10:46:32 -0500"  >&lt;p&gt;Alex Chaffee agrees to this change.&lt;/p&gt;</comment>
                    <comment id="47880" author="dpeterson" created="Wed, 5 Oct 2005 11:29:11 -0500"  >&lt;p&gt;As a lowly contributor of a tiny bit of code several years ago, I don&apos;t think I really need to, but David Peterson agrees to this change.&lt;/p&gt;</comment>
                    <comment id="47900" author="hip" created="Wed, 5 Oct 2005 15:58:49 -0500"  >&lt;p&gt;Brad Huffman agrees to this change and the relicensing of any code written by me.&lt;/p&gt;</comment>
                    <comment id="47935" author="hoju" created="Wed, 5 Oct 2005 22:41:07 -0500"  >&lt;p&gt;Jacob Kjome agrees to this change.&lt;/p&gt;</comment>
                    <comment id="47989" author="jhunter" created="Thu, 6 Oct 2005 19:18:01 -0500"  >&lt;p&gt;Jason Hunter agrees to this change and the relicensing of any code written by me.&lt;/p&gt;</comment>
                    <comment id="50343" author="dotnot" created="Tue, 8 Nov 2005 11:41:16 -0600"  >&lt;p&gt;Scott Sanders agress to this change.&lt;/p&gt;</comment>
                    <comment id="50347" author="jdvorak" created="Tue, 8 Nov 2005 13:06:18 -0600"  >&lt;p&gt; Jan Dvorak agrees to this change.&lt;/p&gt;</comment>
                    <comment id="50382" author="erwin@klomp.org" created="Tue, 8 Nov 2005 15:36:40 -0600"  >&lt;p&gt;Erwin Bolwidt agrees to this change.&lt;/p&gt;</comment>
                    <comment id="50441" author="aszegedi" created="Wed, 9 Nov 2005 05:03:02 -0600"  >&lt;p&gt;Attila Szegedi agrees to this change.&lt;/p&gt;</comment>
                    <comment id="50572" author="cnentwich" created="Thu, 10 Nov 2005 11:14:52 -0600"  >&lt;p&gt;Christian Nentwich agrees to this change.&lt;/p&gt;</comment>
                    <comment id="51532" author="jstrachan" created="Mon, 21 Nov 2005 09:58:17 -0600"  >&lt;p&gt;James Strachan agrees to this change and the relicensing of any code written by me.&lt;/p&gt;</comment>
                    <comment id="52829" author="elharo" created="Mon, 5 Dec 2005 17:02:02 -0600"  >&lt;p&gt;In e-mail on Dec. 5, 2005 at 5:34 P.M. David Meggginson wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; We would greatly appreciate it if you could express your approval of&lt;br/&gt;
&amp;gt; this change by logging into Jira at&lt;br/&gt;
&amp;gt; &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-132&quot;&gt;http://jira.codehaus.org/browse/JAXEN-132&lt;/a&gt; and adding a comment saying&lt;br/&gt;
&amp;gt; you approve. If you disapprove of the change, please also log in and&lt;br/&gt;
&amp;gt; tell us that. If logging into Jira is a problem, just send your response&lt;br/&gt;
&amp;gt; to me and I&apos;ll add it in Jira.&lt;/p&gt;

&lt;p&gt;I have no objection to the relicensing.&lt;/p&gt;


&lt;p&gt;Thanks, and all the best,&lt;/p&gt;


&lt;p&gt;David&lt;/p&gt;</comment>
                    <comment id="52859" author="elharo" created="Tue, 6 Dec 2005 04:30:01 -0600"  >&lt;p&gt;On 12/5/05 at 1246 PM Paul R. Brown sent e-mail to me saying:&lt;/p&gt;


&lt;p&gt;Hi, Elliotte &amp;#8211;&lt;/p&gt;

&lt;p&gt;I agree to the relicensing.&lt;/p&gt;

&lt;p&gt;Cheers.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Paul &lt;/p&gt;</comment>
                    <comment id="52860" author="slehmann" created="Tue, 6 Dec 2005 04:37:40 -0600"  >&lt;p&gt;I agree to the relicensing.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;&amp;#8211; Steen&lt;/p&gt;</comment>
                    <comment id="55274" author="iter" created="Mon, 9 Jan 2006 01:25:58 -0600"  >&lt;p&gt;I agree to the relicensing.&lt;/p&gt;

&lt;p&gt;K. Ari Krupnikov&lt;/p&gt;</comment>
                    <comment id="55284" author="jstrachan" created="Mon, 9 Jan 2006 03:35:51 -0600"  >&lt;p&gt;is that everyone agreeing now?&lt;/p&gt;</comment>
                    <comment id="55285" author="elharo" created="Mon, 9 Jan 2006 03:47:21 -0600"  >&lt;p&gt;Reopining because it&apos;s not fixed until we actually change the licenses in all the files. &lt;/p&gt;

&lt;p&gt;It&apos;s not quite everyone agreeing, but no one&apos;s disagreed. I&apos;ll have to check my records when I get a minute, but I think the most significant contributors have all agreed. &lt;/p&gt;

&lt;p&gt;If we can identify any code from anyone who hasn&apos;t agreed, then we should replace it; but thery&apos;re several people we haven;t been able to reach and whom I&apos;m ot sure why they&apos;re in the author lists in the first place. &lt;/p&gt;</comment>
                    <comment id="57895" author="elharo" created="Sun, 5 Feb 2006 15:50:44 -0600"  >&lt;p&gt;I&apos;ve gone ahead and made the change in almost all the files. Holler if you see any that I missed. I di this via grep so an extra space here or there might mean I missed one or two.&lt;/p&gt;

&lt;p&gt;Also we&apos;ve got one contributor still to contact. Brett McLaughlin is a coauthor of Verifier.java which we adopted from JDOM. I&apos;, trying to e-mail him now so we can clean up that file too. &lt;/p&gt;</comment>
                    <comment id="63090" author="bmclaugh" created="Fri, 7 Apr 2006 15:12:22 -0500"  >&lt;p&gt;I agree to this change.&lt;/p&gt;</comment>
                    <comment id="63137" author="elharo" created="Sat, 8 Apr 2006 12:37:34 -0500"  >&lt;p&gt;Everyone has agreed; the changes have been made; and the license files updated.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 31 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>purple</customfieldvalue>
            <customfieldvalue>aszegedi</customfieldvalue>
            <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>hip</customfieldvalue>
            <customfieldvalue>bmclaugh</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>cnentwich</customfieldvalue>
            <customfieldvalue>dpeterson</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>erwin@klomp.org</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
            <customfieldvalue>jstrachan</customfieldvalue>
            <customfieldvalue>jdvorak</customfieldvalue>
            <customfieldvalue>jhunter</customfieldvalue>
            <customfieldvalue>iter</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
            <customfieldvalue>dotnot</customfieldvalue>
            <customfieldvalue>slehmann</customfieldvalue>
            <customfieldvalue>scolebourne</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-131] Clearly link license from web page</title>
                <link>http://jira.codehaus.org/browse/JAXEN-131</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The license for jaxen should be clearly linked from the main jaxen.codehaus.org web page. that is, one of the top level links in the sidebar should say &quot;License&quot; and this should be a link to the actual Jaxen license.&lt;/p&gt;</description>
                <environment></environment>
            <key id="27752">JAXEN-131</key>
            <summary>Clearly link license from web page</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Fri, 30 Sep 2005 09:53:20 -0500</created>
                <updated>Wed, 10 May 2006 13:25:16 -0500</updated>
                    <resolved>Wed, 10 May 2006 13:25:16 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="65142" author="lukas" created="Wed, 10 May 2006 11:36:25 -0500"  >&lt;p&gt;Trying to build the jaxen web site from current cvs I found that it was broken. I attach a patch here that solves the current issue among others. Here is what I did:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;moved 2 contributors from the developers section into contributors (removed their id&apos;s as contributors don&apos;t have an id)&lt;/li&gt;
	&lt;li&gt;removed the changes plugin report (there is no changes.xml file so it does nothing)&lt;/li&gt;
	&lt;li&gt;added a link to the license file from the main navigation menu&lt;/li&gt;
	&lt;li&gt;added a section  in status.xml for the beta 9 release&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="65149" author="elharo" created="Wed, 10 May 2006 13:25:16 -0500"  >&lt;p&gt;Thanks! I&apos;ve applied the patch. The site will be updated automatically the next time we deploy the site, probably with beta 10. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="20524" name="JAXEN-131.patch" size="2875" author="lukas" created="Wed, 10 May 2006 11:36:25 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 26 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>lukas</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-130] JavaBeanXPath constructor that takes DocumentNavigator</title>
                <link>http://jira.codehaus.org/browse/JAXEN-130</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I need to override getDocument/isDocument in o.j.jb.DocumentNavigator but there isn&apos;t a JavaBeanXPath constructor that lets me pass it in, nor can I set it after I&apos;ve constructed the JavaBeanXPath object.&lt;/p&gt;

&lt;p&gt;Am I missing something obvious?&lt;/p&gt;</description>
                <environment></environment>
            <key id="27576">JAXEN-130</key>
            <summary>JavaBeanXPath constructor that takes DocumentNavigator</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="anders">Anders Wallgren</reporter>
                        <created>Fri, 23 Sep 2005 18:39:22 -0500</created>
                <updated>Fri, 23 Sep 2005 18:50:46 -0500</updated>
                                    <version>1.1</version>
                                                <component>javabean</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="47035" author="elharo" created="Fri, 23 Sep 2005 18:50:46 -0500"  >&lt;p&gt;I don;t think you&apos;re missing anything obvious. Why do you want to override getDocument/isDocument in org.jaxen.javabeans.DocumentNavigator?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 7 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>anders</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-129] Namespace for extension functions</title>
                <link>http://jira.codehaus.org/browse/JAXEN-129</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;As near as I can tell there&apos;s no rule in XPath 1.0 that requires extension functions to be in a namespace. That is, the function library is not limited to functions defined in the XPath spec. The list there is minimal, not exclusive. However, in XSLT there is a requirement that extension functions not defined in either XPath or XSLT be in a namespace: &lt;/p&gt;

&lt;p&gt;The argument must evaluate to a string that is a QName. The QName is expanded into an expanded-name using the namespace declarations in scope for the expression. The function-available function returns true if and only if the expanded-name is the name of a function in the function library. If the expanded-name has a non-null namespace URI, then it refers to an extension function; otherwise, it refers to a function defined by XPath or XSLT.&lt;/p&gt;

&lt;p&gt;In other words, if Jaxen provides the org.jaxen.function.ext functions to an XSLT implementation the XSLT implementation is in error. On the other hand, it would be possible for the XSLT implementation to define its own function context that doesn&apos;t include the ext functions. It would even be possible for the XSLT implementation to map the org.jaxen.function.ext functions to to a different namespace URI. &lt;/p&gt;

&lt;p&gt;My gut is that we should fix XPathFunctionContext so that the extension functions are registered in a namespace such as &lt;a href=&quot;http://functions.jaxen.org/&quot;&gt;http://functions.jaxen.org/&lt;/a&gt; but I&apos;m not 100% convinced that&apos;s necessary. It might cause problems for people already using these functions. We could have a deprecation cycle in which both namespaced and nonnamespaced functions were available. That is, we could register the extension functions twice. once with and once without namespaces. &lt;/p&gt;

&lt;p&gt;So the first question is, what, if anything should be done here?&lt;/p&gt;

&lt;p&gt;The second question is if we change the namespace, when should we do it? For 1.1 or 1.2?&lt;/p&gt;
</description>
                <environment></environment>
            <key id="27297">JAXEN-129</key>
            <summary>Namespace for extension functions</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 17 Sep 2005 11:20:25 -0500</created>
                <updated>Thu, 22 Sep 2005 06:06:47 -0500</updated>
                                    <version>1.1</version>
                                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="46818" author="proyal" created="Wed, 21 Sep 2005 07:12:12 -0500"  >&lt;p&gt;I&apos;m not sure its necessary to do anything. I believe the docs could handle what functions were not part of the XPath 1.0 spec, just as XSLT does. Putting them in a namespace would add more confusion to users I think, as they would then have to setup a NamespaceContext in order to assign a prefix to be able to use the functions effectively..&lt;/p&gt;</comment>
                    <comment id="46907" author="bazzargh" created="Thu, 22 Sep 2005 04:38:39 -0500"  >&lt;p&gt;Just for completeness, there are some relevant jaxp requirements also:&lt;/p&gt;

&lt;p&gt;&quot;All implementations are required to support the javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING feature. When the feature is true, any reference to an external function is an error&quot; (p135)&lt;/p&gt;

&lt;p&gt;Implying that we need to make a distinction between builtins and extensions that is not made at present. &lt;/p&gt;

&lt;p&gt;&quot;XPath functions are resolved by name and arity. The resolver is not needed for XPath built-in functions and the resolver cannot be used to override those functions.&lt;br/&gt;
In particular, the resolver is only called for functions in an another namespace (functions with an explicit prefix)...If you wish to implement additional built-in functions, you will have to extend the underlying implementation directly.&quot; (jaxp 1.3 p147)&lt;/p&gt;

&lt;p&gt;the implication here is that we can resolve any functions users supplies &lt;em&gt;via_jaxen_apis&lt;/em&gt; in any namespace as if they were builtins (ie jaxp is less restrictive than xslt), but we can&apos;t  resolve functions the user supplies &lt;em&gt;via_jaxp&lt;/em&gt; in the default namespace.&lt;/p&gt;

&lt;p&gt;My thinking is that this all means we can&apos;t layer jaxp on jaxen as it stands, but we&apos;ll require an internal layer which makes the distinction between builtins and user-supplied functions. The jaxen &apos;personality&apos; would just access builtins so as to be backwards compatible; the jaxp layer, by contrast, will not expose the builtins at all. (ok ok I keep promising a branch for this. I will definitely do this at the weekend)&lt;/p&gt;

&lt;p&gt;Which doesn&apos;t address the original issue, I guess. In jaxp we&apos;ll be able to offer &apos;features&apos; which could include xslt-compatible processing: we&apos;d register non xslt functions into an extension namespace. Theres probably something similar we can do for &apos;pure&apos; jaxen.&lt;/p&gt;

&lt;p&gt;BTW the bugifix on this the other day:&lt;br/&gt;
&lt;a href=&quot;http://cvs.jaxen.codehaus.org/changelog/jaxen/jaxen/src/java/main/org/jaxen?cs=MAIN:elharo:20050917105950&quot;&gt;http://cvs.jaxen.codehaus.org/changelog/jaxen/jaxen/src/java/main/org/jaxen?cs=MAIN:elharo:20050917105950&lt;/a&gt;&lt;br/&gt;
wouldn&apos;t it be better to put code in QualifiedName.toString(), and change the throw to throw new UnresolvableException( &quot;No Such Function &quot; + key );? I&apos;m sure we could use that elsewhere too. &lt;/p&gt;</comment>
                    <comment id="46914" author="elharo" created="Thu, 22 Sep 2005 06:06:47 -0500"  >&lt;p&gt;QualifiedName is only used in SimpleFunctionContext and SimpleVariableContext. A little unusually the qualified name does not actually include the prefix. We could push it into QualifiedName but it&apos;s really only useful for error reportin in these two classes&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 7 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-128] Make default step classes non-public</title>
                <link>http://jira.codehaus.org/browse/JAXEN-128</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;About half of the default classes in org.jaxen.expr (DefaultStep, DefaultTruthExpr, DefaultRelationalExpr, etc.) are public. About half aren&apos;t. None of them should be public. All should be package protected.&lt;/p&gt;

&lt;p&gt;I&apos;ve deprecated these classes for now to warn people they&apos;re going away. In 1.2 we&apos;ll make them non-public and undeprecate them.&lt;/p&gt;</description>
                <environment></environment>
            <key id="26992">JAXEN-128</key>
            <summary>Make default step classes non-public</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 6 Sep 2005 08:38:12 -0500</created>
                <updated>Sun, 18 Sep 2005 03:12:03 -0500</updated>
                                    <version>1.1</version>
                                <fixVersion>1.2</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="46603" author="elharo" created="Sun, 18 Sep 2005 03:12:03 -0500"  >&lt;p&gt;Seems a lot of the classses in org.jaxen.pattern such as PatternParser use these classes. It&apos;s not immediately obvious how easily these can be replaced by the interfaces. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 8 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-127] invalid jaxen POM in /dist/</title>
                <link>http://jira.codehaus.org/browse/JAXEN-127</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;the file: jaxen-1.1-beta-4.pom&lt;/p&gt;

&lt;p&gt;has some invalid elements in the build section, which are causing the maven repository app to report failures.&lt;/p&gt;

&lt;p&gt;Please remove:&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Integration unit test classes --&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;integrationUnitTestPatterns&amp;gt;&lt;br/&gt;
    &amp;lt;/integrationUnitTestPatterns&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- J A R  R E S O U R C E S --&amp;gt;&lt;br/&gt;
    &amp;lt;!-- Resources that are packaged up inside the JAR file --&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;jarResources&amp;gt;&lt;br/&gt;
    &amp;lt;/jarResources&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;jars&amp;gt;&lt;br/&gt;
    &amp;lt;/jars&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="26091">JAXEN-127</key>
            <summary>invalid jaxen POM in /dist/</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="brettporter">Brett Porter</reporter>
                        <created>Mon, 1 Aug 2005 22:30:39 -0500</created>
                <updated>Sat, 6 Aug 2005 22:17:10 -0500</updated>
                    <resolved>Sat, 6 Aug 2005 22:17:10 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="44074" author="brettporter" created="Sat, 6 Aug 2005 22:17:10 -0500"  >&lt;p&gt;I&apos;ve fixed it&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="26065">MEV-47</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 14 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>brettporter</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-126] Cobertura in maven</title>
                <link>http://jira.codehaus.org/browse/JAXEN-126</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;There&apos;s now a Cobertura plugin for Maven. We should use this to integrate code coverage measurements into the build process. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25845">JAXEN-126</key>
            <summary>Cobertura in maven</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 23 Jul 2005 11:28:32 -0500</created>
                <updated>Wed, 5 Oct 2005 02:48:08 -0500</updated>
                    <resolved>Wed, 5 Oct 2005 02:48:08 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="43330" author="elharo" created="Sun, 24 Jul 2005 13:56:26 -0500"  >&lt;p&gt;Done. Before you can build Jaxen now one must install the cobertura plugin using this command:&lt;/p&gt;

&lt;p&gt;maven plugin:download -DgroupId=maven-plugins -DartifactId=maven-cobertura-plugin -Dversion=1.1 &lt;/p&gt;</comment>
                    <comment id="46581" author="elharo" created="Sat, 17 Sep 2005 11:30:41 -0500"  >&lt;p&gt;This needs to be upgraded to Cobertura 1.6 so we can take adavnatge of multiple source directories&lt;/p&gt;</comment>
                    <comment id="47837" author="elharo" created="Wed, 5 Oct 2005 02:48:08 -0500"  >&lt;p&gt;as of 1.1 beta 8&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 5 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-125] Remove java.util.Stack</title>
                <link>http://jira.codehaus.org/browse/JAXEN-125</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;DescendantAxisIterator and PrecedingAxisIterator both use a java.util.Stack, which is synchronized. We could probably speed up performance on these axes by replacing that with an unsynchronized ArrayList.&lt;/p&gt;</description>
                <environment></environment>
            <key id="25817">JAXEN-125</key>
            <summary>Remove java.util.Stack</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Fri, 22 Jul 2005 05:41:51 -0500</created>
                <updated>Sun, 24 Jul 2005 11:16:29 -0500</updated>
                    <resolved>Sun, 24 Jul 2005 11:16:29 -0500</resolved>
                                                            <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="43326" author="elharo" created="Sun, 24 Jul 2005 11:16:29 -0500"  >&lt;p&gt;Done.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 15 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-124] Navigator is not polymorphic</title>
                <link>http://jira.codehaus.org/browse/JAXEN-124</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The Navigator interface has a host of getElementStringValue (which only applies to elements), getTextStringValue (which only applies to texts), getAttributeStringValue (which only applies to attributes) and so forth. This is very unOOP like. There should be one getStringValue method which itself determines the type of the object passed to it. As is, this has to be done instead in every method that calls this method. For instance, StringFunction.evaluate().  &lt;/p&gt;

&lt;p&gt;Replacing this with a single method would dramatically simplify the API. In some cases it might be faster too. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25326">JAXEN-124</key>
            <summary>Navigator is not polymorphic</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 3 Jul 2005 09:27:12 -0500</created>
                <updated>Mon, 1 May 2006 06:34:57 -0500</updated>
                                    <version>2.0</version>
                                <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="64477" author="elharo" created="Mon, 1 May 2006 06:34:56 -0500"  >&lt;p&gt;Moving to 2.0 since it requires an API change&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-123] Update dom4j</title>
                <link>http://jira.codehaus.org/browse/JAXEN-123</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;We&apos;re distributing an old version of the dom4j jar, 1.5.1. We should upgrade to the latest 1.6.1. Among other issues, this cures a license violation inside dom4j with respect to the aelfred parser. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25214">JAXEN-123</key>
            <summary>Update dom4j</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 28 Jun 2005 09:21:16 -0500</created>
                <updated>Mon, 1 May 2006 05:38:47 -0500</updated>
                    <resolved>Mon, 1 May 2006 05:38:47 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>dom4j</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="64473" author="elharo" created="Mon, 1 May 2006 05:38:47 -0500"  >&lt;p&gt;I don&apos;t think the binary bundles dom4j or other models any longer (if it ever did), and the Maven now grabs 1.6.1 so we should be OK on this.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-122] Text logo</title>
                <link>http://jira.codehaus.org/browse/JAXEN-122</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The Jaxen logo on the web site is pure text. However it&apos;s implemented as a graphic. This is bad practice for all sorts of reasons, not least of which is accessibility to sight-impaired users and search engines. The logo should be reimplemented using CSS.&lt;/p&gt;</description>
                <environment></environment>
            <key id="25209">JAXEN-122</key>
            <summary>Text logo</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 28 Jun 2005 08:49:34 -0500</created>
                <updated>Mon, 3 Jul 2006 08:55:42 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="68833" author="elharo" created="Mon, 3 Jul 2006 08:55:42 -0500"  >&lt;p&gt;This seems to get picked up from Maven&apos;s logo element. Once we move to Maven 2.0 we should see if this is replaceable with plain text. If not we&apos;ll file an RFE with Maven. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-121] java.lang.String --&gt; String in JavaDoc</title>
                <link>http://jira.codehaus.org/browse/JAXEN-121</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Figure out how to tell Maven to omit the java.lang prefix (possibly java.util) from classes in those packages when generating JavaDoc. In Javadoc itself this is done with  the -noqualifier tag. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25207">JAXEN-121</key>
            <summary>java.lang.String --&gt; String in JavaDoc</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 28 Jun 2005 08:15:45 -0500</created>
                <updated>Wed, 29 Jun 2005 07:25:27 -0500</updated>
                    <resolved>Wed, 29 Jun 2005 07:25:27 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="42179" author="elharo" created="Wed, 29 Jun 2005 07:25:27 -0500"  >&lt;p&gt;Finally figured out how to get maven to do this. The problem was that the URL for Sun&apos;s javadoc wasn&apos;t quite right.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 19 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-120] Deprecated maven tasks</title>
                <link>http://jira.codehaus.org/browse/JAXEN-120</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;While deploying maven gives the following message:&lt;/p&gt;

&lt;p&gt;  &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; DEPRECATED: use of deploy:artifact tag and the legacy deploy method are deprecated&lt;/p&gt;

&lt;p&gt;Not a big deal, but if there&apos;s a maven maven who sees how to fix this, we might as well.&lt;/p&gt;</description>
                <environment></environment>
            <key id="25206">JAXEN-120</key>
            <summary>Deprecated maven tasks</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 28 Jun 2005 07:39:15 -0500</created>
                <updated>Tue, 28 Jun 2005 07:39:15 -0500</updated>
                                    <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 19 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-119] Nightly builds</title>
                <link>http://jira.codehaus.org/browse/JAXEN-119</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The web site has said &quot; Nightly builds have been temporarily suspended as we ramp up with using Maven&quot; for a while now. Anyone have enough Maven-fu to get nightly builds working again? Not essential but it would be nice to have. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25103">JAXEN-119</key>
            <summary>Nightly builds</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Fri, 24 Jun 2005 06:03:07 -0500</created>
                <updated>Mon, 1 May 2006 05:21:40 -0500</updated>
                                    <version>1.2</version>
                                                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="41982" author="bazzargh" created="Fri, 24 Jun 2005 07:08:23 -0500"  >&lt;p&gt;see &lt;a href=&quot;http://jira.codehaus.org/browse/HAUS-597&quot; title=&quot;help me get jaxen set up on damagecontrol&quot;&gt;&lt;del&gt;HAUS-597&lt;/del&gt;&lt;/a&gt; (you may want to reopen that after reading this). Quoted here to save you clicking:&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
Me &lt;span class=&quot;error&quot;&gt;&amp;#91;15/Sep/04&amp;#93;&lt;/span&gt;&lt;br/&gt;
We need to get nightly builds going again on jaxen as there&apos;ll be patches landing shortly and the users are jonesin&apos; for a build.&lt;/p&gt;

&lt;p&gt;I&apos;ve not used dc before and just joined in the fun here at the haus, so I&apos;d appreciate someone telling me what needs done or helping out - presume dc needs to be told that it&apos;s maven jar:jar (or a site:... goal?) that gets used, and the cvs trigger needs installed.&lt;/p&gt;

&lt;p&gt;peter royal &lt;span class=&quot;error&quot;&gt;&amp;#91;01/Nov/04&amp;#93;&lt;/span&gt;&lt;br/&gt;
dc has been less than reliable. jason has jaxen building with his new tool and we&apos;ll use that. &lt;br/&gt;
&amp;#8212;&lt;br/&gt;
The tool peter refers to is Continuum - &lt;a href=&quot;http://maven.apache.org/continuum/&quot;&gt;http://maven.apache.org/continuum/&lt;/a&gt; , which has only recently been released itself. Other projects are using DamageControl (see eg &lt;a href=&quot;http://jira.codehaus.org/browse/QDOX-2&quot; title=&quot;Nightly build and publish&quot;&gt;&lt;del&gt;QDOX-2&lt;/del&gt;&lt;/a&gt;, &lt;a href=&quot;http://jira.codehaus.org/browse/JCT-38&quot; title=&quot;Setup nightly builds for Loom and DNA&quot;&gt;&lt;del&gt;JCT-38&lt;/del&gt;&lt;/a&gt;) and mention the reliability issue, but I&apos;d prefer &quot;unreliable&quot; to &quot;no nightly builds for over a year now&quot;.&lt;/p&gt;</comment>
                    <comment id="64472" author="elharo" created="Mon, 1 May 2006 05:21:40 -0500"  >&lt;p&gt;Delaying to 1.2. If anyone wants to fix this before then, feel free.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-118] xpath can&apos;t return parent of selected node</title>
                <link>http://jira.codehaus.org/browse/JAXEN-118</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The xpath &quot;(/html/a/img&lt;span class=&quot;error&quot;&gt;&amp;#91;contains(@src,&amp;#39;gif&amp;#39;)&amp;#93;&lt;/span&gt;)&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;/..&quot; fails with:&lt;br/&gt;
class org.jaxen.saxpath.XPathSyntaxException: 38: Node-set expected&lt;/p&gt;


&lt;p&gt;Add this test method to BaseXPathTest.java to check:&lt;br/&gt;
     public void testParentOfSelection() throws JaxenException {
		/*
		html
			a
				img
			a        &amp;lt;- return that node
				img   &amp;lt;- select this node
		*/
		BaseXPath xpath = new DOMXPath(&quot;(/html/a/img[contains(@src,&apos;gif&apos;)])[2]/..&quot;);
		org.w3c.dom.Element html = doc.createElementNS(&quot;&quot;, &quot;html&quot;);
		org.w3c.dom.Element a1 = doc.createElementNS(&quot;&quot;, &quot;a&quot;);
		org.w3c.dom.Element a2 = doc.createElementNS(&quot;&quot;, &quot;a&quot;);
		org.w3c.dom.Element img1 = doc.createElementNS(&quot;&quot;, &quot;img&quot;);
		  org.w3c.dom.Attr img1_src = doc.createAttributeNS(&quot;&quot;, &quot;src&quot;);
		img1_src.setValue(&quot;1.gif&quot;);
		org.w3c.dom.Element img2 = doc.createElementNS(&quot;&quot;, &quot;img&quot;);
		org.w3c.dom.Attr img2_src = doc.createAttributeNS(&quot;&quot;, &quot;src&quot;);
		img2_src.setValue(&quot;2.gif&quot;);

		img1.appendChild(img1_src);
		img2.appendChild(img2_src);
		a1.appendChild(img1);
		a2.appendChild(img2);
		html.appendChild(a1);
		html.appendChild(a2);
		doc.appendChild(html);

		List result = xpath.selectNodes(doc);
		assertEquals(1, result.size());
		assertEquals(a2, result.get(0));
    }&lt;/p&gt;</description>
                <environment>osx 10.4, java 1.4.2_03</environment>
            <key id="25073">JAXEN-118</key>
            <summary>xpath can&apos;t return parent of selected node</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="d_n_a">Denis N. Antonioli</reporter>
                        <created>Thu, 23 Jun 2005 08:01:52 -0500</created>
                <updated>Mon, 27 Jun 2005 06:17:47 -0500</updated>
                    <resolved>Mon, 27 Jun 2005 06:17:47 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41942" author="elharo" created="Thu, 23 Jun 2005 10:51:57 -0500"  >&lt;p&gt;I got a DOMException trying to run this code. Gneerally you can&apos;t use appendChild to add an attribute. After I changed that to this:&lt;/p&gt;

&lt;p&gt;        img1.setAttributeNode(img1_src);&lt;br/&gt;
        img2.setAttributeNode(img2_src);&lt;/p&gt;

&lt;p&gt;The proposed test passed. Are you using the latest code out of CVS? This looks like something we fixed a few weeks ago.  &lt;/p&gt;</comment>
                    <comment id="42057" author="d_n_a" created="Mon, 27 Jun 2005 06:17:47 -0500"  >&lt;p&gt;I&apos;m using jaxen in webtest, i.e. through htmlunit.&lt;br/&gt;
In that context, I&apos;m still using 1.1-beta-6.&lt;/p&gt;

&lt;p&gt;Indeed, I fetched the head of jaxen today, and the bug is not there anymore.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 19 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>d_n_a</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-117] substring(&quot;hello&quot;, -50) should be &quot;hello&quot;</title>
                <link>http://jira.codehaus.org/browse/JAXEN-117</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Looking over the bugfix in jaxen-116 I think I&apos;ve spotted another bug: substring(&quot;hello&quot;, -50) should produce &quot;hello&quot;, but the code will produce &quot;&quot;. (I&apos;ve not tested this, but you can see it in the path through the code below)&lt;/p&gt;

&lt;p&gt;int substringLength = stringLength; // eg 5. default should effectively be &apos;infinity&apos;.&lt;br/&gt;
...&lt;br/&gt;
int end = start + substringLength; // eg -4 + 5 = 1, but since length wasn&apos;t specified it isn&apos;t 5!&lt;br/&gt;
// negative start is treated as 0&lt;br/&gt;
if ( start &amp;lt; 0){&lt;br/&gt;
    start = 0;&lt;br/&gt;
}&lt;br/&gt;
// ended up with (0,1) not (0, 5).&lt;/p&gt;

&lt;p&gt;I&apos;ll supply tests and a patch for this shortly. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25055">JAXEN-117</key>
            <summary>substring(&quot;hello&quot;, -50) should be &quot;hello&quot;</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 22 Jun 2005 09:41:29 -0500</created>
                <updated>Thu, 23 Jun 2005 04:04:06 -0500</updated>
                    <resolved>Thu, 23 Jun 2005 04:04:06 -0500</resolved>
                            <version>1.0</version>
                <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41889" author="elharo" created="Wed, 22 Jun 2005 12:20:37 -0500"  >&lt;p&gt;This one should be fixed now. It was trickier than it looked. Hopefully nothing else is broken here, but it&apos;s worth inspecting to be sure. &lt;/p&gt;</comment>
                    <comment id="41927" author="bazzargh" created="Thu, 23 Jun 2005 04:04:06 -0500"  >&lt;p&gt;for what its worth, I took a look last night at optimising away the call to string-length, using str.toCharArray()...new String(ary, start, end) instead of StringBuffer, etc. It was only marginally faster and not worth the disruption right now.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 20 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-116] string-length is counting UTF-16 code points, not Unicode characters</title>
                <link>http://jira.codehaus.org/browse/JAXEN-116</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The XPath string-length function is supposed to count Unicode characters. However our implementation based on Java&apos;s String.length() method is counting UTF-16 code points. These are not the same thing. I don&apos;t have time to fix this right this second but I&apos;ll look into it shortly. &lt;/p&gt;</description>
                <environment></environment>
            <key id="25022">JAXEN-116</key>
            <summary>string-length is counting UTF-16 code points, not Unicode characters</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 21 Jun 2005 14:18:14 -0500</created>
                <updated>Wed, 5 Oct 2005 02:49:36 -0500</updated>
                    <resolved>Wed, 5 Oct 2005 02:49:37 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41854" author="elharo" created="Wed, 22 Jun 2005 05:08:33 -0500"  >&lt;p&gt;I&apos;ll have a fix checked in as soon as CVS stops acting up. In the meantime, though, there&apos;s a broader issue. The XPath spec states:&lt;/p&gt;

&lt;p&gt;Strings consist of a sequence of zero or more characters, where a character is defined as in the XML Recommendation &lt;span class=&quot;error&quot;&gt;&amp;#91;XML&amp;#93;&lt;/span&gt;. A single character in XPath thus corresponds to a single Unicode abstract character with a single corresponding Unicode scalar value (see &lt;span class=&quot;error&quot;&gt;&amp;#91;Unicode&amp;#93;&lt;/span&gt;); this is not the same thing as a 16-bit Unicode code value: the Unicode coded character representation for an abstract character with Unicode scalar value greater that U+FFFF is a pair of 16-bit Unicode code values (a surrogate pair). In many programming languages, a string is represented by a sequence of 16-bit Unicode code values; implementations of XPath in such languages must take care to ensure that a surrogate pair is correctly treated as a single XPath character.&lt;/p&gt;

&lt;p&gt;What should we do about Java legal/XML-illegal strings? My revised string-length function handles these by throwing a FucntionCallException, but I don&apos;t think any other part of the API does that.&lt;/p&gt;

&lt;p&gt;Mostly, this only affects people who pass strings directly to methods in the org.jaxen.function package. It shoudln&apos;t affect anyone who only passes in strings by parsing real XML documents. However it may become an issue if:&lt;/p&gt;

&lt;p&gt;1. Someone uses a non-XML model such as the javaBeans Navigator&lt;br/&gt;
2. Someone uses as input an XML model such as DOM or JDOM that doesn&apos;t fully check the legality of each string. &lt;/p&gt;

&lt;p&gt;So far string-length() is the only place I&apos;ve noticed where Jaxen could give incorrect results even if someone used a real XML parser to prepare their input to Jaxen. However if no XML parser is being used, then a lot more could go wrong.  &lt;/p&gt;</comment>
                    <comment id="41859" author="bazzargh" created="Wed, 22 Jun 2005 06:33:25 -0500"  >&lt;p&gt;Since the indexes into strings are indexes of &apos;char&apos;s, can&apos;t substring() return incorrect results too? &lt;/p&gt;

&lt;p&gt;I thought I should check saxpath too, in case we can get illegal string constants that way. It turns out XPathLexer.literal()  doesn&apos;t perform any checks, so I think we can.&lt;/p&gt;</comment>
                    <comment id="41871" author="elharo" created="Wed, 22 Jun 2005 07:45:17 -0500"  >&lt;p&gt;I suspect you&apos;re right. I&apos;ll look at substring now and see if I can write a breaking test case.&lt;/p&gt;</comment>
                    <comment id="41872" author="elharo" created="Wed, 22 Jun 2005 08:09:13 -0500"  >&lt;p&gt;substring() should be fixed now. &lt;/p&gt;</comment>
                    <comment id="41874" author="bazzargh" created="Wed, 22 Jun 2005 09:18:01 -0500"  >&lt;p&gt;couple of typos in the fixes:&lt;br/&gt;
StringLengthFunction imports but doesnt use nu.xom.IllegalCharacterDataException&lt;br/&gt;
in StringLengthFunction&apos;s javadoc: Seciton 4.2 should read Section 4.2&lt;/p&gt;
</comment>
                    <comment id="41878" author="herbyderby" created="Wed, 22 Jun 2005 10:04:27 -0500"  >&lt;p&gt;&amp;gt; What should we do about Java legal/XML-illegal strings?&lt;/p&gt;

&lt;p&gt;I would much prefer that you allow all legal Java strings. I only use Jaxen with non-XML navigators, and the XML spec is already a couple of unicode revisions behind Java now.&lt;/p&gt;</comment>
                    <comment id="41888" author="proyal" created="Wed, 22 Jun 2005 11:54:40 -0500"  >&lt;p&gt;I agree with Chris.&lt;/p&gt;

&lt;p&gt;Perhaps we need a way to tell Jaxen if it is being used against an XML document, or just an XML-like structure?&lt;/p&gt;</comment>
                    <comment id="42025" author="elharo" created="Sat, 25 Jun 2005 10:16:28 -0500"  >&lt;p&gt;The XPath data model is pretty core to XPath. This includes the XML definitions of things like white space and characters. If you get too far off from that, a lot of things start breaking. We&apos;re probably OK with the code as is, but I don;t think we can or should contort the codebase too much to support non-XML data models. XPath is not a query language for arbitrary graphs. For insatnce, there are some big holes in the javaBeans navigator because JavaBeans really aren&apos;t XML documents.&lt;/p&gt;</comment>
                    <comment id="42026" author="elharo" created="Sat, 25 Jun 2005 10:18:03 -0500"  >&lt;p&gt;There may be some further issues in the translate() function related to this that I need to look into. In particular I&apos;m not sure what happens when any or all of the three arguments to that function contain characters from beyond the BMP. Simple test cases for this would be helpful. &lt;/p&gt;</comment>
                    <comment id="42041" author="elharo" created="Sun, 26 Jun 2005 08:05:37 -0500"  >&lt;p&gt;I&apos;ve fixed the translate() function so it can handle surrogate pairs. I&apos;m still considering where else we might have issues like this. The mismatch between Java&apos;s char type and XML&apos;s Character production is a real pain. &lt;/p&gt;</comment>
                    <comment id="47838" author="elharo" created="Wed, 5 Oct 2005 02:49:36 -0500"  >&lt;p&gt;I haven&apos;t found any further places where this is a problem, so I&apos;m closing this issue. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 5 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>herbyderby</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-115] Build instructions</title>
                <link>http://jira.codehaus.org/browse/JAXEN-115</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The website and the distro should have a README.txt or BUILD file explaining how to compile Jaxen.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24982">JAXEN-115</key>
            <summary>Build instructions</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 20 Jun 2005 07:07:06 -0500</created>
                <updated>Mon, 3 Jul 2006 08:50:41 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 20 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-114] Exception cause semantics</title>
                <link>http://jira.codehaus.org/browse/JAXEN-114</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Several exception classes do not properly implement the semantics for the cause related Throwable methods they override such as getCause and printStackTrace. These include org.jaxen.saxpath.SAXPathException, org.jaxen.JaxenRuntimeException, and org.jaxen.FunctionCallException.  &lt;/p&gt;</description>
                <environment></environment>
            <key id="24964">JAXEN-114</key>
            <summary>Exception cause semantics</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 19 Jun 2005 15:55:04 -0500</created>
                <updated>Mon, 1 May 2006 05:19:32 -0500</updated>
                    <resolved>Mon, 1 May 2006 05:19:32 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41695" author="elharo" created="Mon, 20 Jun 2005 07:08:04 -0500"  >&lt;p&gt;I think I&apos;ve got this wrapped up now, but it&apos;s worth somebody looking over JaxenException, JaxenRuntimeException, and SAXPathException to do a sanity check. &lt;/p&gt;</comment>
                    <comment id="41719" author="bazzargh" created="Mon, 20 Jun 2005 12:55:08 -0500"  >&lt;p&gt;Something I didn&apos;t spot had happened:&lt;/p&gt;

&lt;p&gt; public JaxenRuntimeException(Throwable cause) &lt;br/&gt;
 public JaxenRuntimeException(String message) &lt;/p&gt;

&lt;p&gt;compare to the original constructor:&lt;br/&gt;
 public JaxenRuntimeException(JaxenException exception)&lt;/p&gt;

&lt;p&gt;This class was originally intended to be more like InvocationTargetException - it wraps a JaxenException thrown somewhere that it couldn&apos;t be thrown (in Iterators etc) so that we could get it to the outside world. Like InvocationTargetException, its the underlying cause that&apos;s supposed to be used, the runtimeexception doesnt add anything useful to the stacktrace. Hence the single constructor, and the  &apos;getJaxenException()&apos; method. You could safely call getJaxenException() and throw the original cause elsewhere in the API. &lt;/p&gt;

&lt;p&gt;I&apos;m a bit uncomfortable that the type safety this class had has been thrown away. Now I have no idea what this class wraps, if indeed it wraps anything. For my money,  I&apos;d prefer if the code looked more like:&lt;br/&gt;
 public JaxenRuntimeException(JaxenException cause) {
     super(cause.getMessage());
     this.cause = cause;
 }&lt;br/&gt;
 public void initCause(Throwable cause) {
    // cause is always set in the sole constructor.
    throw new IllegalStateException(&quot;Cause cannot be reset&quot;);
 }&lt;br/&gt;
 public JaxenException getJaxenException() { return (JaxenException) getCause(); }&lt;/p&gt;

&lt;p&gt;Also, going back to checking the 1.4 compatibility work: the printStackTrace() methods for this class aren&apos;t overridden (in rev1.7) so will be missing the cause in the logs. My preferred approach for wrapper exceptions is not to do the same dance as jdk1.4, since we&apos;re not interested where the exception was wrapped: just use the stacktrace of the cause. ie&lt;/p&gt;

&lt;p&gt;    public String toString() {
        return getCause().toString();
    }&lt;/p&gt;

&lt;p&gt;    public void printStackTrace() {
        getCause().printStackTrace();
    }&lt;/p&gt;

&lt;p&gt;    public void printStackTrace(PrintStream s) {
        getCause().printStackTrace(s);
    }&lt;br/&gt;
&lt;br/&gt;
    public void printStackTrace(PrintWriter s) {        getCause().printStackTrace(s);    } }&lt;/p&gt;

&lt;p&gt;This doesn&apos;t override the &apos;getStackTrace()&apos; etc methods from 1.4, but they aren&apos;t hugely important here. I haven&apos;t checked the printStackTraces in the other two exceptions yet (fisheye is incredibly slow today!), unfortunately it isn&apos;t quite so simple to fix for non-wrapper exceptions.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at the full code when I get home (hopefully it&apos;s just fisheye thats slow, not cvs) and see if I can figure out why the semantics were changed, and if there&apos;s any negative impact in changing them back.&lt;/p&gt;</comment>
                    <comment id="41729" author="elharo" created="Mon, 20 Jun 2005 15:07:12 -0500"  >&lt;p&gt;We could put getJaxenException back in and make the constructor only take JaxenException as an argument. We could also make initCause only accept JaxenException objects as arguments though that couldn&apos;t be done in the signature. We&apos;d have to do an instanceof test inside the method.&lt;/p&gt;

&lt;p&gt;The main reason I don&apos;t want to do this is for consistency with the standard Java exception chaining mechanism. It&apos;s better to reuse the existing knowledge base of developers  rather than forcing them to learn some new method calls to do the same thing.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure how important it is to make sure this only wraps JaxenExceptions. The JaxenException class doesn&apos;t have any methods of its own. It just inherits from Throwable. The real advantage is being able to rethrow the JaxenException, but is anyone actually doing that? Worst case scenario is that a client unwraps somethng that isn&apos;t a JaxenException, wraps it in a checked JaxenException, and throws that. Ugly, but how often is this actually going to happen? The general reason for any RuntimeException, including JaxenRuntimeException, is that it indicates a code bug that should be fixed, not an occasional condition that should be tested for. I expect most people not to unwrap JaxenRuntimeException for any purpose except debugging.&lt;/p&gt;

&lt;p&gt;I see your point. This is an edge case. I guess I tend to err on the side of greater consistency with the core API, but it wouldn&apos;t be obviously bad to go the other way; especially if we could maintain the usual signatures. I don&apos;t know. What does everyone else think?&lt;/p&gt;</comment>
                    <comment id="41742" author="bazzargh" created="Mon, 20 Jun 2005 19:16:31 -0500"  >&lt;p&gt;I don&apos;t mean to change method signatures from the jdk 1.4 above, just the constructor. getJaxenException() is just a convenience. its the constructor that&apos;s important.&lt;/p&gt;

&lt;p&gt;Anyhoo... I think the constructor is too much to change tonight for the next beta. But going back to the problem at hand: the stacktraces arent correct on &lt;b&gt;any&lt;/b&gt; platform. Neither jdk 1.3 nor 1.4 will report the cause stacktrace and that does need fixed, its frustrating to track down problems  with partial traces. Here&apos;s a suggestion (which does actually mean dropping the jdk1.4 stuff somewhat):&lt;/p&gt;

&lt;p&gt;public class JaxenRuntimeException extends RuntimeException&lt;br/&gt;
{&lt;br/&gt;
    private Throwable cause;&lt;br/&gt;
    private boolean fallback = false;&lt;br/&gt;
    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Create a new JaxenRuntimeException.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@param cause the nested exception that&apos;s wrapped&lt;/li&gt;
	&lt;li&gt;inside this exception&lt;br/&gt;
     */&lt;br/&gt;
    public JaxenRuntimeException(Throwable cause)&lt;br/&gt;
    {&lt;br/&gt;
        super(cause.getMessage());&lt;br/&gt;
        this.cause = cause;&lt;br/&gt;
        fallback = true;&lt;br/&gt;
        try
        &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {            // don&amp;#39;t override the 1.4 methods}&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;        catch (Exception e)&lt;/p&gt;
        {
               // will use fallback
        }
&lt;p&gt;    }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Create a new JaxenRuntimeException.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@param message the detail message&lt;br/&gt;
     */&lt;br/&gt;
    public JaxenRuntimeException(String message) {
        super(message);
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    // I can&apos;t override getCause, because that makes it unavailable to&lt;br/&gt;
    // call in a reflective way - is there a way to call super.getCause&lt;br/&gt;
    // via reflection?&lt;br/&gt;
    public Throwable getUnderlyingCause() {&lt;br/&gt;
        try&lt;/p&gt;
        {
            // don&apos;t override the 1.4 methods: call them if they exist.             
            Method method = Exception.class.getMethod(&quot;getCause&quot;, new Class[0]);
            return (Throwable) method.invoke(this, new Object[0]);
        }
&lt;p&gt;        catch (Exception e)&lt;/p&gt;
        {
              // will use fallback
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public String toString() {&lt;br/&gt;
        if (fallback) {
            cause.toString();
        }&lt;br/&gt;
        return super.toString();&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    public void printStackTrace() {&lt;br/&gt;
        if (fallback) {
            // not &apos;getCause().printStackTrace()&apos; - we have already fallen back
            cause.printStackTrace();
        }&lt;br/&gt;
        super.printStackTrace();&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    public void printStackTrace(PrintStream s) {&lt;br/&gt;
        if (fallback) {
            cause.printStackTrace(s);
        }&lt;br/&gt;
        super.printStackTrace(s);&lt;br/&gt;
    }&lt;br/&gt;
&lt;br/&gt;
    public void printStackTrace(PrintWriter s) {&lt;br/&gt;
        if (fallback) {            cause.printStackTrace(s);        } }&lt;br/&gt;
        super.printStackTrace(s);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;the code above should print the &apos;normal&apos; stacktraces for the platform unless you&apos;re on jdk1.3 and supplied a cause, where it falls back to printing the stack trace of the cause. (the 1.4 version prints the usual chain of &apos;caused by...&apos;) The initCause, getCause methods appear if you compile on jdk1.4. The cost of the reflection doesn&apos;t matter that much, since the exception has already been thrown.&lt;/p&gt;

&lt;p&gt;I can&apos;t see another way of calling super.initCause() than what I&apos;ve done up there (I&apos;m curious to know if there is a way!) - if you don&apos;t call that, you&apos;d need to duplicate all of the printStackTrace() code to get the right results.&lt;/p&gt;</comment>
                    <comment id="41744" author="elharo" created="Mon, 20 Jun 2005 20:17:22 -0500"  >&lt;p&gt;I&apos;m not perfectly clear on what the problem is, but it&apos;s late and I&apos;m tired. Why don&apos;t you try writing a test case that demonstrates the behavior you want and I&apos;ll try to get that working? &lt;/p&gt;</comment>
                    <comment id="41746" author="herbyderby" created="Mon, 20 Jun 2005 20:47:09 -0500"  >&lt;p&gt;Brian, I don&apos;t understand why you think overriding printStackTrace is needed. The javadoc for getCause specifically says &quot;Note that is /not/ necessary to override any of the PrintStackTrace methods, all of which invoke the getCause method to determine th cause of a throwable&quot;. I&apos;ve never had a problem with this working correctly. The JaxenRuntimeException code in CVS looks fine to me. Of course, you will only get nested stack traces if you actually run the code on 1.4+, but that seems quite reasonable to me (FWIW I use Jaxen in a product that must run under 1.3, 1.4, and 1.5).&lt;/p&gt;</comment>
                    <comment id="41764" author="bazzargh" created="Tue, 21 Jun 2005 04:10:16 -0500"  >&lt;p&gt;Doh. You&apos;re right Chris. I shouldn&apos;t write code at 2am.&lt;/p&gt;

&lt;p&gt;The 1.3 stuff does bother me somewhat (we use it in production on 1.3 too), and I&apos;d prefer if we re-threw the jaxenexception to expose the missing stacktrace. But its not a blocker for a beta, I&apos;ll shut up and let Elliotte get some sleep.&lt;/p&gt;</comment>
                    <comment id="41776" author="elharo" created="Tue, 21 Jun 2005 06:29:27 -0500"  >&lt;p&gt;I&apos;d prefer to get this straightened out before we push another beta out. However, I&apos;m still unclear on what exactly it is you want to happen. Is it just that printStackTrace work in 1.3 like it does in 1.4? If so that&apos;s not too hard to do. JaxenException and SAXPathException already do that. It would really help if you could show me the client code you want to write and the output you expect.&lt;/p&gt;

&lt;p&gt;I would prefer to include the complete usual stack trace starting with the stack trace for the JaxenRuntimeException and working back from there. I think your patch puts the cause on top of the runtime exception&apos;s stack trace. I see why you&apos;re doing it, but it&apos;s unusual and potentially confusing.&lt;/p&gt;

&lt;p&gt;I suspct there is a way to call super.initCause reflectively, but I prefer to avoid reflection hacks if we can possibly avoid it. Such code is hard to uinderstand and hard to maintain. &lt;/p&gt;</comment>
                    <comment id="41780" author="bazzargh" created="Tue, 21 Jun 2005 07:44:58 -0500"  >&lt;p&gt;I don&apos;t think this is hugely important  because we&apos;ve been through a handful of betas now with the same issue already, and no-one&apos;s complained. Its not about &quot;client code I want to write&quot; but compatibility with client code written for javen 1.0, and getting better bug reports. &lt;/p&gt;

&lt;p&gt;To sum up: JaxenRuntimeException was never supposed to make it to the public API. I introduced it back when we had problems with the PrececedingSibling iterators (etc) returning the wrong values. In order to fix the iterators, I needed to call some things which potentially threw JaxenException while processing .next(), .hasNext(). What I should also have done is unwrap the exception back to the JaxenException in order not to break client code that previously just caught JaxenException (however unsafe that is!).&lt;/p&gt;

&lt;p&gt;The subsequent changes to the constructors have made it unclear what if anything is wrapped, but jdk1.4 chaining gives us accurate stacktraces without rethrowing, and developers who don&apos;t catch runtimexceptions are shooting themselves in the foot (after all, jaxen used to throw a whole lot more NPEs back then!). Which leaves the stacktrace in jdk1.3 as the only issue, it&apos;d be useless to us in a log or a bug report - but no worse than we&apos;ve had since JaxenRuntimeException first appeared. &lt;/p&gt;

&lt;p&gt;Simulating the full jdk1.4 chaining mechanism is awkward in 1.3 because theres no programmatic access to the stacktrace, so typical implementations dump both stacktraces to the log. However, the stacktrace of the wrapper is never interesting. In fact, we use pure wrapper exceptions with hidden stacktraces like this in our products, even under jdk1.4, as it saves on the inevitable conversation with support - &quot;Read me out the exception...no, not that one, scroll down to the cause&quot;. But I&apos;m not wedded to the solution, or foaming at the mouth to see this fixed - I&apos;m only still writing about it to clear things up... hope that it has.&lt;/p&gt;
</comment>
                    <comment id="41781" author="elharo" created="Tue, 21 Jun 2005 07:48:15 -0500"  >&lt;p&gt;I&apos;ve added some test cases for this in JaxenExceptionTest, JaxenRuntimeExceptionTest, and SAXPathExceptionTest. I&apos;ve also made some fixes so I think it all behaves like it should in Java 1.3 and earlier and 1.4 and later, including printStackTrace printing the nested stack traces. If this doesn&apos;t yet seem right to you, then you could probably modify or add to the unit tests so we can get clear on what you&apos;re looking for. &lt;/p&gt;</comment>
                    <comment id="64471" author="elharo" created="Mon, 1 May 2006 05:19:32 -0500"  >&lt;p&gt;Reading through this thread a year later, it doesn&apos;t seem like the current code base causes problems for anyone, plus anything that happens only in 1.3 is less important now. Thus I&apos;m going to close this.&lt;/p&gt;

&lt;p&gt;If anyone disagrees, feel free to reopen but if so please specify exactly how you want these methods to behave differently than they do now. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>herbyderby</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-113] Thread safety of string() function</title>
                <link>http://jira.codehaus.org/browse/JAXEN-113</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The string() function relies on a static DecimalFormat object. The JavaDoc for this class in the core library says that this class is not thread safe, and recommends using a separate instance in each thread. &quot;Decimal formats are generally not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.&quot;&lt;/p&gt;

&lt;p&gt;Because this is a static field accessed by static methods, I don&apos;t think it&apos;s enough to use separate XPath objects in each thread to avoid this problem. &lt;/p&gt;

&lt;p&gt;One possible fix is to make the format a local variable and create a new one in each method invocation. That feels a little heavyweight though. Anyone want to suggest an alternative fix for this problem?&lt;/p&gt;</description>
                <environment></environment>
            <key id="24955">JAXEN-113</key>
            <summary>Thread safety of string() function</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 19 Jun 2005 08:24:41 -0500</created>
                <updated>Mon, 1 May 2006 06:19:21 -0500</updated>
                    <resolved>Mon, 1 May 2006 06:19:21 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>function</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41643" author="elharo" created="Sun, 19 Jun 2005 08:47:33 -0500"  >&lt;p&gt;For the moment I&apos;ve just synchronized access to the DecimalFormat object:&lt;/p&gt;

&lt;p&gt;    public static String stringValue(double value)&lt;br/&gt;
    {&lt;/p&gt;

&lt;p&gt;        // DecimalFormat formats negative zero as &quot;-0&quot;.&lt;br/&gt;
        // Therefore we need to test for zero explicitly here.&lt;br/&gt;
        if (value == 0) return &quot;0&quot;;&lt;/p&gt;

&lt;p&gt;        // need to synchronize object for thread-safety&lt;br/&gt;
        String result = null;&lt;br/&gt;
        synchronized (format) {
            result = format.format(value);
        }&lt;br/&gt;
        return result;&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Since the field is private that&apos;s probably good enough but if anyone sees a better way or a race condition, please holler. &lt;/p&gt;</comment>
                    <comment id="41650" author="hoju" created="Sun, 19 Jun 2005 13:14:54 -0500"  >&lt;p&gt;How about using a ThreadLocal?&lt;/p&gt;</comment>
                    <comment id="64474" author="elharo" created="Mon, 1 May 2006 06:19:21 -0500"  >&lt;p&gt;I&apos;ve now added a ThreadLocal to this class. Someone may wish to do a quick sanity check on this code.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-112] NamespaceNode class compatibility with Java 1.5</title>
                <link>http://jira.codehaus.org/browse/JAXEN-112</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Java 5 adopts DOM level 3. The Node class in DOM Level 3 adds methods to the Node interface that were not present in DOM Level 2. The old org.jaxen.dom.NamespaceNode class does not work in Java 1.5 as a result. I&apos;ve added the necessary methods. They currently all throw UnsupportedOperationException with a rather rude excpeiton message for the time being. I just put them in to shut the compiler up. &lt;/p&gt;

&lt;p&gt;However, since they might be returned by an XPath query, and then used in other parts of the code we should go through and fix these all. We also need to think about whether we could or should use the now  standard XPathNamespace interface rather than inventing our own. This is going to be really ugly. &lt;/p&gt;

&lt;p&gt;Once we get this resolved this is probably justification for releasing beta 7. &lt;/p&gt;</description>
                <environment>Java 1.5, DOM Level 3</environment>
            <key id="24727">JAXEN-112</key>
            <summary>NamespaceNode class compatibility with Java 1.5</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 12 Jun 2005 08:15:27 -0500</created>
                <updated>Mon, 3 Jul 2006 06:13:13 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 06:13:13 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>dom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41225" author="bazzargh" created="Mon, 13 Jun 2005 19:42:01 -0500"  >&lt;p&gt;I&apos;m sure you&apos;ve already spotted this, but the change broke the build on jdk1.4 and under. Its the import and use of UserDataHandler thats the problem.&lt;/p&gt;</comment>
                    <comment id="41227" author="elharo" created="Mon, 13 Jun 2005 19:48:16 -0500"  >&lt;p&gt;No I hadn&apos;t. Thanks. Damn. Is it even going to be possible to build on both 1.4 and 1.5? I think we&apos;re going to have to bundle the DOM UserData class ourself just to make this work. Yuck. Yuck. Yuck. Adding methods to public interfaces is evil!&lt;/p&gt;</comment>
                    <comment id="41228" author="hoju" created="Mon, 13 Jun 2005 19:56:31 -0500"  >&lt;p&gt;We have the same issue in XMLC.  XMLC provides NOP implementations of the DOM3 methods in order to get things to compile and run under any JDK as long as the dom3 api is in the classpath.  The new instructions are to deploy the xml-apis-dom3.jar from Xerces dom3 build along with any application using XMLC.  This works under any JDK.&lt;/p&gt;

&lt;p&gt;Get a standalone jar from here:&lt;br/&gt;
&lt;a href=&quot;http://archive.apache.org/dist/xml/xerces-j/binaries/beta2-dom3-Xerces-J-bin.2.6.2.zip&quot;&gt;http://archive.apache.org/dist/xml/xerces-j/binaries/beta2-dom3-Xerces-J-bin.2.6.2.zip&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Jake&lt;/p&gt;</comment>
                    <comment id="68811" author="elharo" created="Mon, 3 Jul 2006 06:13:13 -0500"  >&lt;p&gt;I&apos;ve used reflection to implement as much of this as is really feasible. They&apos;re a couple of other methods (lookupPrefix, lookupNamespaceURI) we could perhaps implement directly on top of DOM 2 if we really needed to but I doubt it&apos;s worth the effort. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-111] NPE thrown from getChildAxisIterator(Object, String, String, String)) when root document is null</title>
                <link>http://jira.codehaus.org/browse/JAXEN-111</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;We created an API that will add elements based on our own xpath syntax. Because of this we create empty Documents using DocumentHelper.createDocument(), then run xpath statements against it and then based on the results we add elements (the first element added becomes the root).&lt;/p&gt;

&lt;p&gt;Using dom4j 1.4 this worked properly. Under dom4j 1.1-beta6 we get a NullPointerException when we try to execute an xpath statement if the Document&apos;s root node is null.&lt;/p&gt;

&lt;p&gt;This can be corrected by modifying the public Iterator getChildAxisIterator(&lt;br/&gt;
            Object contextNode, String localName, String namespacePrefix, String namespaceURI) method to add a null check after this statement:&lt;br/&gt;
Element el = node.getRootElement();&lt;/p&gt;

&lt;p&gt;The code should look like this:&lt;br/&gt;
            Element el = node.getRootElement();&lt;br/&gt;
            if (el == null){
                return JaxenConstants.EMPTY_ITERATOR;
            }&lt;br/&gt;
            if (el.getName().equals(localName) == false) {                return JaxenConstants.EMPTY_ITERATOR;            } }&lt;br/&gt;
            if (namespaceURI != null) {&lt;br/&gt;
                if (namespaceURI.equals(el.getNamespaceURI()) == false) {
                    return JaxenConstants.EMPTY_ITERATOR;
                }&lt;br/&gt;
            }&lt;br/&gt;
            return new SingleObjectIterator(el);&lt;/p&gt;

&lt;p&gt;If executing xpath queries against Documents that do not have a root node is not allowed then I think we need a better exception than just NPE. Note that Xalan allows such queries (although there is never a result of course).&lt;/p&gt;

&lt;p&gt;Here&apos;s the stack trace:&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.jaxen.dom4j.DocumentNavigator.getChildAxisIterator(DocumentNaviga&lt;br/&gt;
tor.java:246)&lt;br/&gt;
        at org.jaxen.expr.iter.IterableChildAxis.namedAccessIterator(IterableChi&lt;br/&gt;
ldAxis.java:101)&lt;br/&gt;
        at org.jaxen.expr.DefaultNameStep.evaluate(DefaultNameStep.java:185)&lt;br/&gt;
        at org.jaxen.expr.DefaultLocationPath.evaluate(DefaultLocationPath.java:&lt;br/&gt;
151)&lt;br/&gt;
        at org.jaxen.expr.DefaultXPathExpr.asList(DefaultXPathExpr.java:108)&lt;br/&gt;
        at org.jaxen.BaseXPath.selectNodesForContext(BaseXPath.java:692)&lt;br/&gt;
        at org.jaxen.BaseXPath.selectNodes(BaseXPath.java:229)&lt;br/&gt;
        at org.jaxen.BaseXPath.selectSingleNode(BaseXPath.java:248)&lt;br/&gt;
        at com.indus.utils.dom.Dom4jXPathUtil.updateSingleValue(Dom4jXPathUtil.j&lt;br/&gt;
ava:182)&lt;br/&gt;
        at com.indus.utils.dom.Dom4jNodeManagerImpl.updateValue(Dom4jNodeManager&lt;br/&gt;
Impl.java:109)&lt;br/&gt;
        at com.indus.core.client.renderer.composite.Page.initUserStyleSheet(Page&lt;br/&gt;
.java:80)&lt;/p&gt;

&lt;p&gt;The test case included throws an exception with jaxen-1.1-beta-6.jar but not when using dom4j-1.4.jar&lt;/p&gt;</description>
                <environment>Windows, AIX, Solaris, jdk1.4, jdk1.5</environment>
            <key id="24642">JAXEN-111</key>
            <summary>NPE thrown from getChildAxisIterator(Object, String, String, String)) when root document is null</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="execute">Brian Alexander Lee</reporter>
                        <created>Thu, 9 Jun 2005 14:05:34 -0500</created>
                <updated>Mon, 3 Jul 2006 08:17:35 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 08:17:35 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>dom4j</component>
                        <due></due>
                    <votes>3</votes>
                          <timeoriginalestimate seconds="7200">2 hours</timeoriginalestimate>
                    <timeestimate seconds="7200">2 hours</timeestimate>
                                  <comments>
                    <comment id="40916" author="execute" created="Thu, 9 Jun 2005 14:15:05 -0500"  >&lt;p&gt;Here is the diff file for the change.&lt;/p&gt;</comment>
                    <comment id="40977" author="bazzargh" created="Fri, 10 Jun 2005 05:41:38 -0500"  >&lt;p&gt;If the first element added had become the root, there would be no problem. It looks to me more like the problem has arisen from a combination of the NamedAccessNavigator code and using a Document as if it was a DocumentFragment (a concept dom4j has no support for AFAIK, but its what lets other xpath engines deal with queries on fragments). The non-named-access version would have done:&lt;/p&gt;

&lt;p&gt;Branch node = (Branch) contextNode();&lt;br/&gt;
result = node.nodeIterator();&lt;br/&gt;
// and then apply a filter to this&lt;/p&gt;

&lt;p&gt;The difference is, this would mean that instead of an empty iterator from the document node, you&apos;d see all of  your fragment nodes returned. Is that not what you expected? If it isn&apos;t, I can&apos;t see why you&apos;re using fragments, the &apos;other&apos; nodes hanging off the Document would only be accessible via the id() function?&lt;/p&gt;

&lt;p&gt;You can try this out if you&apos;re willing to try a build: just remove the &apos;implements NamedAccessNavigator&apos; from the top of org.jaxen.dom4j.DocumentNavigator, rebuild, and you&apos;ll see the behaviour I&apos;m suggesting.&lt;/p&gt;

&lt;p&gt;Also - you&apos;re seeing no problem in the current version of dom4j, but you see a bug with an old, beta, version? Is a fix really required?&lt;/p&gt;</comment>
                    <comment id="41012" author="jusinsite" created="Fri, 10 Jun 2005 12:47:29 -0500"  >&lt;p&gt;we dont see the error with dom4j 1.4 (Jaxen is bundled), we see this error when we use dom4j 1.6 and Jaxen 1.1 beta 6/5&lt;/p&gt;</comment>
                    <comment id="68830" author="elharo" created="Mon, 3 Jul 2006 08:17:35 -0500"  >&lt;p&gt;I&apos;ve added a test case and committed a fix, though honestly this is DOM4J&apos;s fault. It shouldn;t be allowing documents without root elements. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="15560" name="DocumentNavigator-Diff.java" size="61" author="execute" created="Thu, 9 Jun 2005 14:15:05 -0500" />
                    <attachment id="15559" name="JaxenTest.java" size="1049" author="execute" created="Thu, 9 Jun 2005 14:05:34 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>execute</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>jusinsite</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_10110" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                <customfieldname>Testcase included</customfieldname>
                <customfieldvalues>
                    <customfieldvalue><![CDATA[yes]]></customfieldvalue>

                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[JAXEN-110] Namespace XPath Evaluation Bug when using functions</title>
                <link>http://jira.codehaus.org/browse/JAXEN-110</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I notice that when I submit namespace scoped xpath predicates involving functions (i.e. contains, starts-with, etc)  I always get a false evaluation.&lt;/p&gt;

&lt;p&gt;Using the following document:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;sys:Metadata xmlns:sys=&quot;http://jbischemas.rl.af.mil/schemas/sys&quot;&amp;gt;&amp;lt;sys:Extended&amp;gt;&lt;br/&gt;
&amp;lt;im:BaseObject xmlns:im=&quot;http://jbischemas.rl.af.mil/schemas/im&quot;&amp;gt;&amp;lt;im:InfoObjectType&amp;gt;&amp;lt;im:Name&amp;gt;mil.af.rl.jbi.training.basic&amp;lt;/im:Name&amp;gt;&amp;lt;im:MajorVersion&amp;gt;1&amp;lt;/im:MajorVersion&amp;gt;&amp;lt;im:MinorVersion&amp;gt;0&amp;lt;/im:MinorVersion&amp;gt;&amp;lt;/im:InfoObjectType&amp;gt;&amp;lt;im:PublicationTime&amp;gt;2005-06-03T13:15:52Z&amp;lt;/im:PublicationTime&amp;gt;&amp;lt;im:InfoObjectID&amp;gt;4b6s1o4b-6rc7ed-e9ifxqta-1-e9ifywlo-9&amp;lt;/im:InfoObjectID&amp;gt;&amp;lt;im:PublisherID&amp;gt;4b6s1o4b-6rc7ed-e9ifxqta-1-e9ifywbo-6&amp;lt;/im:PublisherID&amp;gt;&amp;lt;im:PlatformID&amp;gt;afrl.j2ee&amp;lt;/im:PlatformID&amp;gt;&amp;lt;im:CapiPayloadVersion&amp;gt;1.5&amp;lt;/im:CapiPayloadVersion&amp;gt;&amp;lt;/im:BaseObject&amp;gt;&amp;lt;/sys:Extended&amp;gt;&amp;lt;sys:Published&amp;gt;&amp;lt;basicType&amp;gt;&lt;br/&gt;
        &amp;lt;BasicTemporal&amp;gt;&lt;br/&gt;
                &amp;lt;beginning_date_time_group&amp;gt;&lt;br/&gt;
                        &amp;lt;day&amp;gt;11&amp;lt;/day&amp;gt;&lt;br/&gt;
                        &amp;lt;hour_time&amp;gt;21&amp;lt;/hour_time&amp;gt;&lt;br/&gt;
                        &amp;lt;minute_time&amp;gt;23&amp;lt;/minute_time&amp;gt;&lt;br/&gt;
                        &amp;lt;time_zone&amp;gt;Z&amp;lt;/time_zone&amp;gt;&lt;br/&gt;
                        &amp;lt;month_name&amp;gt;June&amp;lt;/month_name&amp;gt;&lt;br/&gt;
                        &amp;lt;year&amp;gt;2001&amp;lt;/year&amp;gt;&lt;br/&gt;
                &amp;lt;/beginning_date_time_group&amp;gt;&lt;br/&gt;
                &amp;lt;ending_date_time_group&amp;gt;&lt;br/&gt;
                        &amp;lt;day&amp;gt;12&amp;lt;/day&amp;gt;&lt;br/&gt;
                        &amp;lt;hour_time&amp;gt;06&amp;lt;/hour_time&amp;gt;&lt;br/&gt;
                        &amp;lt;minute_time&amp;gt;13&amp;lt;/minute_time&amp;gt;&lt;br/&gt;
                        &amp;lt;time_zone&amp;gt;Z&amp;lt;/time_zone&amp;gt;&lt;br/&gt;
                        &amp;lt;month_name&amp;gt;June&amp;lt;/month_name&amp;gt;&lt;br/&gt;
                        &amp;lt;year&amp;gt;2001&amp;lt;/year&amp;gt;&lt;br/&gt;
                &amp;lt;/ending_date_time_group&amp;gt;&lt;br/&gt;
        &amp;lt;/BasicTemporal&amp;gt;&lt;br/&gt;
&amp;lt;/basicType&amp;gt;&amp;lt;/sys:Published&amp;gt;&amp;lt;/sys:Metadata&amp;gt;&lt;/p&gt;

&lt;p&gt;with the following XPath:&lt;/p&gt;

&lt;p&gt;/sys:Metadata/sys:Published&lt;span class=&quot;error&quot;&gt;&amp;#91;contains(/basicType/BasicTemporal/beginning_date_time_group/month_name,&amp;quot;J&amp;quot;)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Should evaluate as true given that month_name is June.&lt;/p&gt;

&lt;p&gt;I traced the code and it seems to be a problem in org.jaxen.expr.DefaultAbsoluteLocationPath &lt;/p&gt;

&lt;p&gt;The call:&lt;/p&gt;

&lt;p&gt;Object docNode   = nav.getDocumentNode( firstNode );&lt;/p&gt;

&lt;p&gt;returns an empty document and wipes out the contextNodes (which seems to contain the namespace information).&lt;/p&gt;

&lt;p&gt;In my case nav is an instance of org.jaxen.dom4j.DocumentNavigator.&lt;/p&gt;

&lt;p&gt;BTW, if I simply replace the line:&lt;/p&gt;

&lt;p&gt;return super.evaluate( absContext ); &lt;/p&gt;

&lt;p&gt;with:  &lt;br/&gt;
return super.evaluate( context );&lt;/p&gt;

&lt;p&gt;I seem to get the desired semantics using namespaces.&lt;/p&gt;


&lt;p&gt;Many Thanks in Advance,&lt;br/&gt;
Vaughn Combs&lt;br/&gt;
AFRL/IFSE&lt;br/&gt;
combsv@rl.af.mil&lt;/p&gt;</description>
                <environment></environment>
            <key id="24455">JAXEN-110</key>
            <summary>Namespace XPath Evaluation Bug when using functions</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="combsv">Vaughn T. Combs</reporter>
                        <created>Fri, 3 Jun 2005 14:38:56 -0500</created>
                <updated>Sat, 4 Jun 2005 09:47:43 -0500</updated>
                    <resolved>Sat, 4 Jun 2005 09:47:43 -0500</resolved>
                            <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40537" author="combsv" created="Fri, 3 Jun 2005 17:10:56 -0500"  >&lt;p&gt;I should add that this is only a problem when namespaces are used AND the expression&lt;br/&gt;
contains a function (i.e. contains, starts-with, etc.). &lt;/p&gt;</comment>
                    <comment id="40540" author="elharo" created="Fri, 3 Jun 2005 17:44:43 -0500"  >&lt;p&gt;The example you give looks to me like it shoudl return an empty node-set. The key is that you&apos;re using /basicType/BasicTemporal/beginning_date_time_group/month_name. This is an absolute location path. Since the root element of this document is not basicType it always returns an empty node-set and the contains function therefore returns false.&lt;/p&gt;</comment>
                    <comment id="40565" author="combsv" created="Sat, 4 Jun 2005 08:19:43 -0500"  >&lt;p&gt;I am confused.&lt;/p&gt;

&lt;p&gt;/sys:Metadata/sys:Published/basicType/BasicTemporal/beginning_date_time_group/month_name exists and its&lt;br/&gt;
value is June. Are you saying that the syntax that I am using for contains is incorrect? &lt;br/&gt;
I thought that &lt;br/&gt;
/sys:Metadata/sys:Published&lt;span class=&quot;error&quot;&gt;&amp;#91;contains(/basicType/BasicTemporal/beginning_date_time_group/month_name,&amp;quot;J&amp;quot;)&amp;#93;&lt;/span&gt; &lt;br/&gt;
was proper syntax and that, essentially, its meaning is that for the root path /sys:Metadata/sys:Published&lt;br/&gt;
there exists a sub-node /basicType/BasicTemporal/beginning_date_time_group/month_name whose VALUE contains&lt;br/&gt;
&quot;J&quot;.&lt;/p&gt;


&lt;p&gt;should the predicate then be of the form:&lt;/p&gt;

&lt;p&gt;/sys:Metadata/sys:Published&lt;span class=&quot;error&quot;&gt;&amp;#91;contains(basicType/BasicTemporal/beginning_date_time_group/month_name,&amp;quot;J&amp;quot;)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;/sys:Metadata/sys:Published&lt;span class=&quot;error&quot;&gt;&amp;#91;contains(//basicType/BasicTemporal/beginning_date_time_group/month_name,&amp;quot;J&amp;quot;)&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;?&lt;/p&gt;

&lt;p&gt;Many Thanks,&lt;br/&gt;
Vaughn&lt;/p&gt;

</comment>
                    <comment id="40566" author="elharo" created="Sat, 4 Jun 2005 08:39:44 -0500"  >&lt;p&gt;Yes. Because the path you use in the contains function begins with a / it is an absolute path that starts at the root of the document, not a relative path that starts at the context node. Take out the initial / and then see what you get. &lt;/p&gt;</comment>
                    <comment id="40567" author="combsv" created="Sat, 4 Jun 2005 08:40:15 -0500"  >&lt;p&gt;Many Thanks for your help Elliotte!&lt;/p&gt;

&lt;p&gt;As it turns out this is indeed a bug in our internal code. The user provided XML is:&lt;br/&gt;
        &amp;lt;BasicTemporal&amp;gt; &lt;br/&gt;
                &amp;lt;beginning_date_time_group&amp;gt; &lt;br/&gt;
                        &amp;lt;day&amp;gt;11&amp;lt;/day&amp;gt; &lt;br/&gt;
                        &amp;lt;hour_time&amp;gt;21&amp;lt;/hour_time&amp;gt; &lt;br/&gt;
                        &amp;lt;minute_time&amp;gt;23&amp;lt;/minute_time&amp;gt; &lt;br/&gt;
                        &amp;lt;time_zone&amp;gt;Z&amp;lt;/time_zone&amp;gt; &lt;br/&gt;
                        &amp;lt;month_name&amp;gt;June&amp;lt;/month_name&amp;gt; &lt;br/&gt;
                        &amp;lt;year&amp;gt;2001&amp;lt;/year&amp;gt; &lt;br/&gt;
                &amp;lt;/beginning_date_time_group&amp;gt; &lt;br/&gt;
                &amp;lt;ending_date_time_group&amp;gt; &lt;br/&gt;
                        &amp;lt;day&amp;gt;12&amp;lt;/day&amp;gt; &lt;br/&gt;
                        &amp;lt;hour_time&amp;gt;06&amp;lt;/hour_time&amp;gt; &lt;br/&gt;
                        &amp;lt;minute_time&amp;gt;13&amp;lt;/minute_time&amp;gt; &lt;br/&gt;
                        &amp;lt;time_zone&amp;gt;Z&amp;lt;/time_zone&amp;gt; &lt;br/&gt;
                        &amp;lt;month_name&amp;gt;June&amp;lt;/month_name&amp;gt; &lt;br/&gt;
                        &amp;lt;year&amp;gt;2001&amp;lt;/year&amp;gt; &lt;br/&gt;
                &amp;lt;/ending_date_time_group&amp;gt; &lt;br/&gt;
        &amp;lt;/BasicTemporal&amp;gt; &lt;/p&gt;

&lt;p&gt;and the user provided predicate is:&lt;/p&gt;

&lt;p&gt;contains(/basicType/BasicTemporal/beginning_date_time_group/month_name,&quot;J&quot;)&lt;/p&gt;

&lt;p&gt;The metadata that I provided is our internal namespaced representation of the metadata. &lt;br/&gt;
In parsing and processing their predicate we really wanted to strip the leading /&lt;br/&gt;
so that the internally applied predicate is:&lt;/p&gt;

&lt;p&gt;/sys:Metadata/sys:Published&lt;span class=&quot;error&quot;&gt;&amp;#91;contains(basicType/BasicTemporal/beginning_date_time_group/month_name,&amp;quot;J&amp;quot;)&amp;#93;&lt;/span&gt; &lt;/p&gt;

&lt;p&gt;Sorry for wasting the bandwidth with this &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Again, many thanks,&lt;br/&gt;
Vaughn&lt;/p&gt;
</comment>
                    <comment id="40568" author="combsv" created="Sat, 4 Jun 2005 08:42:38 -0500"  >&lt;p&gt;Oops...&lt;/p&gt;

&lt;p&gt;I meant to say that the user provided metadata is:&lt;/p&gt;

&lt;p&gt;&amp;lt;basicType&amp;gt; &lt;br/&gt;
        &amp;lt;BasicTemporal&amp;gt; &lt;br/&gt;
                &amp;lt;beginning_date_time_group&amp;gt; &lt;br/&gt;
                        &amp;lt;day&amp;gt;11&amp;lt;/day&amp;gt; &lt;br/&gt;
                        &amp;lt;hour_time&amp;gt;21&amp;lt;/hour_time&amp;gt; &lt;br/&gt;
                        &amp;lt;minute_time&amp;gt;23&amp;lt;/minute_time&amp;gt; &lt;br/&gt;
                        &amp;lt;time_zone&amp;gt;Z&amp;lt;/time_zone&amp;gt; &lt;br/&gt;
                        &amp;lt;month_name&amp;gt;June&amp;lt;/month_name&amp;gt; &lt;br/&gt;
                        &amp;lt;year&amp;gt;2001&amp;lt;/year&amp;gt; &lt;br/&gt;
                &amp;lt;/beginning_date_time_group&amp;gt; &lt;br/&gt;
                &amp;lt;ending_date_time_group&amp;gt; &lt;br/&gt;
                        &amp;lt;day&amp;gt;12&amp;lt;/day&amp;gt; &lt;br/&gt;
                        &amp;lt;hour_time&amp;gt;06&amp;lt;/hour_time&amp;gt; &lt;br/&gt;
                        &amp;lt;minute_time&amp;gt;13&amp;lt;/minute_time&amp;gt; &lt;br/&gt;
                        &amp;lt;time_zone&amp;gt;Z&amp;lt;/time_zone&amp;gt; &lt;br/&gt;
                        &amp;lt;month_name&amp;gt;June&amp;lt;/month_name&amp;gt; &lt;br/&gt;
                        &amp;lt;year&amp;gt;2001&amp;lt;/year&amp;gt; &lt;br/&gt;
                &amp;lt;/ending_date_time_group&amp;gt; &lt;br/&gt;
        &amp;lt;/BasicTemporal&amp;gt; &lt;br/&gt;
&amp;lt;/basicType&amp;gt;&lt;/p&gt;</comment>
                    <comment id="40570" author="combsv" created="Sat, 4 Jun 2005 09:47:43 -0500"  >&lt;p&gt;No bug existed.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 23 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>combsv</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-109] release jaxen navigator tests as a library</title>
                <link>http://jira.codehaus.org/browse/JAXEN-109</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;(component should really be &apos;tests&apos;)&lt;/p&gt;

&lt;p&gt;Mulling over the do-not-fix response to jaxen-107, it would be nice to drop the XOM DocumentNavigator in favour of XOM&apos;s own JaxenNavigator. However this leaves jaxen with circular dependency problems.&lt;/p&gt;

&lt;p&gt;Elliotte&apos;s already discussed creating a jaxen-core that doesn&apos;t depend on xom etc. But the tests are still tied up with jaxen itself, making it harder for someone to maintain a navigator outside of jaxen. I reckon it would be useful to actually build the public API tests as a jar that third parties can use.&lt;/p&gt;

&lt;p&gt;Some issues with the current tests that could be handled at the same time:&lt;br/&gt;
Given the hassle trying to debug tests.xml, I&apos;m with Elliotte in saying the individual tests are better. However, OM-specific code prevents us applying some of these tests to all navigators. We could move from code like this:&lt;br/&gt;
 BaseXPath xpath = new DOMXPath(&quot;/descendant::x/@*&quot;);  // OM-specific xpath impl&lt;br/&gt;
 org.w3c.dom.Element a = doc.createElementNS(&quot;&quot;, &quot;a&quot;); // synthetic docs are OM-dependent&lt;/p&gt;

&lt;p&gt;to this:&lt;br/&gt;
// private Navigator navigator; // set up in abstract test constructor&lt;br/&gt;
 BaseXPath xpath = new BaseXPath(navigator, &quot;/descendant::x/@*&quot;); // generic xpath&lt;br/&gt;
 URL resource = this.getClass().getResource(&quot;/org/jaxen/test/sometest.xml&quot;); // external doc&lt;br/&gt;
 Object document = navigator.getDocument(resource.toString()); // generic OM-building code&lt;/p&gt;

&lt;p&gt;the use of resources instead of files stops us having wrong filenames in classes (see eg Performance), and allows us to bundle all the required xml in the test jar for ease-of-use as a dependency.&lt;/p&gt;

&lt;p&gt;The &quot;BaseXPath xpath = &quot; line could have been written as:&lt;br/&gt;
BaseXPath xpath = (BaseXPath) navigator.parseXPath(&quot;...&quot;);&lt;br/&gt;
... but that call really needs deprecated (IMO).&lt;/p&gt;</description>
                <environment></environment>
            <key id="24449">JAXEN-109</key>
            <summary>release jaxen navigator tests as a library</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Fri, 3 Jun 2005 10:39:58 -0500</created>
                <updated>Fri, 3 Jun 2005 11:04:58 -0500</updated>
                                    <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40525" author="elharo" created="Fri, 3 Jun 2005 11:04:58 -0500"  >&lt;p&gt;I think the circular dependencies should be limited to DOM. That is, all tests that use dom4j/XOM/JDOM navigators should be limited to the org.jaxen.dom4j/xom/jdom packages. That didn&apos;t used to be true, but a while ago I went through and fixed a bunch of this. It&apos;s entirely possible I missed something. if any of the core tests still depend on XOM/dom4j/JDOM let me know which ones they are and I&apos;ll try to port them to DOM or move them to the individual packages as appropriate. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 23 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-108] serialVersionUIDs</title>
                <link>http://jira.codehaus.org/browse/JAXEN-108</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;A lot of Jaxen&apos;s classes explicitly or implicitly implement Serializable. However, they do not provide serialVersionUIDs. They should. See&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?AlwaysDeclareSerialVersionUid&quot;&gt;http://c2.com/cgi/wiki?AlwaysDeclareSerialVersionUid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think Eclipse 3.1 and various other static code coverage tools will indicate which classes need these.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24368">JAXEN-108</key>
            <summary>serialVersionUIDs</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 31 May 2005 05:32:32 -0500</created>
                <updated>Wed, 3 May 2006 11:02:35 -0500</updated>
                    <resolved>Wed, 3 May 2006 11:02:35 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="64478" author="elharo" created="Mon, 1 May 2006 06:40:27 -0500"  >&lt;p&gt;Assigning the generation of SUIDs to 1.1&lt;/p&gt;</comment>
                    <comment id="64663" author="elharo" created="Wed, 3 May 2006 11:02:35 -0500"  >&lt;p&gt;I&apos;ve added generated SUIDs in the main tree. I don&apos;t think we need to worry about this too much in the samples or test packages, but if someone feels like fixing those too they can. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-107] XOM namespace nodes get the wrong parent</title>
                <link>http://jira.codehaus.org/browse/JAXEN-107</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;(see jaxen-102 for background.)&lt;/p&gt;

&lt;p&gt;After I switched to using a Set to maintain my nodesets, the check for  &quot;//namespace::*&quot; in DocumentNavigatorTest failed: it expects 25 nodes, but I only get 3 for XOM. &lt;/p&gt;

&lt;p&gt;Taking a look at the code, I just twigged what&apos;s going on: the map being iterated over creates namespace nodes whose the parent node is where they were originally declared, not the node whose namespace axis we asked for. Hence when I used the set, I got duplicate namespace nodes because ns nodes with the /same/ parent appeared at /different/ nodes.&lt;/p&gt;

&lt;p&gt;I think this is a real bug, in jaxen HEAD: while the way I&apos;ve triggered it is unusual, I reckon a path like: /a:foo/b:bar/namespace::&lt;b&gt;/parent::&lt;/b&gt; will trigger it for anyone - you&apos;ll see two nodes in the result (a:foo and b:bar) when you&apos;d expect only 1.&lt;/p&gt;

&lt;p&gt;I think the problem is that this line (in DocumentNavigator):&lt;br/&gt;
408   	                 addNamespaceForElement(elt, uri, prefix, nsMap);&lt;/p&gt;

&lt;p&gt;should read:&lt;br/&gt;
408   	                 addNamespaceForElement((Element)o, uri, prefix, nsMap);&lt;br/&gt;
(o is the original context node)&lt;/p&gt;

&lt;p&gt;and this line:&lt;br/&gt;
412   	         addNamespaceForElement(elt, &quot;http://www.w3.org/XML/1998/namespace&quot;, &quot;xml&quot;, nsMap);&lt;/p&gt;

&lt;p&gt;should similarly be:&lt;br/&gt;
412   	         addNamespaceForElement((Element) o, &quot;http://www.w3.org/XML/1998/namespace&quot;, &quot;xml&quot;, nsMap);&lt;/p&gt;

&lt;p&gt;While I&apos;m pretty sure from the code that you&apos;ll be able to trigger this, I&apos;m not at my development machine so I can&apos;t confirm it yet. I&apos;ll check this evening.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24367">JAXEN-107</key>
            <summary>XOM namespace nodes get the wrong parent</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Tue, 31 May 2005 04:52:41 -0500</created>
                <updated>Wed, 1 Jun 2005 16:05:57 -0500</updated>
                                    <version>1.1</version>
                                                <component>xom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40340" author="elharo" created="Tue, 31 May 2005 07:40:52 -0500"  >&lt;p&gt;I&apos;ve added a test for this:&lt;/p&gt;

&lt;p&gt;    public void testJaxen107() throws JaxenException {
        
        org.w3c.dom.Element a = doc.createElementNS(&quot;http://www.a.com/&quot;, &quot;a:foo&quot;);
        doc.appendChild(a);
        Element b = doc.createElementNS(&quot;http://www.b.com/&quot;, &quot;b:bar&quot;);
        a.appendChild(b);
        
        XPath xpath = new DOMXPath(&quot;/a:foo/b:bar/namespace::*/parent::*&quot;);
        SimpleNamespaceContext context1 = new SimpleNamespaceContext();
        context1.addNamespace(&quot;a&quot;, &quot;http://www.a.com/&quot;);
        context1.addNamespace(&quot;b&quot;, &quot;http://www.b.com/&quot;);
        xpath.setNamespaceContext(context1);
        List result = xpath.selectNodes(doc);
        assertEquals(1, result.size());
        assertEquals(b, result.get(0));
   
    }&lt;/p&gt;

&lt;p&gt;However, this test passes so I&apos;m not convinced there&apos;s a bug in the core. &lt;/p&gt;

&lt;p&gt;XOM 1.1 includes its own navigator that is a lot more careful about issues like this than the Navigator bundled with Jaxen. &lt;/p&gt;</comment>
                    <comment id="40342" author="bazzargh" created="Tue, 31 May 2005 08:10:20 -0500"  >&lt;p&gt;Ok... I&apos;ll try to track down whats happened to me further. Thanks for doing the test.&lt;/p&gt;

&lt;p&gt;I&apos;m still convinced that the version we&apos;re testing against isn&apos;t quite right; checking further I see getParentNode(ns) returns null, whereas getParentAxisIterator(ns) returns an iterator with a single element - NodeComparator uses getParent(), I wonder if there&apos;s bugs cancelling out? &lt;/p&gt;

&lt;p&gt;In the light of your comment about the bundled navigator, should we just drop this navigator and run the tests on the one in the xom jar instead, or is the jaxen one still required to support earlier releases?&lt;/p&gt;</comment>
                    <comment id="40380" author="bazzargh" created="Tue, 31 May 2005 20:04:20 -0500"  >&lt;p&gt;The mystery deepens. I was able to trigger the problem with this test (in tests.xml)&lt;/p&gt;

&lt;p&gt;    &amp;lt;document url=&quot;xml/testNamespaces.xml&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;context select=&quot;/&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;test select=&quot;/Template/Application2/namespace::&lt;b&gt;/parent::&lt;/b&gt;&quot; count=&quot;1&quot; debug=&quot;off&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;/context&amp;gt;&lt;br/&gt;
    &amp;lt;/document&amp;gt;&lt;/p&gt;

&lt;p&gt;HEAD returns 2 for this test. My only guess as to why your earlier test passed is either an unhappy coincidence or that theres something similar going on to what you&apos;ve been saying about DOM namespace axes - synthetic docs act differently.&lt;/p&gt;

&lt;p&gt;However things arent entirely fixed yet. Below are dumps of the namespace nodes for &apos;//namespace::*&apos; for the same document. The first set is the corrected code, the second set is from HEAD. What I expected was an xml namespace on the root element, and {xml, xpl, xplt} on all the others. What I see is a duplicate xplt node on each of the &apos;anyElement&apos; elements, and no xplt node on either of the &apos;Name&apos; elements.&lt;/p&gt;

&lt;p&gt;      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Name&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Name&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Name&amp;#93;&lt;/span&gt;&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Name&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application2&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=anyElement&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=insertText&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xplt=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xpl=&amp;quot;http://www.xxxx.com/&amp;quot;, element=Application1&amp;#93;&lt;/span&gt;2&lt;br/&gt;
      --&amp;gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=Template&amp;#93;&lt;/span&gt;2&lt;/p&gt;
</comment>
                    <comment id="40381" author="bazzargh" created="Tue, 31 May 2005 20:07:21 -0500"  >&lt;p&gt;Doh! I missed that there are 3 calls to addNamespaceForElement, not 2. Fixing all 3 to pass in (Element) o gives me the list I expected.&lt;/p&gt;</comment>
                    <comment id="40401" author="elharo" created="Wed, 1 Jun 2005 05:17:34 -0500"  >&lt;p&gt;Are you sure you&apos;re up to date? The following test passes for me:&lt;/p&gt;

&lt;p&gt;    public void testJaxen107FromFile() throws JaxenException, SAXException, IOException {
        
        doc = builder.parse(new File(&quot;xml/testNamespaces.xml&quot;));
        XPath xpath = new DOMXPath(&quot;/Template/Application2/namespace::*/parent::*&quot;);
        List result = xpath.selectNodes(doc);
        assertEquals(1, result.size());
   
    }&lt;/p&gt;

&lt;p&gt;Perhaps I have a relevant change I haven&apos;t checked in yet? I&apos;ll look. &lt;/p&gt;</comment>
                    <comment id="40415" author="bazzargh" created="Wed, 1 Jun 2005 08:04:41 -0500"  >&lt;p&gt;Ahhhh now I see.... thats a /DOMXPath/ in your test, the bug is in the XOM navigator. Looking back at the previous test you tried I see that was against the DOM too. I think we&apos;ve just been talking across purposes? Try adding my test to tests.xml and run the full test suite, you&apos;ll see the problem. Sorry I should have been clearer in the first report, its confusing that all the navigators are called DocumentNavigator.&lt;/p&gt;</comment>
                    <comment id="40436" author="elharo" created="Wed, 1 Jun 2005 16:05:57 -0500"  >&lt;p&gt;Changin component to to xom since it doesn&apos;t seem to be a core bug. XOM 1.1 carries its own navigator that I maintain, and that I don&apos;t think shares this bug. I&apos;m not especially interested in maintaining this navigator; and indeed I think the ultimate plan is to remove all navigators except DOM from the core distribution.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 23 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-106] DOM navigator returns namespaces on attribute axis</title>
                <link>http://jira.codehaus.org/browse/JAXEN-106</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The namespace and attribute axes are supposed to only return nodes of that type, but the DOM navigator&apos;s getAttributeAxisIterator returns xmlns: attrs on its attribute axis. This means we have to filter the results again later. &lt;/p&gt;

&lt;p&gt;This is only a minor bug as the jaxen core compensates for it already. However, when you take away the second &apos;isAttribute&apos; check, only DOM tests generate new failures, it could bite us at some point later, and it may also be a problem for anyone using the DOM navigator directly.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24366">JAXEN-106</key>
            <summary>DOM navigator returns namespaces on attribute axis</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Tue, 31 May 2005 04:20:50 -0500</created>
                <updated>Tue, 31 May 2005 05:08:30 -0500</updated>
                                    <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40330" author="elharo" created="Tue, 31 May 2005 04:45:47 -0500"  >&lt;p&gt;I&apos;ve checked in a change that prevents DOM&apos;s attribute axis iterator from returning namespace declarations. Where&apos;s the workaround for this in the core? We should take that out. &lt;/p&gt;</comment>
                    <comment id="40332" author="bazzargh" created="Tue, 31 May 2005 05:08:30 -0500"  >&lt;p&gt;Its a bit complicated: In DefaultNameStep, there&apos;s this:&lt;br/&gt;
311   	         else if (nav.isAttribute(node)) {&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;Becaus this code handles name steps for all axes together its awkward to remove. You can restructure to remove node type tests for namespace and attribute axes, since on those axes you can only get the principal node type anyway. My code has separate iterators for those to avoid the repeated checks; but I&apos;m not sure its worth trying on HEAD this close to a release, its not causing problems.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 23 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-105] Missing namespace nodes on the namespace axis</title>
                <link>http://jira.codehaus.org/browse/JAXEN-105</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Jaxen is failing this test:&lt;/p&gt;

&lt;p&gt;        org.w3c.dom.Element root = doc.createElement(&quot;root&quot;);&lt;br/&gt;
        doc.appendChild(root);&lt;br/&gt;
        Element child = doc.createElementNS(&quot;http://www.example.org&quot;, &quot;foo:child&quot;);&lt;br/&gt;
        root.appendChild(child);&lt;/p&gt;

&lt;p&gt;        XPath xpath = new DOMXPath(&quot;//namespace::node()&quot;);&lt;br/&gt;
        List result = xpath.selectNodes(doc);&lt;br/&gt;
        assertEquals(3, result.size());&lt;/p&gt;

&lt;p&gt;This query on this document should find three nodes: a namespace node for the xml prefix on the root, a namespace node for the xml prefix on the child, and a namespace node for the foo prefix on the child. It only finds the first two. (I&apos;ve inspected this with the debugger.) For some reason it misses the foo prefix. &lt;/p&gt;

&lt;p&gt;I haven&apos;t fully tracked this down yet. It might be a problem in the DOM navigator. It might be a problem in Jaxen itself. &lt;/p&gt;</description>
                <environment></environment>
            <key id="24362">JAXEN-105</key>
            <summary>Missing namespace nodes on the namespace axis</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 30 May 2005 19:59:06 -0500</created>
                <updated>Mon, 3 Jul 2006 08:09:28 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 08:09:28 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>dom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40347" author="elharo" created="Tue, 31 May 2005 12:18:02 -0500"  >&lt;p&gt;I think I&apos;ve figured out this bug. It&apos;s a problem in the DOM navigator. That navigator assumes that all namespace nodes are represented by Attr objects. However, this is not necessarily true for synthetically created documents. These may have namespaces but no Attr objects at all. It&apos;s basic DOM brain damage, and should not affect anything in the core or other navigators. I&apos;m working on fixing it. &lt;/p&gt;</comment>
                    <comment id="40368" author="elharo" created="Tue, 31 May 2005 16:24:01 -0500"  >&lt;p&gt;I&apos;ve fixed the basic issues. The DOM navigator will now generate namespace nodes from elements and attributes&apos; namespaces, as well as explicit xmlns Attr objects. There may still be some issues with ancestral namespaces I need to look at. I have no idea what to do with DOM trees in which the Attr objects are in active conflict with the actual namespaces. This is a real mismatch between DOM and XPath. &lt;/p&gt;</comment>
                    <comment id="68828" author="elharo" created="Mon, 3 Jul 2006 07:47:04 -0500"  >&lt;p&gt;What Jaxen is currently doing is ignoring the additional, contradictory namespace declarations. I think I&apos;m going to write tests for this and declare this to be the expected behavior. &lt;/p&gt;

&lt;p&gt;I&apos;m furthermore going to rule that the intrinsic namespace of an Element or Attr wins over the contradictory namespace declared by an xmlns or xmlns:pre attribute.&lt;/p&gt;

&lt;p&gt;There&apos;s no good solution here (Blame DOM for that); but it&apos;s an edge case; and this approach feels marginally less surprising.&lt;/p&gt;</comment>
                    <comment id="68829" author="elharo" created="Mon, 3 Jul 2006 08:09:28 -0500"  >&lt;p&gt;I think this is now resolved and document as best as possible. Honestly DOM is just truly brain damaged here.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-104] ConcurrentModificationException in dom4j Navigator</title>
                <link>http://jira.codehaus.org/browse/JAXEN-104</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;With the &apos;testNamespaces.xml&apos; doc,  get a descendant-or-self iterator from the domj navigator for the root node, and while iterating over it, get the namespace axis iterator and iterate over that. This is one way of evaluating &apos;//namespace::*&apos;. You will see a ConcurrentModificationException. (I got it running the DocumentNavigator test for that pattern with jaxen altered for speed)&lt;/p&gt;

&lt;p&gt;The cause is these lines (line 327 in dom4j DocumentNavigator):&lt;br/&gt;
            List declaredNS = context.declaredNamespaces();&lt;br/&gt;
            declaredNS.add(context.getNamespace());&lt;/p&gt;

&lt;p&gt;the problem here is that &apos;context&apos; is an Element from the dom4j tree, and the second of these lines modifies the tree while you&apos;re iterating over it. There&apos;s more modifications just below that. Since its the iteration, not the modification, that fires the CoMEx, its hard spot!&lt;/p&gt;

&lt;p&gt;I can&apos;t believe this is deliberate. We don&apos;t want to be adding namespace declarations to nodes when we&apos;re querying them? Hence the first of those lines should just be:&lt;br/&gt;
            List declaredNS = new ArrayList(context.declaredNamespaces());&lt;/p&gt;

&lt;p&gt;While you can&apos;t get the exception via the selectNodes() call, the unexpected side-effect of altering the dom4j tree may well cause problems for users.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24356">JAXEN-104</key>
            <summary>ConcurrentModificationException in dom4j Navigator</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 30 May 2005 13:56:51 -0500</created>
                <updated>Wed, 15 Jun 2005 18:43:17 -0500</updated>
                    <resolved>Wed, 15 Jun 2005 18:43:17 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41354" author="bazzargh" created="Wed, 15 Jun 2005 17:11:40 -0500"  >&lt;p&gt;this one really bugs me so I&apos;ll sort it out&lt;/p&gt;</comment>
                    <comment id="41363" author="bazzargh" created="Wed, 15 Jun 2005 18:43:17 -0500"  >&lt;p&gt;committed failing test, and fix&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-103] XOM Navigator returns null from getParentAxisIterator()</title>
                <link>http://jira.codehaus.org/browse/JAXEN-103</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;As it says...the bug is line 278 of org.jaxen.xom.DocumentNavigator:&lt;/p&gt;

&lt;p&gt;        return (parent != null ? new SingleObjectIterator(parent) : null);&lt;/p&gt;

&lt;p&gt;which should read:&lt;/p&gt;

&lt;p&gt;        return (parent != null ? new SingleObjectIterator(parent) : JaxenConstants.EMPTY_ITERATOR);&lt;/p&gt;

&lt;p&gt;The documentation for the implemented method says that it shouldn&apos;t return null (appears to be my fault, I missed this when I previously made the same change to other methods, to fix the ambiguous use of null at the time)&lt;/p&gt;</description>
                <environment></environment>
            <key id="24352">JAXEN-103</key>
            <summary>XOM Navigator returns null from getParentAxisIterator()</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 30 May 2005 08:40:39 -0500</created>
                <updated>Mon, 30 May 2005 08:40:39 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 23 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-102] NodesetComparator only works properly for non-equal Elements</title>
                <link>http://jira.codehaus.org/browse/JAXEN-102</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Messing around with merging nodesets as I mentioned on the list , I ran into a problem that too many nodes were being returned. The structure used for the merge was new TreeSet(new NodeComparator(navigator)), which should have kept unique nodes in document order, but it turned out they werent&lt;/p&gt;

&lt;p&gt;On inspection I found a number of problems with NodeComparator:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;it doesn&apos;t return 0 for equal nodes.&lt;br/&gt;
 I added: &lt;br/&gt;
        if (o1 == o2) {
            return 0;
        }&lt;br/&gt;
 at the start of &apos;compare&apos; to resolve this.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This showed up a second problem with how attributes and namespace nodes are compared: they just compare as if they were their parent node. This isn&apos;t correct for two attributes of the name node:&lt;br/&gt;
        if (isNonChild(o1) &amp;amp;&amp;amp; isNonChild(o2)) {&lt;br/&gt;
            try {
                // will return 0 now that the first bug is fixed...
                return compare(navigator.getParentNode(o1), navigator.getParentNode(o2));
            }&lt;br/&gt;
            catch (UnsupportedAxisException ex) {
                return 0;
            }&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;I removed that code. NS/Attr node comparisons should identical to Element, PI, etc comparisons except for when they have the same parent node, so the special case needs to go in the &apos;compareSiblings&apos; code. As I was a bit uncertain whether the following sibling check would work for ns/attr nodes I coded up their comparison explicitly:&lt;br/&gt;
        int nodeType1 = navigator.getNodeType(sib1);&lt;br/&gt;
        int nodeType2 = navigator.getNodeType(sib2);&lt;br/&gt;
        if (nodeType1 == Pattern.ATTRIBUTE_NODE) {&lt;br/&gt;
            if (nodeType2 == Pattern.NAMESPACE_NODE) {
                return 1;
            }&lt;br/&gt;
            if (nodeType2 == Pattern.ATTRIBUTE_NODE) {
                String name1 = navigator.getAttributeQName(sib1);
                String name2 = navigator.getAttributeQName(sib2);
                int cmp = name1.compareTo(name2);
                return cmp;
            }&lt;br/&gt;
            return -1; // ie atttributes are before elements.&lt;br/&gt;
        } else if (nodeType1 == Pattern.NAMESPACE_NODE) {&lt;br/&gt;
            if (nodeType2 == Pattern.ATTRIBUTE_NODE) {
                return -1;
            }&lt;br/&gt;
            if (nodeType2 == Pattern.NAMESPACE_NODE) {
                String name1 = navigator.getNamespacePrefix(sib1);
                String name2 = navigator.getNamespacePrefix(sib2);
                return name1.compareTo(name2);
            }&lt;br/&gt;
            return -1;&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;        if (nodeType2 == Pattern.NAMESPACE_NODE&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; nodeType2 == Pattern.ATTRIBUTE_NODE) ?tok7-block-tok&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;this sorts namespace and attribute nodes separately and alphabetically, and passes the current tests. NB the use of getNodeType above triggers bug jaxen-101! &lt;/p&gt;

&lt;p&gt;As for testing this code: if you test nodecomparator with two identical nodes it triggers the first problem, the rest of the issue shows up as test failures (for the order of attribute nodes on the ancestor axis, and the number of attribute/namespace nodes found) if you don&apos;t do the rest of the fix.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24351">JAXEN-102</key>
            <summary>NodesetComparator only works properly for non-equal Elements</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 30 May 2005 07:51:21 -0500</created>
                <updated>Wed, 15 Jun 2005 18:07:42 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40267" author="elharo" created="Mon, 30 May 2005 08:33:48 -0500"  >&lt;p&gt;There may well be an issue here. Then again there may not be. I&apos;ll have to think more deeply about this.&lt;/p&gt;

&lt;p&gt;NodeComparator is deliberately a non-public class. It does not attempt to handle every conceivable comparison of objects; only those that can actually arise through the public API. If you can construct a test case that demonstrates the alleged problems solely by invoking the public (or protected) APIs, then we&apos;d have definitive proof that there&apos;s a bug here, and can begin fixing it. However, absent such a test case I&apos;m not sure how to fix this, or how to be sure that any proposed fix really does fix the problem, or even whether a problem really exists.&lt;/p&gt;</comment>
                    <comment id="40269" author="elharo" created="Mon, 30 May 2005 08:38:51 -0500"  >&lt;p&gt;I&apos;m not sure your exegesis of the attributes issue is correct. Attributes (and namespace nodes) of the same parent do have the same document order as each other. Thus given something like &amp;lt;a b=&quot;c&quot; e=&quot;d&quot; /&amp;gt; b and e should compare equal. They do not need to be reordered. XPath defines no particualr order for attribute or namespace nodes of the same parent relative to each other. They do come after their parent element and before any of its children, but that&apos;s it. As long as we get that much right, do we otherwise need to swap them? I don&apos;t think so but I&apos;m not 100% sure.&lt;/p&gt;

&lt;p&gt;Again, a test case that showed incorret output would be definitive proof. &lt;/p&gt;</comment>
                    <comment id="40271" author="elharo" created="Mon, 30 May 2005 08:40:57 -0500"  >&lt;p&gt;Will the NodeComparator ever compare equal nodes? That is, is there any expression that will cause the same node to be passed to this method? Perhaps a union expression? Something like //a | //&lt;b&gt;? You could then turn this around and see if //&lt;/b&gt; | //a givens the same result. &lt;/p&gt;</comment>
                    <comment id="40277" author="bazzargh" created="Mon, 30 May 2005 09:52:50 -0500"  >&lt;p&gt;I&apos;m not using this as a public API, I&apos;m using it to re-implement part of the internals for speed. I don&apos;t mind this being marked as a minor issue, but there is an issue with using this comparator for maintaining a document-order nodeset - and comparator is defined as being a total ordering relation, not a partial order (as it has to be in order to support the Sorted* Collections), so this implementation doesn&apos;t match its documentation.&lt;/p&gt;

&lt;p&gt;re the attributes issue: the spec doesnt say there is no order for attributes, it says it is implementation dependent (ditto for namespace nodes). However it &lt;b&gt;does&lt;/b&gt; say that namespace nodes come before attribute nodes. The &apos;isNonChild&apos; code as it stands would mix nodes. I havent figured out yet how to trigger that as a bug, but it looks possible. Since we now claim that jaxen returns nodes in document order, something like &quot;attribute::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;|namespace::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&quot;, should return the same results as &quot;namespace::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;|attribute::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&quot;. However we don&apos;t actually return union patterns sorted - should this be a bug too?&lt;/p&gt;

&lt;p&gt;Re the third comment: jaxen only uses the nodecomparator to sort the nodes returned by a step. The way thats being done right now you can&apos;t get duplicate nodes (I think) so the comparator works.&lt;/p&gt;</comment>
                    <comment id="40291" author="elharo" created="Mon, 30 May 2005 15:39:05 -0500"  >&lt;p&gt;I added ordering for union expressions a couple of months ago. That&apos;s why NodeComparator is in there. So attribute::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;|namespace::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&quot; or &quot;namespace::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;|attribute::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&quot; might indeed trigger a bug. I&apos;ll see if I can concoct a test case for that. &lt;/p&gt;

&lt;p&gt;However, to the extent you&apos;re using NodeComparator as an internal API, I wouldn&apos;t be surprised if you needed to change or reimplement it. One very good reason for making this class non-public is precisely so you can have the freedom to do so as necessary. (Another is so I don;t have to follow the rules for comparators precisely if they don&apos;t seem necessary in this particular use case.) &lt;/p&gt;</comment>
                    <comment id="40313" author="elharo" created="Mon, 30 May 2005 19:55:27 -0500"  >&lt;p&gt;I&apos;ve fixed NodeComparator so it now sorts namespace nodes before the same element&apos;s attribute nodes. There might be some optimization that could yet be done here. I&apos;m probably calling the navigator.isnamespace and navigator.isAttribute methods redundantly. &lt;/p&gt;</comment>
                    <comment id="41359" author="bazzargh" created="Wed, 15 Jun 2005 18:07:42 -0500"  >&lt;p&gt;I took another look at this because it had no fix-for... its interesting that if in DefaultUnionExpr, if you switch &apos;new HashSet()&apos; out and use &apos;new TreeSet(new NodeComparator(...))&apos; (to avoid the cost of the second sort - a natural-order sort is being done inside unique.addAll()), tests begin to fail. The hashset also uses equals() comparisons, as mentioned in another bug, equals() may just mean qnames are the same in some OMs. I&apos;m still uncomfortable with this, but its working well enough for 1.1. Marking as a performance issue for 2.0, we can ditch both sorts here anyway (its a merge)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-101] DefaultNavigator.getNodeType(ns) returns UNKNOWN</title>
                <link>http://jira.codehaus.org/browse/JAXEN-101</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;DefaultNavigator&apos;s implementation of getNodeType doesn&apos;t return the correct value for namespace nodes, it returns unknown.&lt;/p&gt;

&lt;p&gt;All thats required is an extra condition:&lt;br/&gt;
        else if ( isNamespace(node) )&lt;/p&gt;
        {
            return Pattern.NAMESPACE_NODE;
        }

&lt;p&gt;This isn&apos;t a big problem in the code currently: most of the code uses the &apos;isXxx()&apos; methods. However in quite a few places jaxen would go a wee bit faster if it used a switch on nodetype, and isNodetype was overridden in the underlying navigator. However if only the first change is made this bug causes a bunch of tests to fail.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24349">JAXEN-101</key>
            <summary>DefaultNavigator.getNodeType(ns) returns UNKNOWN</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 30 May 2005 07:34:30 -0500</created>
                <updated>Wed, 15 Jun 2005 18:53:41 -0500</updated>
                    <resolved>Wed, 15 Jun 2005 18:53:41 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40263" author="elharo" created="Mon, 30 May 2005 07:49:21 -0500"  >&lt;p&gt;I&apos;ve added the change. I don&apos;t see any tests failing as a result that weren&apos;t failing before. &lt;/p&gt;</comment>
                    <comment id="41355" author="bazzargh" created="Wed, 15 Jun 2005 17:13:10 -0500"  >&lt;p&gt;I&apos;ll add a test, check it, and close this off.&lt;/p&gt;</comment>
                    <comment id="41364" author="bazzargh" created="Wed, 15 Jun 2005 18:53:41 -0500"  >&lt;p&gt;fixed by Elliotte. Added the test demonstrating the problem, and rolled back the fix to check the test ran.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-100] incorrect test and impl for namespace-uri(ns)</title>
                <link>http://jira.codehaus.org/browse/JAXEN-100</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I discovered this one just after jaxen-99 but unfortunately jira stopped accepting comments...&lt;br/&gt;
Its basically the same bug, but for namespace nodes. The spec says the namespace-uri of a namespace node is null, NamespaceURIFunction returns the namespace&apos;s value instead.&lt;br/&gt;
As in jaxen-99, NamespaceURITest tests for the wrong value.&lt;/p&gt;</description>
                <environment></environment>
            <key id="24346">JAXEN-100</key>
            <summary>incorrect test and impl for namespace-uri(ns)</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 30 May 2005 07:27:05 -0500</created>
                <updated>Mon, 30 May 2005 07:44:45 -0500</updated>
                    <resolved>Mon, 30 May 2005 07:44:45 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="40262" author="elharo" created="Mon, 30 May 2005 07:44:45 -0500"  >&lt;p&gt;Yep. Fixed now.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 23 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-99] incorrect test and impl for namespace-uri(pi)</title>
                <link>http://jira.codehaus.org/browse/JAXEN-99</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Running tests on my experimental branch, I failed this test from in &quot;NamespaceURITest.java&quot; in HEAD:&lt;/p&gt;

&lt;p&gt;    public void testNamespaceURIOfProcessingInstructionIsTarget() throws JaxenException&lt;/p&gt;
    {
        XPath xpath = new DOMXPath( &quot;namespace-uri(/processing-instruction())&quot; );
        ProcessingInstruction pi = doc.createProcessingInstruction(&quot;target&quot;, &quot;value&quot;);
        doc.appendChild(pi);
        String result = (String) xpath.evaluate(doc);
        assertEquals(&quot;target&quot;, result);
    }

&lt;p&gt;The test is incorrect, the spec says that the namespace-uri for processing instructions is null (ie &quot;&quot;, since there are no actual nulls in xpath), so the assertion should be:&lt;br/&gt;
        assertEquals(&quot;&quot;, result);&lt;/p&gt;

&lt;p&gt;The implementation error is in NamespaceUriFunction:&lt;br/&gt;
            else if ( nav.isProcessingInstruction( first ) )&lt;/p&gt;
            {
                return nav.getProcessingInstructionTarget( first );
            }
&lt;p&gt;should be:&lt;br/&gt;
            else if ( nav.isProcessingInstruction( first ) )&lt;/p&gt;
            {
                return &quot;&quot;;
            }</description>
                <environment></environment>
            <key id="24311">JAXEN-99</key>
            <summary>incorrect test and impl for namespace-uri(pi)</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Sun, 29 May 2005 04:28:57 -0500</created>
                <updated>Sun, 29 May 2005 06:43:08 -0500</updated>
                    <resolved>Sun, 29 May 2005 06:43:08 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="1800">30 minutes</timeoriginalestimate>
                    <timeestimate seconds="1800">30 minutes</timeestimate>
                                          <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 24 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-98] Classes that need JavaDoc</title>
                <link>http://jira.codehaus.org/browse/JAXEN-98</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Various public classes have incomplete or nonexistent API documentation that should be filled in. These include:&lt;/p&gt;

&lt;p&gt;org.jaxen.expr.DefaultXPathFactory&lt;br/&gt;
org.jaxen.expr.Visitor&lt;br/&gt;
org.jaxen.expr.VisitorSupport&lt;/p&gt;</description>
                <environment></environment>
            <key id="24013">JAXEN-98</key>
            <summary>Classes that need JavaDoc</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="proyal">peter royal</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 16 May 2005 06:04:17 -0500</created>
                <updated>Thu, 30 Nov 2006 12:52:03 -0600</updated>
                    <resolved>Thu, 30 Nov 2006 12:52:03 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="77704" author="elharo" created="Sun, 15 Oct 2006 16:41:34 -0500"  >&lt;p&gt;The packages that seem to be at issue are:&lt;/p&gt;

&lt;p&gt;org.jaxen.expr&lt;br/&gt;
org.jaxen.util&lt;/p&gt;</comment>
                    <comment id="81525" author="elharo" created="Thu, 30 Nov 2006 12:52:03 -0600"  >&lt;p&gt;Visitor has now been deleted. I think I&apos;ve now written JavaDoc for most of the other classes. Holler if you notice anything public and undeprecated that&apos;s still undocumented.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 49 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-97] xpaths containing namespace prefixes don&apos;t work</title>
                <link>http://jira.codehaus.org/browse/JAXEN-97</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;There is a problem with making namespaced xpath expression. Consider following scenario:&lt;/p&gt;

&lt;p&gt;  DOMXPath p=new DOMXPath(&quot;/aaa:element/text()&quot;);&lt;/p&gt;

&lt;p&gt;Problem is that the constructor of DOMXPath causes to parse the xpath expression. Parsing fails because the aaa prefix is not bound. Additional mangling like   &lt;/p&gt;

&lt;p&gt;((SimpleNamespaceContext)p.getNamespaceContext()).addNamespace(&quot;aaa&quot;,&quot;http://&quot;);&lt;/p&gt;

&lt;p&gt;doesn&apos;t work... I have checked the code, and solved that by adding extra DOM xpath constructor with NamespaceContext parameter.&lt;/p&gt;

&lt;p&gt;Applies to all other underlying DOM implementions. This is a real show stopper...&lt;/p&gt;</description>
                <environment></environment>
            <key id="23810">JAXEN-97</key>
            <summary>xpaths containing namespace prefixes don&apos;t work</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="dubsky">Vlada D.</reporter>
                        <created>Fri, 6 May 2005 11:41:58 -0500</created>
                <updated>Wed, 15 Jun 2005 18:35:23 -0500</updated>
                    <resolved>Wed, 15 Jun 2005 18:35:23 -0500</resolved>
                            <version>1.0</version>
                <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="600">10 minutes</timeoriginalestimate>
                    <timeestimate seconds="600">10 minutes</timeestimate>
                                  <comments>
                    <comment id="38655" author="elharo" created="Fri, 6 May 2005 12:15:44 -0500"  >&lt;p&gt;I suspect this is not a bug. Do you have a full test case that demonstrates the possible problem? &lt;/p&gt;</comment>
                    <comment id="41346" author="bazzargh" created="Wed, 15 Jun 2005 16:02:06 -0500"  >&lt;p&gt;Theres been no response on this for a month. I&apos;ll add the exact test described in the bug report, assuming it passes, I&apos;ll just close this issue.&lt;/p&gt;</comment>
                    <comment id="41348" author="bob" created="Wed, 15 Jun 2005 16:15:22 -0500"  >&lt;p&gt;No, I don&apos;t think the parse cares about prefixes when parsing.  aaaa: is syntactically a prefix, and that&apos;s good enough.  It only needs a NamespaceContext during evaluation time.&lt;/p&gt;

&lt;p&gt;If the addNamespace() isn&apos;t working, that&apos;s probably another bug.&lt;/p&gt;

&lt;p&gt;Bu this should at least parse even in light of no prefix bindings at parse time:&lt;/p&gt;

&lt;p&gt; DOMXPath p=new DOMXPath(&quot;/aaa:element/text()&quot;);&lt;/p&gt;

&lt;p&gt;Correct me if I&apos;m wrong, though, certainly.  It&apos;d be nice to see the exact parse error or stacktrace you&apos;re see on that line above.&lt;/p&gt;</comment>
                    <comment id="41362" author="bazzargh" created="Wed, 15 Jun 2005 18:35:23 -0500"  >&lt;p&gt;I committed a test which does exactly what you describe. The exception wasn&apos;t thrown. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>dubsky</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-96] Lingering JDK 1.4 dependencies</title>
                <link>http://jira.codehaus.org/browse/JAXEN-96</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Jaxen 1.1 Beta 6 and CVS still has 1.4 dependencies, in particular Boolean.valueOf(boolean) and RuntimeException(Throwable). These are the errors from &quot;maven jar&quot; when maven.compile.bootclasspath has been set to a 1.3.1_15 rt.jar:&lt;/p&gt;

&lt;p&gt;java:compile:&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; Compiling to /home/cjn/cvs/jaxen/target/classes&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 203 source files to /home/cjn/cvs/jaxen/target/classes&lt;br/&gt;
/home/cjn/cvs/jaxen/src/java/main/org/jaxen/function/LangFunction.java:108: valueOf(java.lang.String) in java.lang.Boolean cannot be applied to (boolean)&lt;br/&gt;
        return Boolean.valueOf(&lt;br/&gt;
                      ^&lt;br/&gt;
/home/cjn/cvs/jaxen/src/java/main/org/jaxen/JaxenRuntimeException.java:80: cannot find symbol&lt;br/&gt;
symbol  : constructor RuntimeException(org.jaxen.JaxenException)&lt;br/&gt;
location: class java.lang.RuntimeException&lt;br/&gt;
        super(jaxenException);&lt;/p&gt;</description>
                <environment></environment>
            <key id="23762">JAXEN-96</key>
            <summary>Lingering JDK 1.4 dependencies</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="herbyderby">Chris Nokleberg</reporter>
                        <created>Tue, 3 May 2005 22:20:04 -0500</created>
                <updated>Thu, 29 Jun 2006 15:55:08 -0500</updated>
                    <resolved>Thu, 29 Jun 2006 15:55:08 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="38501" author="herbyderby" created="Tue, 3 May 2005 23:11:00 -0500"  >&lt;p&gt;A patch that removes the 1.4 dependencies. Note that adding a getCause() method to JaxenRuntimeException is sufficient to enable chained stack traces in JDK 1.4+, as it is invoked reflectively (i.e. it is not necessary to pass the exception to the RuntimeException constructor).&lt;/p&gt;</comment>
                    <comment id="38507" author="hoju" created="Wed, 4 May 2005 01:28:02 -0500"  >&lt;p&gt;I ended up committing the same fix as you have in your patch for LangFunction before I saw that you posted a patch.  I&apos;m not sure I completely agree with the JaxenRuntimeException fix, though.  You are right that implementing getCause() is the right thing to do, but I&apos;m not sure it is sufficient.  &quot;null&quot; is always given for the message, which seems kind of ugly, and there is no notion of any cause when thrown under JDK1.3 (see examples below).  I think we should at least clean up the &quot;null&quot; with something appropriate.  We might also think about mimicking JDK1.4+ &quot;cause&quot; functionality under JDK1.3, although I&apos;m less sure about that?  I&apos;m committing the fix as you have it, but leaving this bug open to address the issues I brought up.  Anyway, below are sample stack traces after throwing the exception in a test case so you can see what I&apos;m talking about...&lt;/p&gt;

&lt;p&gt;Here it is under JDK1.5...&lt;/p&gt;

&lt;p&gt;Testcase: testThrowException(org.jaxen.JaxenRuntimeExceptionTest):	Caused an ERROR&lt;br/&gt;
null&lt;br/&gt;
org.jaxen.JaxenRuntimeException&lt;br/&gt;
	at org.jaxen.JaxenRuntimeExceptionTest.testThrowException(JaxenRuntimeExceptionTest.java:9)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
Caused by: org.jaxen.JaxenException: Dummy Jaxen exception&lt;br/&gt;
	at org.jaxen.JaxenRuntimeExceptionTest.testThrowException(JaxenRuntimeExceptionTest.java:8)&lt;br/&gt;
	... 14 more&lt;/p&gt;


&lt;p&gt;Here it is under JDk1.3.1...&lt;/p&gt;

&lt;p&gt;Testcase: testThrowException(org.jaxen.JaxenRuntimeExceptionTest):	Caused an ERROR&lt;br/&gt;
null&lt;br/&gt;
org.jaxen.JaxenRuntimeException&lt;br/&gt;
	at org.jaxen.JaxenRuntimeExceptionTest.testThrowException(JaxenRuntimeExceptionTest.java:9)&lt;/p&gt;



&lt;p&gt;Jake&lt;/p&gt;</comment>
                    <comment id="38508" author="elharo" created="Wed, 4 May 2005 01:51:28 -0500"  >&lt;p&gt;Implementing Java 1.4 style exception chaingin in 1.3 is a little more complicated than this. You also need to provide an initCause() method, and make sure that it only allows the cause to be set once.&lt;/p&gt;</comment>
                    <comment id="38509" author="herbyderby" created="Wed, 4 May 2005 02:02:54 -0500"  >&lt;p&gt;For the &quot;null&quot; message issue you could pass jaxenException.getMessage() to the RuntimeException super constructor. RuntimeException(String) is ok in 1.3, just not RuntimeException(Throwable).&lt;/p&gt;

&lt;p&gt;Re: initCause, I&apos;m not convinced its omission would have any tangible effects (esp. because JaxenRuntimeException does not have a no-arg constructor) but it couldn&apos;t hurt to add it.&lt;/p&gt;</comment>
                    <comment id="38510" author="elharo" created="Wed, 4 May 2005 02:24:41 -0500"  >&lt;p&gt;The tangible effect of omitting initCause() is that in Java 1.4 and later a programmer can call initCause (because it&apos;s part of the standard Exception class). However the cause they pass will not be returned by getCause. These two methods are linked. You shouldn&apos;t override one without overriding the other. &lt;/p&gt;</comment>
                    <comment id="38512" author="herbyderby" created="Wed, 4 May 2005 03:11:57 -0500"  >&lt;p&gt;Ok, I&apos;m convinced &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Implementing initCause to the letter will be a little messy, though. In the event that JaxenRuntimeException was constructed using a String, a subsequent call to initCause will have to have somewhere to put the Throwable, so another field will be required (since it isn&apos;t guaranteed to be a JaxenException). Or you could change the field to Throwable and do an instanceof in getJaxenException... Best would be to leave getCause and remove getJaxenException, but I&apos;m not sure if there are release-compatibility issues. As long as the stack traces are chained, I will be happy! Thanks, Chris&lt;/p&gt;</comment>
                    <comment id="38522" author="elharo" created="Wed, 4 May 2005 07:37:30 -0500"  >&lt;p&gt;JaxenRuntimeException is new in 1.1 so I don&apos;t feel honor bound not to change its API. I suggest we just remove getJaxenException.&lt;/p&gt;</comment>
                    <comment id="41353" author="bazzargh" created="Wed, 15 Jun 2005 17:09:51 -0500"  >&lt;p&gt;looks like we mean to fix this in 1.1 &lt;/p&gt;</comment>
                    <comment id="68637" author="elharo" created="Thu, 29 Jun 2006 15:55:08 -0500"  >&lt;p&gt;I don&apos;t have a 1.3 VM handy to test with, but looking at the code base: I think this was all fixed long ago. If anyone does try to compile with 1.3 and encounters problems, please reopen this bug and provide details. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="15160" name="jaxen-13compat.patch" size="1780" author="herbyderby" created="Tue, 3 May 2005 23:11:00 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 19 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>herbyderby</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-95] a few typos in the Jaxen intro slideset</title>
                <link>http://jira.codehaus.org/browse/JAXEN-95</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;A few typos I noticed in the slideset at &lt;a href=&quot;http://jaxen.org/pdf/intro-slides.pdf:&quot;&gt;http://jaxen.org/pdf/intro-slides.pdf:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On page 54: selectSingleNodes(...) --&amp;gt; selectSingleNode(...)&lt;/p&gt;

&lt;p&gt;On page 60: frobnovich:xmlns --&amp;gt; xmlns:frobnovich&lt;/p&gt;

&lt;p&gt;On page 105: expressions steps --&amp;gt; expression steps&lt;/p&gt;
</description>
                <environment>n/a</environment>
            <key id="23753">JAXEN-95</key>
            <summary>a few typos in the Jaxen intro slideset</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="ispringer">Ian Springer</reporter>
                        <created>Tue, 3 May 2005 10:03:26 -0500</created>
                <updated>Tue, 28 Jun 2005 09:15:13 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="38467" author="elharo" created="Tue, 3 May 2005 11:06:10 -0500"  >&lt;p&gt;The source for these is not in CVS. Bob, do you have that sitting around somewhere. Can you update these? &lt;/p&gt;</comment>
                    <comment id="38468" author="bob" created="Tue, 3 May 2005 11:56:27 -0500"  >&lt;p&gt;src/latex/intro-slides.tex contains the source for the deck.&lt;/p&gt;</comment>
                    <comment id="42140" author="elharo" created="Tue, 28 Jun 2005 09:15:13 -0500"  >&lt;p&gt;I&apos;ve fixed the issues in the source. Will maven generate the PDF for this or do we need to do that manually?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 19 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>ispringer</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-94] Arithmetic associativity is wrong</title>
                <link>http://jira.codehaus.org/browse/JAXEN-94</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Charles Souillard reports a problem while trying to evaluate the following expression :  2+1-1+1. It should be  3.0 but is  1.0:&lt;/p&gt;

&lt;p&gt;XPath xpath = new DOMXPath(&quot;2+1-1+1&quot;);&lt;br/&gt;
List results = (List) xpath.selectNodes(null);&lt;br/&gt;
for (int i=0;i&amp;lt;results.size();i++) {&lt;br/&gt;
 Object result = results.get&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;br/&gt;
 System.out.println(&quot;result = &quot;+result);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;A test is now in CVS.&lt;/p&gt;</description>
                <environment></environment>
            <key id="23750">JAXEN-94</key>
            <summary>Arithmetic associativity is wrong</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 3 May 2005 08:37:12 -0500</created>
                <updated>Mon, 3 Jul 2006 06:50:22 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 06:50:22 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41097" author="elharo" created="Sun, 12 Jun 2005 08:29:02 -0500"  >&lt;p&gt;This is not a precedence problem as I originally thought. There is no precedence issue since + and - have the same precedence. Rather the problem is associativity. These operators seems to be right associative instead of left associative. Does that help anyone see how to fix this? &lt;/p&gt;</comment>
                    <comment id="41160" author="bazzargh" created="Mon, 13 Jun 2005 05:20:26 -0500"  >&lt;p&gt;Its not quite that the operators (individually) arent left/right associative. The way the evaluation order works in saxpath, its as if +, - are treated as the /same/ right associative operator. ie the expression above evaluates as &quot;2 + (1 - (1 + 1))&quot;.&lt;br/&gt;
The problem is the way the parser recurses. If you take a look at org.jaxen.saxpath.base.XPathReader.additiveExpr() you&apos;ll see that it parses that as:&lt;/p&gt;

&lt;p&gt;AdditiveExpr:: MultiplicativeExpr	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; MultiplicativeExpr &apos;+&apos; AdditiveExpr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; MultiplicativeExpr &apos;-&apos; AdditiveExpr&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;when the grammar said this:&lt;/p&gt;

&lt;p&gt;AdditiveExpr:: MultiplicativeExpr	&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; AdditiveExpr &apos;+&apos; MultiplicativeExpr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; AdditiveExpr &apos;-&apos; MultiplicativeExpr&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;(its slightly obscured because one level of recursion has been unrolled, correcting the problem on shorter expressions). The usual solution, in any compiler text (see eg &lt;a href=&quot;http://www.google.co.uk/search?q=eliminating+left+recursion&quot;&gt;http://www.google.co.uk/search?q=eliminating+left+recursion&lt;/a&gt;), is to introduce a new nonterminal to transform direct left recursion into right recursion. &lt;/p&gt;

&lt;p&gt;AdditiveExpr:: MultiplicativeExpr FooExpr?&lt;br/&gt;
FooExpr:: &apos;+&apos; MultiplicativeExpr FooExpr? | &apos;-&apos; MultiplicativeExpr FooExpr?&lt;/p&gt;

&lt;p&gt;you can eliminate the extra nonterminal again, using javacc syntax:&lt;br/&gt;
AdditiveExpr:: MultiplicativeExpr (&apos;+&apos; MultiplicativeExpr  | &apos;-&apos; MultiplicativeExpr)*&lt;/p&gt;

&lt;p&gt;Applying that to the saxpath code gives, roughly:&lt;br/&gt;
void additiveExpr() throws org.jaxen.saxpath.SAXPathException&lt;br/&gt;
{&lt;br/&gt;
    XPathHandler handler = getXPathHandler();&lt;br/&gt;
    handler.startAdditiveExpr();&lt;br/&gt;
    multiplicativeExpr();&lt;br/&gt;
    Stack stack = new Stack();&lt;br/&gt;
    int la = LA(1);&lt;br/&gt;
    while (la == PLUS || la == MINUS) {&lt;br/&gt;
        switch ( LA(1) )  {&lt;br/&gt;
           // MINUS case ommitted for clarity&lt;br/&gt;
           case PLUS:&lt;/p&gt;
           {
                match( PLUS );
                // lets pretend we can autobox
                stack.push(Operator.ADD);
                handler.startAdditiveExpr();
                multiplicativeExpr();
                break;
           }
&lt;p&gt;        }&lt;br/&gt;
        la = LA(1); &lt;br/&gt;
   }&lt;br/&gt;
   while (!stack.isEmpty()) {
       handler.endAdditiveExpr(stack.pop());
   }&lt;br/&gt;
   // the last expr is always just a multiplicative expr.&lt;br/&gt;
   handler.endAdditiveExpr(Operator.NO_OP);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;The same fix needs applied to all left-recursive nonterminals (OrExpr, AndExpr, etc).&lt;/p&gt;

&lt;p&gt;A second solution is to abandon saxpath. These problems are far easier to fix with a parser generator.&lt;/p&gt;</comment>
                    <comment id="41162" author="bazzargh" created="Mon, 13 Jun 2005 05:26:26 -0500"  >&lt;p&gt;whoops slight error there... this is what I get for just typing code into the comments. Looping on 2+3 you should see events like:&lt;/p&gt;

&lt;p&gt;startAdditiveExpr&lt;br/&gt;
numberExpr &quot;2&quot;&lt;br/&gt;
startAdditiveExpr&lt;br/&gt;
numberExpr &quot;3&quot;&lt;br/&gt;
endAdditiveExpr(NO_OP)&lt;br/&gt;
endAdditiveExpr(PLUS)&lt;/p&gt;

&lt;p&gt;the code above does it wrong because I put the NO_OP in the wrong place. Code should read:&lt;br/&gt;
   // the last expr is always just a multiplicative expr.&lt;br/&gt;
   handler.endAdditiveExpr(Operator.NO_OP); &lt;br/&gt;
   while (!stack.isEmpty()) {
       handler.endAdditiveExpr(stack.pop());
   }&lt;/p&gt;</comment>
                    <comment id="41166" author="elharo" created="Mon, 13 Jun 2005 06:24:48 -0500"  >&lt;p&gt;So it should be:&lt;/p&gt;

&lt;p&gt;    void additiveExpr() throws org.jaxen.saxpath.SAXPathException&lt;br/&gt;
    {&lt;br/&gt;
        getXPathHandler().startAdditiveExpr();&lt;br/&gt;
        multiplicativeExpr();&lt;br/&gt;
        Stack stack = new Stack();&lt;br/&gt;
        int la = LA(1);&lt;br/&gt;
        while (la == PLUS || la == MINUS) {&lt;br/&gt;
            switch ( LA(1) )  {&lt;br/&gt;
               // MINUS case ommitted for clarity&lt;br/&gt;
               case PLUS:&lt;/p&gt;
               {
                    match( PLUS );
                    stack.push(new Integer(Operator.ADD));
                    getXPathHandler().startAdditiveExpr();
                    multiplicativeExpr();
                    break;
               }
&lt;p&gt;               case MINUS:&lt;/p&gt;
               {
                    match( MINUS );
                    stack.push(new Integer(Operator.SUBTRACT));
                    getXPathHandler().startAdditiveExpr();
                    multiplicativeExpr();
                    break;
               }
&lt;p&gt;            }&lt;br/&gt;
            la = LA(1); &lt;br/&gt;
       }&lt;br/&gt;
       // the last expr is always just a multiplicative expr.&lt;br/&gt;
       getXPathHandler().endAdditiveExpr(Operator.NO_OP);&lt;br/&gt;
       while (!stack.isEmpty()) {
           getXPathHandler().endAdditiveExpr(((Integer) stack.pop()).intValue());
       }&lt;br/&gt;
    }    &lt;/p&gt;


&lt;p&gt;This breaks more tests that the current code does. What am I getting wrong?&lt;/p&gt;</comment>
                    <comment id="41167" author="elharo" created="Mon, 13 Jun 2005 06:26:42 -0500"  >&lt;p&gt;I would like to eventually move to a parser-generator based solution. However, if we can fix saxpath first for 1.1 that woudl be nice. It is a public API after all. I&apos;m vaguely thinking we coudl move to a parser-generator in 2.0 when we break the API. However, if we can&apos;t get 1.1 to work with SAXPath then we may need to break the API earlier than planned. We could always deprecate saxpath and leave it in for now but stop using it I suppose. &lt;/p&gt;</comment>
                    <comment id="41175" author="bazzargh" created="Mon, 13 Jun 2005 07:04:51 -0500"  >&lt;p&gt;I&apos;m not sure what&apos;s wrong if thats failing for you. I just typed in the code that matches the grammar, since you asked for suggestions, I didn&apos;t even compile it. If you want I can take a run at this and try to produce a tested patch.&lt;/p&gt;

&lt;p&gt;I&apos;d suspect that any test cases that test saxpath directly may fail, since this changes the tree structure even for simple expressions. Were there any failures in the DocumentNavigatorTest? I also noticed in my own experiments (not looking at this bug specifically) that some of what simplify() does is odd - it seemed to alter the parse tree so it was no longer like the one generated by the handler, eg null predicate lists instead of empty predicate lists. I&apos;d doubt that wasnt the problem here, but I ended up commenting out the call to simplify() in DefaultXPathExpr when I was working on the internals, it muddies the waters.&lt;/p&gt;

&lt;p&gt;I agree that getting saxpath fixed is a laudable goal, but as I&apos;ve said before, I don&apos;t like that code, and I&apos;ve already written the replacement. The parser patch is independent of the other stuff I was working on, I&apos;ll post it up-to-date with your changes this evening. It involves a small change (5 lines-ish) in BaseXPath, and the javacc-generated code. I think that last time I looked at it, this passed all of the tests; but you&apos;ve added a lot since then. At least it would leave you with options.&lt;/p&gt;

</comment>
                    <comment id="41180" author="elharo" created="Mon, 13 Jun 2005 07:34:11 -0500"  >&lt;p&gt;The DocumentNavigator tests all failed as did all the tests I&apos;d added in BaseXPath specifically to check for asssociativity. Previously some of these were passing.&lt;/p&gt;

&lt;p&gt;Please do take a run at this. If you can fix it, great!&lt;/p&gt;</comment>
                    <comment id="41222" author="bazzargh" created="Mon, 13 Jun 2005 19:28:19 -0500"  >&lt;p&gt;This fixes the eval-order problem for +, -, *, mod, div. Still several operators to do. Some new tests fail (as they test exactly what saxpath returns). The problem with this patch is, it generates start events out of order - only the end events are generated in the correct order. I have to rely on the behaviour of JaxenHandler, which maintains a stack. Looking at what I did, saxpath needs major surgery to generate the correct events in the correct order - the stack in jaxenhandler needs pulled back into saxpath, essentially making saxpath build a tree, then send events to jaxenhandler, only for it to build a tree again. There&apos;s a bad smell here somewhere... I thought I&apos;d post the patch in its current state for you to review. &lt;/p&gt;</comment>
                    <comment id="41226" author="elharo" created="Mon, 13 Jun 2005 19:45:02 -0500"  >&lt;p&gt;The patch seems to work. I only see one test failing with it that wasn&apos;t failing before; and as you point out, that test is probably wrong. The tests that test for associativity now pass so I&apos;m going to go ahead and commit this. Then I&apos;ll work on fixing (or removing) the broken test. Next I&apos;ll probably write a few tests for the other operators you suspect are broken. Smelly it may be, but if it correctly handles XPath then it&apos;s a clear improvement on what we had before.  Thanks!&lt;/p&gt;</comment>
                    <comment id="41262" author="elharo" created="Tue, 14 Jun 2005 08:02:33 -0500"  >&lt;p&gt;I&apos;m not sure this needs to be fixed for OrExpr and AndExpr. left recursive though they may be. Try as I might I haven&apos;t been able to concoct an expression where associativity makes a difference. I think the binary nature of boolean operators saves us here. &lt;/p&gt;</comment>
                    <comment id="41280" author="bazzargh" created="Tue, 14 Jun 2005 10:25:21 -0500"  >&lt;p&gt;Ok I wrote a long comment there and lost it to the jira re-indexer... yes you&apos;re right about and/or, I misspoke. They have different precedence and are associative (not just left-associative) so the bug can&apos;t affect them. The other operators affected are the equality and relational operators. See this diff:&lt;br/&gt;
&lt;a href=&quot;http://cvs.codehaus.org/viewrep/jaxen/jaxen/xml/test/tests.xml?r1=1.70&amp;amp;r2=1.69&quot;&gt;http://cvs.codehaus.org/viewrep/jaxen/jaxen/xml/test/tests.xml?r1=1.70&amp;amp;r2=1.69&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;... where I added tests for those ops (its section 3.4 of the spec)&lt;br/&gt;
and this diff:&lt;br/&gt;
&lt;a href=&quot;http://cvs.codehaus.org/viewrep/jaxen/jaxen/src/java/main/org/jaxen/saxpath/base/XPathReader.java?r1=1.5&amp;amp;r2=1.4&quot;&gt;http://cvs.codehaus.org/viewrep/jaxen/jaxen/src/java/main/org/jaxen/saxpath/base/XPathReader.java?r1=1.5&amp;amp;r2=1.4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;where I applied the same incorrect solution that had previously been used for +/&lt;del&gt;. Its mindbendingly difficult to think of cases where this could fail now, as you need at least 4 terms in an expression to get past the corrective action of my previous patch. I&apos;d suggest undoing that 1.4&lt;/del&gt;&amp;gt;1.5 patch above so you can get the original equality/relational tests to fail, before applying the same fix used on the arithmetic operators.&lt;/p&gt;</comment>
                    <comment id="41292" author="elharo" created="Tue, 14 Jun 2005 13:49:11 -0500"  >&lt;p&gt;It&apos;s difficult but I managed to do it with your hints that more than four terms were required. 5 &amp;gt; 4 &amp;gt; 3 &amp;gt; 2 &amp;gt; 1 fails as do several other tests I&apos;ve now checked in. these are all in BaseXPathTest. &lt;/p&gt;</comment>
                    <comment id="41293" author="elharo" created="Tue, 14 Jun 2005 14:24:57 -0500"  >&lt;p&gt;I&apos;ve now added tests that demonstrate how some equality and inequality expressions fail as well.&lt;/p&gt;</comment>
                    <comment id="41326" author="elharo" created="Wed, 15 Jun 2005 08:39:09 -0500"  >&lt;p&gt;I&apos;ve used a similar fix for equality and inequality expressions. However for relational expressions it doesn&apos;t seem to work. The problem may involve a use of additive expressions where multiplicative expression are needed or vice versa or some such, based on the excpeiton message from the test cases. The new code looks like this:&lt;/p&gt;

&lt;p&gt;   private void relationalExpr() throws SAXPathException&lt;br/&gt;
    {&lt;/p&gt;

&lt;p&gt;        additiveExpr();&lt;/p&gt;

&lt;p&gt;        int la = LA(1);&lt;br/&gt;
        while (la == LESS_THAN || la == GREATER_THAN || la == LESS_THAN_EQUALS || la == Operator.GREATER_THAN_EQUALS)&lt;br/&gt;
        {&lt;br/&gt;
            switch ( la )&lt;br/&gt;
            {&lt;br/&gt;
                case LESS_THAN:&lt;/p&gt;
                {
                    match( LESS_THAN );
                    getXPathHandler().startRelationalExpr();
                    additiveExpr();
                    getXPathHandler().endRelationalExpr( LESS_THAN );
                    break;
                }
&lt;p&gt;                case GREATER_THAN:&lt;/p&gt;
                {
                    match( GREATER_THAN );
                    getXPathHandler().startRelationalExpr();
                    additiveExpr();
                    getXPathHandler().endRelationalExpr( GREATER_THAN );
                    break;
                }
&lt;p&gt;                case GREATER_THAN_EQUALS:&lt;/p&gt;
                {
                    match( GREATER_THAN_EQUALS );
                    getXPathHandler().startRelationalExpr();
                    additiveExpr();
                    getXPathHandler().endRelationalExpr( GREATER_THAN_EQUALS );
                    break;
                }
&lt;p&gt;                case LESS_THAN_EQUALS:&lt;/p&gt;
                {
                    match( LESS_THAN_EQUALS );
                    getXPathHandler().startRelationalExpr();
                    additiveExpr();
                    getXPathHandler().endRelationalExpr( LESS_THAN_EQUALS );
                    break;
                }
&lt;p&gt;            }&lt;br/&gt;
            la = LA(1);&lt;br/&gt;
        }&lt;br/&gt;
    } &lt;/p&gt;


&lt;p&gt;Anyone see anything obviously wrong with it? &lt;/p&gt;</comment>
                    <comment id="41332" author="elharo" created="Wed, 15 Jun 2005 09:24:20 -0500"  >&lt;p&gt;OK. The problem is that I was effectively using TokenTypes.LESS_THAN instead of Operator.LESS_THAN and so forth. These are qurie confusingly named. That&apos;s fixed now. For instance,&lt;/p&gt;

&lt;p&gt;              case LESS_THAN_EQUALS:&lt;/p&gt;
                {
                    match( LESS_THAN_EQUALS );
                    getXPathHandler().startRelationalExpr();
                    additiveExpr();
                    getXPathHandler().endRelationalExpr( Operator.LESS_THAN_EQUALS );
                    break;
                } 


&lt;p&gt;There&apos;s still something going on. &amp;gt;= doesn&apos;t work though the other three do. &lt;/p&gt;</comment>
                    <comment id="41333" author="elharo" created="Wed, 15 Jun 2005 09:51:07 -0500"  >&lt;p&gt;I&apos;ve got it fixed now. It was the same problem. I was using Operator.GREATER_THAN_EQUALS where I needed TokenTypes.GREATER_THAN_EQUALS. The confusion between these two is a big problem. I&apos;m going to see if I can do something about this. &lt;/p&gt;

&lt;p&gt;Still to resolve: we are not pushing the event callbacks through XPathHandler in the same order we used to. This is only an issue for people implementing XPathHandler themselves. It does not affect people doing more normal  XPath operations. How important is this? I&apos;m inclined to just let this one go. I think all we&apos;re doing is skipping some callbacks that would otherwise have Operator.NO_OP, whcih maybe clients don&apos;t want to see anyway. &lt;/p&gt;</comment>
                    <comment id="41350" author="bazzargh" created="Wed, 15 Jun 2005 16:50:35 -0500"  >&lt;p&gt;I don&apos;t think the event problem is a huge issue, as basically its the design of saxpath that&apos;s broken. I was thinking about this today. Only the end events are important... need a stack... doh! What saxpath is really doing is converting expressions to postfix form:&lt;br/&gt;
1 + 2 =&amp;gt; 1 2 endAdditiveExpr&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/add.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I don&apos;t think this helps much, but it does look even more like we&apos;ll never be able to generate start events in the right order - we&apos;d need to insert them at random places deep in the stack. &lt;/p&gt;

&lt;p&gt;As for users of these events: there is a handler that tries to turn paths into xml, supposedly to allow optimising transformations. The xml thats produced is junk now. &lt;/p&gt;</comment>
                    <comment id="41351" author="elharo" created="Wed, 15 Jun 2005 17:02:56 -0500"  >&lt;p&gt;Is that handler that turns XPaths into XML hiding in Jaxen somewhere or if not, where can I find it? Sounds like it might be useful; and if I can play with it maybe I can figure out how to fix the event order.&lt;/p&gt;</comment>
                    <comment id="41356" author="bazzargh" created="Wed, 15 Jun 2005 17:27:50 -0500"  >&lt;p&gt;I thought it was in cvs somewhere, I&apos;ve just looked and I can&apos;t see it, possibly its been removed, possibly I was imagining things. The closest thing I can find on the list is a thread on &quot;squashing prefixes&quot; from Alex Cruise, where someone suggested to him that the he should go write a saxpath handler.&lt;/p&gt;</comment>
                    <comment id="68819" author="elharo" created="Mon, 3 Jul 2006 06:50:22 -0500"  >&lt;p&gt;I think this is fixed as far as it needs to be for now. If there is a bug, then it doesn&apos;t get expressed when doing XPath evaluation. &lt;/p&gt;

&lt;p&gt;If the incorrect order of start expressions bothers anyone, then we&apos;ll need a clear test case; and we can reopen this bug or open a new bug to look at fixing that in the post-1.1 time frame. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="15609" name="assoc2.patch" size="5582" author="bazzargh" created="Mon, 13 Jun 2005 19:28:19 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-93] Website should reference other projects</title>
                <link>http://jira.codehaus.org/browse/JAXEN-93</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The web site should have a page listing and linking to other projects that use Jaxen: Jiffie, JDOM, XOM, XPathExplorer, etc.&lt;/p&gt;</description>
                <environment></environment>
            <key id="23545">JAXEN-93</key>
            <summary>Website should reference other projects</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 25 Apr 2005 07:38:26 -0500</created>
                <updated>Mon, 25 Apr 2005 12:50:56 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="38095" author="piran" created="Mon, 25 Apr 2005 12:50:56 -0500"  >&lt;p&gt;Add &lt;a href=&quot;http://jiffie.sourceforge.net/&quot;&gt;http://jiffie.sourceforge.net/&lt;/a&gt; &quot;Allows Microsoft Internet Explorer to be controlled from Java. Uses Jaxen to navigate through IE&apos;s DOM model.&quot;.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 28 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>piran</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-92] isXMLNode in dom.html is imprecise</title>
                <link>http://jira.codehaus.org/browse/JAXEN-92</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The isXMLNode method in org.jaxen.dom.html.DocumentNavigator does not really detect all XML nodes. It assumes all non-namespaced nodes are HTML elements. Instead it should have a list (or map) of all known HTML 4 element names, and should use that list to determine whether any particular non-namespaced name is or is not an HTML element. &lt;/p&gt;</description>
                <environment></environment>
            <key id="23543">JAXEN-92</key>
            <summary>isXMLNode in dom.html is imprecise</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 25 Apr 2005 05:53:34 -0500</created>
                <updated>Tue, 26 Apr 2005 20:02:07 -0500</updated>
                    <resolved>Tue, 26 Apr 2005 20:02:07 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="38183" author="elharo" created="Tue, 26 Apr 2005 20:02:07 -0500"  >&lt;p&gt;Irrelevant now that the org.jaxen.dom.html package has been deleted.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 28 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-91] Add id attributes to tests.xml</title>
                <link>http://jira.codehaus.org/browse/JAXEN-91</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The individual elements in test.xml (document, context, valueOf. etc.) should all have id attributes with unique values. This would make error reporting simpler. When a test fails, we could print the id of the element that caused the failure.&lt;/p&gt;

&lt;p&gt;Long term this would allow us to remove or at least optionally turn off all the logging these tests do now. The general principle is that passing tests produce no output.  &lt;/p&gt;</description>
                <environment></environment>
            <key id="22146">JAXEN-91</key>
            <summary>Add id attributes to tests.xml</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 12 Apr 2005 06:20:43 -0500</created>
                <updated>Tue, 12 Apr 2005 06:20:43 -0500</updated>
                                    <version>1.1</version>
                                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 30 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-90] Add test cases for Visitor support</title>
                <link>http://jira.codehaus.org/browse/JAXEN-90</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Add test cases for the Visitor support&lt;/p&gt;</description>
                <environment></environment>
            <key id="22099">JAXEN-90</key>
            <summary>Add test cases for Visitor support</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="proyal">peter royal</assignee>
                                <reporter username="proyal">peter royal</reporter>
                        <created>Sun, 10 Apr 2005 09:21:48 -0500</created>
                <updated>Thu, 30 Nov 2006 12:53:31 -0600</updated>
                    <resolved>Thu, 30 Nov 2006 12:53:31 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="81526" author="elharo" created="Thu, 30 Nov 2006 12:53:31 -0600"  >&lt;p&gt;Visitor has now been deleted. It can be restored from CVS if test cases and documentation are written at some point. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                3 years, 49 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-89] Stop using dependency ids in project.xml</title>
                <link>http://jira.codehaus.org/browse/JAXEN-89</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The Maven documentation now says, &quot;Note: The use of the id element for a dependency is deprecated. Please use groupId and artifactId together instead.&quot; Jaxen&apos;s project.xml seems to be using the id element for dependency elements. Someone who understands Maven should probably take a look at this. &lt;/p&gt;</description>
                <environment></environment>
            <key id="21715">JAXEN-89</key>
            <summary>Stop using dependency ids in project.xml</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Tue, 22 Mar 2005 17:19:31 -0600</created>
                <updated>Mon, 4 Apr 2005 20:30:46 -0500</updated>
                    <resolved>Mon, 4 Apr 2005 20:30:46 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="31582" author="elharo" created="Mon, 4 Apr 2005 20:30:46 -0500"  >&lt;p&gt;Fixed.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 31 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-88] Early termination with positional predicates</title>
                <link>http://jira.codehaus.org/browse/JAXEN-88</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Michael Kay describes a Saxon optimization in this article on developerWorks:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www-106.ibm.com/developerworks/library/x-xslt2/&quot;&gt;http://www-106.ibm.com/developerworks/library/x-xslt2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;A predicate such as para&lt;span class=&quot;error&quot;&gt;&amp;#91;position() &amp;lt;= 3&amp;#93;&lt;/span&gt; selects the first three &amp;lt;para&amp;gt; children of the current node. It is not necessary to apply this predicate explicitly to every &amp;lt;para&amp;gt; element to see if it is true, since processing can stop after the third node.&quot;&lt;/p&gt;

&lt;p&gt;As always with this sort of stuff, we need to carefully benchmark to insure we don&apos;t spend more time doing the optimization than it actually saves.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21371">JAXEN-88</key>
            <summary>Early termination with positional predicates</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 9 Mar 2005 07:23:07 -0600</created>
                <updated>Fri, 30 Oct 2009 09:36:39 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="39756" author="bazzargh" created="Thu, 26 May 2005 12:39:44 -0500"  >&lt;p&gt;Some related optimisations and thoughts on how to do it: the slow functions in xpath are last(), count(), sum(). I&apos;ve actually seen someone this week write this code:&lt;/p&gt;

&lt;p&gt;foo&lt;span class=&quot;error&quot;&gt;&amp;#91;count(.//bar) != 0&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;When the lazy-evaluation patches land, thats a slow way of saying &apos;foo&lt;span class=&quot;error&quot;&gt;&amp;#91;.//bar&amp;#93;&lt;/span&gt;&apos; (right now it makes no difference). More generally, we can also spot comparisons with expressions like &apos;count(//*)&apos; which only need evaluated once. The transformation looks like this (pseudocode):&lt;/p&gt;

&lt;p&gt;relev&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; is a function returning a bitmask of CN, CP, CS; bits are set if x depends on context node, position, or size respectively. &lt;/p&gt;

&lt;p&gt;(x = y).simplify() -&amp;gt;&lt;/p&gt;

&lt;p&gt;if ((relev&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;amp; (CP|CS|CN)) == 0) {&lt;br/&gt;
    // assume if relev == 0 then the subexpression was cached&lt;br/&gt;
    // if the lhs is an expensive function, transform:&lt;br/&gt;
    if (y ~ count(z)) {
      simplify to: count-between(z, x, x+2); (extension fn with the obvious definition)
    } // and so on. provide position-between(), last-between() functions too.&lt;br/&gt;
} else if ((relev&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/thumbs_up.gif&quot; height=&quot;19&quot; width=&quot;19&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;amp; (CP|CS|CN)) == 0) {&lt;br/&gt;
    // use symmetry:&lt;br/&gt;
    swap_lhs_rhs(); simplify();&lt;br/&gt;
} else {&lt;br/&gt;
    // no simplification possible.&lt;br/&gt;
    return;&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;relev() can be calculated recursively quite cheaply, just bitwise-or the relev of subexpressions; a simplifying assumption that all predicates require &apos;CP&apos;, you can do a bit better if you also calculate the types of all subexpressions, since boolean predicates don&apos;t necessarily need position. &lt;/p&gt;

&lt;p&gt;I&apos;ve implemented the relev() calculations once before, but ripped them out when they didn&apos;t make a difference. A way to add this into jaxen is to use a visitor-like technique with the only thing thats globally available to an evaluation - ContextSupport. Typically an operator would need coded as (pseudocode):&lt;br/&gt;
Object eval(Context context) {&lt;br/&gt;
  ContextSupport cs = context.getContextSupport();&lt;br/&gt;
  Object lhsVal = cs.eval(lhs, context);&lt;br/&gt;
  Object rhsVal = cs.eval(rhs, context);&lt;br/&gt;
  // etc... return something like lhsVal == rhsVal, say&lt;br/&gt;
}&lt;br/&gt;
int relev(ContextSupport cs) { return cs.relev(lhs) | cs.relev(rhs); }&lt;br/&gt;
while ContextSupport would contain this:&lt;br/&gt;
Object eval(Expr expr, Context context) {&lt;br/&gt;
  int relev = relev(expr); // fetch cached or computed relev&lt;br/&gt;
  if (relev == 0) {
    // fetch cached or computed eval
  } else {
    return expr.eval(context);
  } &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;That would get us the early termination/reduction of predicates optimisations michael mentions. BTW I implemented this cache stuff once already and ripped it out, its described in the OPTMINCONTEXT papers. It hardly got triggered at all by our current tests. But having seen Michaels examples and the one I mentioned at the top, I now see where triggering it would be useful. The savings could be quite large - O(document nodes) becomes O(exprs in the path), roughly speaking, but my previous tests showed a performance hit of 10-20% on the small docs used in our unit tests.&lt;/p&gt;</comment>
                    <comment id="41360" author="bazzargh" created="Wed, 15 Jun 2005 18:12:10 -0500"  >&lt;p&gt;changing component to core (this requires access to the tree, unavailable in saxpath) and marking for 2.0 as its performance&lt;/p&gt;</comment>
                    <comment id="196655" author="olo" created="Fri, 30 Oct 2009 08:39:30 -0500"  >&lt;p&gt;Hasn&apos;t &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-31&quot; title=&quot;if jaxen stopped using lists it would be 37x faster&quot;&gt;JAXEN-31&lt;/a&gt; addressed this?&lt;/p&gt;</comment>
                    <comment id="196666" author="bazzargh" created="Fri, 30 Oct 2009 09:36:39 -0500"  >&lt;p&gt;Not entirely. &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-31&quot; title=&quot;if jaxen stopped using lists it would be 37x faster&quot;&gt;JAXEN-31&lt;/a&gt; helps if the user avoids using last() (for example) since we don&apos;t have to touch all the nodes. My comment above is that this optimisation is one of family of transformations like these:&lt;/p&gt;

&lt;p&gt;count&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;lt; y is equivalent to: for (node in x) { count++; if (!(count &amp;lt; y)) {return false} } return true;&lt;br/&gt;
&lt;br/&gt;
and&lt;br/&gt;
&lt;br/&gt;
count&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; == y is equivalent to: for (node in x) { count++; if (count &amp;gt; y) {return false} } return count == y;&lt;/p&gt;

&lt;p&gt;These loops terminate early without hitting every node in x. There&apos;s no way for the user to express this intent in xpath, unless we add some extension functions:&lt;/p&gt;

&lt;p&gt;count&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;lt; y is equivalent to: count-between(x, 0, y - 1) &lt;br/&gt;
count&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/error.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; == y is equivalent to: count-between(x, y, y)&lt;/p&gt;

&lt;p&gt;Where count-between(x, ymin, ymax) is defined as:&lt;br/&gt;
for (node in x) { count++; if (count &amp;gt; ymax) {return false} } return count &amp;gt;= ymin;&lt;/p&gt;

&lt;p&gt;...once we have these, we can get the optimisation by transforming the parse tree to use these functions wherever theres a count() comparison. Even after &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-31&quot; title=&quot;if jaxen stopped using lists it would be 37x faster&quot;&gt;JAXEN-31&lt;/a&gt; lands, this is still a win.&lt;/p&gt;

&lt;p&gt;Re the bug title, &apos;early termination with positional predicates&apos;... we /may/ have that one covered. There are still some internal uses of size() in jaxen, I&apos;d have to check.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 1 week, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>olo</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-87] Expression reduction</title>
                <link>http://jira.codehaus.org/browse/JAXEN-87</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Michael Kay describes a Saxon optimization of expression reduction in this article on developerWorks:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www-106.ibm.com/developerworks/library/x-xslt2/&quot;&gt;http://www-106.ibm.com/developerworks/library/x-xslt2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;Expressions can be progressively reduced, to eliminate their dependencies. The concept of expression reduction is widely used in functional languages, and is particularly appropriate for optimizing a language such as XPath. Each expression class has a method getDependencies() which returns information about the aspects of the context that the method depends on. This already makes certain optimizations possible. For example, if the expression doesn&apos;t use the last() function then it is not necessary to do look-ahead processing to determine how many elements there are in the context list. Further, each expression has a method reduceDependencies(), which returns an equivalent expression in which specified dependencies are eliminated, while others are retained. This is useful where the same expression is used repeatedly. For example, before a sort is carried out, the sort key expression is reduced to eliminate dependencies on variables (because these will be the same for every node in the list) but not on the current node (which will be different for each item in the list).&quot;&lt;/p&gt;</description>
                <environment></environment>
            <key id="21370">JAXEN-87</key>
            <summary>Expression reduction</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 9 Mar 2005 07:18:04 -0600</created>
                <updated>Wed, 15 Jun 2005 17:08:01 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41352" author="bazzargh" created="Wed, 15 Jun 2005 17:08:01 -0500"  >&lt;p&gt;optimization issue, moving to 2.0 (I&apos;ve done some work on this one. explicit getDependencies() calls can actually be avoided by using an appropriate nodeset structure...more later)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-86] enumerate as well as evaluate</title>
                <link>http://jira.codehaus.org/browse/JAXEN-86</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Michael Kay describes a Saxon optimization of using enumeration to replace evaluation in some cases in this article on developerWorks:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www-106.ibm.com/developerworks/library/x-xslt2/&quot;&gt;http://www-106.ibm.com/developerworks/library/x-xslt2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;Each expression class has an evaluate() method, and an enumerate() method. This (in the case of expressions representing node sets) allows the nodes to be retrieved incrementally, rather than all at once. This allows pipelined execution, in the typical manner adopted by relational database systems. Calling enumerate() on a union expression, for example, works by merging the enumerations of its two operands. So long as the operands are both already sorted into document order, this avoids the need to allocate memory for the intermediate node sets.&quot;&lt;/p&gt;

&lt;p&gt;We should explore this for Jaxen.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21369">JAXEN-86</key>
            <summary>enumerate as well as evaluate</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 9 Mar 2005 07:16:50 -0600</created>
                <updated>Wed, 15 Jun 2005 15:58:12 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41345" author="bazzargh" created="Wed, 15 Jun 2005 15:58:12 -0500"  >&lt;p&gt;punting optimization issues to 2.0. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-85] Simplify XPath expressions</title>
                <link>http://jira.codehaus.org/browse/JAXEN-85</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Currently we don&apos;t make much, if any, use of the simplify method in the XPathExpr class and its subclasses. It&apos;s possible we could imporve performance by doing so. Saxon does this as Michael Kay describes in this article on developerWorks:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www-106.ibm.com/developerworks/library/x-xslt2/&quot;&gt;http://www-106.ibm.com/developerworks/library/x-xslt2/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&quot;Each expression class has a simplify() method, to allow expression rewriting. This enables context-independent optimizations to be performed. Sometimes this results in transformation to a different XPath expression (for example title&lt;span class=&quot;error&quot;&gt;&amp;#91;2=2&amp;#93;&lt;/span&gt; is rewritten as title, while count($x)=0 is rewritten as not($x)). More often the expression rewrite exploits internal classes that represent special cases. For example, the expression section&lt;span class=&quot;error&quot;&gt;&amp;#91;@title&amp;#93;&lt;/span&gt; returns all child &amp;lt;section&amp;gt;s of the current element that have a title attribute. Because of the context in which the sub-expression @title appears, it is possible to rewrite it using a special-purpose class that tests for the presence of a given attribute on the current node and returns a Boolean value.&quot;&lt;/p&gt;

&lt;p&gt;I think we&apos;d need to do careful benchamrking to make sure we weren&apos;t wasting more time simplifying than we gained back, especially on unusual expression like 2=2 that are unlikely to occur in practice. &lt;/p&gt;</description>
                <environment></environment>
            <key id="21368">JAXEN-85</key>
            <summary>Simplify XPath expressions</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 9 Mar 2005 07:14:33 -0600</created>
                <updated>Wed, 15 Jun 2005 15:53:05 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41344" author="bazzargh" created="Wed, 15 Jun 2005 15:53:05 -0500"  >&lt;p&gt;punting optimization issues to 2.0&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-84] Doubled blank lines should be removed</title>
                <link>http://jira.codehaus.org/browse/JAXEN-84</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;At some point extra blank lines got added in the org.jaxen.expr package, probably as a result of some system changing \r\n to \n\n or something like that. We should go through these files with grep and reverse that. Be careful though. A couple of the files have already been fixed so you can&apos;t just grep through all of them. We need to look at each one individually. &lt;/p&gt;</description>
                <environment></environment>
            <key id="21366">JAXEN-84</key>
            <summary>Doubled blank lines should be removed</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Wed, 9 Mar 2005 07:03:52 -0600</created>
                <updated>Wed, 23 Mar 2005 08:27:11 -0600</updated>
                    <resolved>Mon, 21 Mar 2005 17:48:46 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 35 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-83] saxpath sources not in distro. Rest of source is.</title>
                <link>http://jira.codehaus.org/browse/JAXEN-83</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I downloaded 1.0 FCS. Sources are there for jaxen, but not for saxpath. Since the saxpath separate project has now been discontinued and folded into jaxen, you should distrib those sources along with the regular jaxen ones.&lt;/p&gt;

&lt;p&gt;or you could provide separate web links to quickly and easily download the saxpath sources, but I suggest the previous. Easier, less confusing. &lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;...mike beckerle&lt;/p&gt;</description>
                <environment>all</environment>
            <key id="21314">JAXEN-83</key>
            <summary>saxpath sources not in distro. Rest of source is.</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mbeckerle">Mike Beckerle</reporter>
                        <created>Mon, 7 Mar 2005 18:14:11 -0600</created>
                <updated>Mon, 1 May 2006 06:21:06 -0500</updated>
                                    <version>1.0</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="64475" author="elharo" created="Mon, 1 May 2006 06:21:06 -0500"  >&lt;p&gt;No one should be using 1.0 any more. 1.1, even in beta, is much superior. We&apos;ll probably withdraw 1.0 in the not-too-distant future. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 27 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>mbeckerle</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-82] Speed up XPathFunctionContext constructor</title>
                <link>http://jira.codehaus.org/browse/JAXEN-82</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;It&apos;s interesting how slight modifications in my navigator code lead to large variances in where the hot spots in Jaxen show up. The latest changes I&apos;ve made to my code that calls Jaxen indicate that the XPathFunctionContext constructor is a HotSpot. This may be 10-20% of the time Jaxen spends. Looking at the code there, I do suspect we might be able to optimize this significantly. &lt;/p&gt;

&lt;p&gt;One possibility is that we might be able to reuse the same SimpleFunctionContext rather than constantly recreating new ones. I implemented this strategy in XOM and it almost completely eliminated the time spent in this method. This trick might be more broadly applicable.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21175">JAXEN-82</key>
            <summary>Speed up XPathFunctionContext constructor</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 27 Feb 2005 11:09:12 -0600</created>
                <updated>Wed, 15 Jun 2005 19:22:52 -0500</updated>
                                    <version>1.1</version>
                                <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41357" author="bazzargh" created="Wed, 15 Jun 2005 17:40:23 -0500"  >&lt;p&gt;performance issue, marking for 2.0. In 2.0 we&apos;re aiming for jaxp1.3 support, which involves a different api for functioncontexts - arity is also required (which I think was daft), and custom functions arent allowed in the default namespace (via that api), which looks designed to allow compiled implementations. Several things to mull over.&lt;/p&gt;</comment>
                    <comment id="41361" author="bob" created="Wed, 15 Jun 2005 18:31:42 -0500"  >&lt;p&gt;I think perhaps having a singleton for the standard library function context could be useful here, eh?  Did we not have one for a while?&lt;/p&gt;</comment>
                    <comment id="41366" author="bazzargh" created="Wed, 15 Jun 2005 19:22:52 -0500"  >&lt;p&gt;That a hint, bob? &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Its there all right - XPathFunctionContext. I suspect the performance issue is just junit&apos;s fault - it uses a new classloader for each test so there&apos;s a lot of time spent recreating statics.&lt;/p&gt;

&lt;p&gt;The other changes run something like this: jaxp wants &lt;br/&gt;
public interface FunctionResolver {&lt;br/&gt;
 // functions cannot override internals.&lt;br/&gt;
 Function resolveFunction(QName name, int arity);&lt;br/&gt;
}&lt;br/&gt;
jaxen wants:&lt;br/&gt;
public interface FunctionContext {&lt;br/&gt;
 Function getFunction(String nsuri, String prefix, String local) throws UnresolvableException;&lt;br/&gt;
}&lt;br/&gt;
so internally we should use:&lt;br/&gt;
interface InternalFunctionContext {&lt;br/&gt;
 Function getFunction(String nsuri, String prefix, String local, int arity) throws UnresolvableException;&lt;br/&gt;
}&lt;br/&gt;
with these impls:&lt;br/&gt;
class FunctionContextWrapper implements InternalFunctionContext {&lt;br/&gt;
private FunctionContext ctx;&lt;br/&gt;
Function getFunction(String nsuri, String prefix, String local, int arity) {&lt;br/&gt;
return ctx.getFunction(nsuri, prefix, local);&lt;br/&gt;
} &lt;br/&gt;
}&lt;br/&gt;
// jdk1.5+&lt;br/&gt;
class FunctionResolverWrapper implements InternalFunctionContext {&lt;br/&gt;
private FunctionContext sctx = XPathFunctionContext.getInstance();&lt;br/&gt;
private FunctionResolver ctx;&lt;br/&gt;
Function getFunction(String nsuri, String prefix, String local, int arity) {&lt;br/&gt;
if (prefix == null) {&lt;br/&gt;
return sctx.getFunction(nsuri, prefix, local);&lt;br/&gt;
}&lt;br/&gt;
// the function returned here needs wrapped too. ignore that for now.&lt;br/&gt;
return ctx.getFunction(new QName(nsuri, local, prefix), arity);&lt;br/&gt;
} &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;XPathFunctionContext would be changed to implement both InternalFunctionContext and FunctionContext.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-81] Speed up DefaultNameStep</title>
                <link>http://jira.codehaus.org/browse/JAXEN-81</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In my tests, DefaultNameStep.matches and DefaultNameStep.evaluate are coming in at about 6% and 8% respectively of the total time spent inside Jaxen. This places this near the top of the Jaxen methods in execution time. Any opportunities to speed up these methods would be helpful.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21174">JAXEN-81</key>
            <summary>Speed up DefaultNameStep</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 27 Feb 2005 09:50:41 -0600</created>
                <updated>Wed, 15 Jun 2005 17:42:59 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="41358" author="bazzargh" created="Wed, 15 Jun 2005 17:42:59 -0500"  >&lt;p&gt;performance, marking for 2.0&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-80] Speed-up IdentityHashMap.put</title>
                <link>http://jira.codehaus.org/browse/JAXEN-80</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In my profiling of XOM, the first HotSpot I encountered in Jaxen (as opposed to my own code) was in IdentityHashMap.put. Anything that could be done to speed up this method would be appreciated.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21173">JAXEN-80</key>
            <summary>Speed-up IdentityHashMap.put</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 27 Feb 2005 09:17:41 -0600</created>
                <updated>Sat, 16 Apr 2005 14:21:05 -0500</updated>
                    <resolved>Sat, 16 Apr 2005 14:21:05 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="32097" author="elharo" created="Sat, 16 Apr 2005 14:21:05 -0500"  >&lt;p&gt;Now that the IdentityHashMap class has been replaced, this is no longer relevant. If IdentitySet proves to be a hot spot in future profiling, I&apos;ll open a new issue. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 30 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-79] How to connect a model How-To</title>
                <link>http://jira.codehaus.org/browse/JAXEN-79</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;It would be nice to have a tutorial on how to connect Jaxen to new models; i.e. how to write a navigator. Mostly this can be figured out from the JavaDoc and by reading the code for the existing navigators, but a more detailed exposition would be nice. &lt;/p&gt;</description>
                <environment></environment>
            <key id="21172">JAXEN-79</key>
            <summary>How to connect a model How-To</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 27 Feb 2005 08:24:36 -0600</created>
                <updated>Mon, 3 Jul 2006 08:46:18 -0500</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 36 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-78] Programmer level design documentation</title>
                <link>http://jira.codehaus.org/browse/JAXEN-78</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;One of these days, it would be nice if someone who understands the design of Jaxen would document exactly what&apos;s going on inside SAXPATH and the other internal parts of Jaxen. I find myself spending a lot of time walking through the code in my debugger trying to understand just how Jaxen works. Sometimes I apply fixes without necessarily fully comprehending side-effects. &lt;/p&gt;

&lt;p&gt;The core code base is relatively small, and seems to follow a well thought-out design. I just can&apos;t quite grok the overall view of the design from looking at Jaxen line-by-line. It would be helpful if there were high-level overviews of just how the pieces of the project fit together.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21171">JAXEN-78</key>
            <summary>Programmer level design documentation</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 27 Feb 2005 08:22:34 -0600</created>
                <updated>Sun, 27 Feb 2005 08:22:34 -0600</updated>
                                                                            <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 36 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-77] Ancestor axis nodes returned in wrong order</title>
                <link>http://jira.codehaus.org/browse/JAXEN-77</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Consider a document like this:&lt;/p&gt;

&lt;p&gt;&amp;lt;a&amp;gt;&amp;lt;b&amp;gt;&amp;lt;c/&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;&lt;/p&gt;

&lt;p&gt;Now evaluate the XPath expression ancestor::* using the element c as the context node. Document order requires that the result be returned in the order {a, b}. However, it is actually returned in reverse document order {b, a}&lt;/p&gt;</description>
                <environment></environment>
            <key id="21103">JAXEN-77</key>
            <summary>Ancestor axis nodes returned in wrong order</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Fri, 25 Feb 2005 09:51:41 -0600</created>
                <updated>Thu, 31 Mar 2005 21:28:11 -0600</updated>
                    <resolved>Thu, 31 Mar 2005 21:28:12 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="30301" author="bob" created="Fri, 25 Feb 2005 09:58:19 -0600"  >&lt;p&gt;Section 2.4 says &apos;ancestor&apos; is a reverse axes, so I think this isn&apos;t a bug?&lt;/p&gt;

&lt;p&gt;&quot;Thus, the ancestor, ancestor-or-self, preceding, and preceding-sibling axes are reverse axes; all other axes are forward axes.&quot;&lt;/p&gt;</comment>
                    <comment id="30302" author="elharo" created="Fri, 25 Feb 2005 10:23:31 -0600"  >&lt;p&gt;It is a bug, and it&apos;s a tricky one.&lt;/p&gt;

&lt;p&gt;Reverse document order is used when calculating position within a node-set, e.g. by the position() function. I think Jaxen gets this much correct. &lt;/p&gt;

&lt;p&gt;XPath node-sets are unordered, so implementations are free to return their nodes in any order they like. Jaxen promises in its JavaDoc to return all expressions not involving the union operator in docuemnt order. This is irrespective of the axes used. Indeed this is the most useful order a user would expect. Since an XPath expression can contain a mix of both forward and reverse axes, using one or the other does not guarantee that the result should be in document order or reverse document order. Consider&lt;/p&gt;

&lt;p&gt; //x/ancestor::y/attribute::foo/..&lt;/p&gt;

&lt;p&gt;What order should these results be in? Always picking document order satisfies the principle of least surprise.&lt;/p&gt;

&lt;p&gt;Thus this is not an XPath bug, but it is a Jaxen bug. Jaxen could define other behavior, or simply not promise anything about the order of nodes returned. However, I think that would make it a lot less useful.&lt;/p&gt;</comment>
                    <comment id="31490" author="elharo" created="Thu, 31 Mar 2005 21:28:11 -0600"  >&lt;p&gt;The ancestor and ancestor-or-self axes now return nodes in document order. Basically I just called Collections.reverse() on the list before it&apos;s returned out of Jaxen.&lt;/p&gt;

&lt;p&gt;This is only a partial fix because compound location steps and unions can still get nodes out of order. However, it resolves this issue and those are still open in other bugs. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 32 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-76] Always use document order</title>
                <link>http://jira.codehaus.org/browse/JAXEN-76</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The JavaDoc for BaseXPath.selectNodes says &quot;In most cases, nodes will be returned in document-order, as defined by the XML Canonicalization specification. The exception occurs when using XPath expressions involving the union operator (denoted with the pipe &apos;|&apos; character).&quot; &lt;/p&gt;

&lt;p&gt;It would be very helpful if Jaxen always returned nodes in document order, even when using the union operator.&lt;/p&gt;

&lt;p&gt;Currently the XOM wrapper for Jaxen looks at all nodes returned by selectNodes and sorts them into document order. However, this is only really necessary when the XPath expression uses the union operator (or when bug 55 is activated, but eventually that will be fixed) and XOM has no easy way to tell if the XPath expression uses a union operator or not because it doesn&apos;t parse the XPath expression, just pass it to Jaxen. (The | character can appear in an XPath expression in contexts other than union operator, so we can&apos;t just search the string.)&lt;/p&gt;

&lt;p&gt;Jaxen would only have to sort when evaluating a union expression or compound location path individual location steps now always return nodes in document order.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21085">JAXEN-76</key>
            <summary>Always use document order</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 24 Feb 2005 14:38:55 -0600</created>
                <updated>Sat, 2 Apr 2005 23:50:47 -0600</updated>
                    <resolved>Sat, 2 Apr 2005 23:50:47 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="31534" author="elharo" created="Sat, 2 Apr 2005 23:50:47 -0600"  >&lt;p&gt;This has been fixed. Jaxen now returns all nodes in document order regardless of the expression used to select them. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 32 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-75] XPointer support</title>
                <link>http://jira.codehaus.org/browse/JAXEN-75</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;It would be nice if the XPath parser could be extended to handle XPointers. It&apos;s probably a straight-forward extension of the grammar.&lt;/p&gt;</description>
                <environment></environment>
            <key id="21077">JAXEN-75</key>
            <summary>XPointer support</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 24 Feb 2005 08:02:17 -0600</created>
                <updated>Thu, 24 Feb 2005 10:17:06 -0600</updated>
                                    <version>2.0</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="30266" author="david@randombits.org" created="Thu, 24 Feb 2005 10:12:52 -0600"  >&lt;p&gt;I thought so too, but it turned out to be a little harder than I thought. I started an extension for it about 2-3 years ago, and got as far as I could in Jaxen and then hit grammar requirements that needed to be implemented into SAXPATH. I would have gone further except that the project I originally needed it for no longer required it.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached the code I came up with (jaxen-xpointer.zip). It actually contains all Jaxen code from the time when I stopped developing it, the reason being that some rearrangements were necessary in the main branch to get the result I needed. However, most of the code is now a couple of years out-of-date, so I wouldn&apos;t just drop it in. Integration-wise, I&apos;d suggest the following:&lt;/p&gt;

&lt;p&gt;1. Take the org.jaxen.xpointer package (and its children) and trying to compile them against the current source and seeing what breaks.&lt;br/&gt;
2. Examine the XPointer-modified code to see if a method was added/modified/etc and make it work with the current source.&lt;br/&gt;
3. Add the necessary grammar in SAXPATH to get full functionality.&lt;/p&gt;

&lt;p&gt;For what it&apos;s worth, classes in the main branch that I recall having to modify include:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Navigator&lt;/li&gt;
	&lt;li&gt;XPath/BaseXPath&lt;/li&gt;
	&lt;li&gt;functions.StringFunction&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;m happy to help out answering questions, etc, but I can&apos;t take the lead on this one. Feel free to use the code as you will however.&lt;/p&gt;</comment>
                    <comment id="30267" author="david@randombits.org" created="Thu, 24 Feb 2005 10:17:06 -0600"  >&lt;p&gt;Preliminary XPointer code for JAXEN.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="14033" name="jaxen-xpointer.zip" size="161269" author="david@randombits.org" created="Thu, 24 Feb 2005 10:17:06 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 37 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>david@randombits.org</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-74] //. | /</title>
                <link>http://jira.codehaus.org/browse/JAXEN-74</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Compiling the expression &lt;/p&gt;

&lt;p&gt;//. | /&lt;/p&gt;

&lt;p&gt;throws a java.util.NoSuchElementException&lt;/p&gt;

&lt;p&gt;As near as I can figure the problem occurs in JaxenHandler.endUnionExpr when the second call to pop() is made.&lt;/p&gt;

&lt;p&gt;    public void endUnionExpr(boolean create) throws JaxenException&lt;br/&gt;
    {&lt;/p&gt;

&lt;p&gt;        if ( create )&lt;/p&gt;
        {

            Expr rhs = (Expr) pop();
            // FIXME this next line is dying with a NoSucElementException
            // with the XPath expression //. | /
            Expr lhs = (Expr) pop();

            push( getXPathFactory().createUnionExpr( lhs,
                                                    rhs ) );
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Possibly however this is just a symptom of an earlier bug.&lt;/p&gt;

&lt;p&gt;The equivalent expression / | //. does not cause a problem.&lt;/p&gt;</description>
                <environment></environment>
            <key id="20953">JAXEN-74</key>
            <summary>//. | /</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="1" iconUrl="http://jira.codehaus.org/images/icons/priority_blocker.gif">Blocker</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 17 Feb 2005 16:26:24 -0600</created>
                <updated>Tue, 22 Feb 2005 22:00:36 -0600</updated>
                    <resolved>Tue, 22 Feb 2005 22:00:36 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 38 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-73] Cannot create xpressions anymore using variables</title>
                <link>http://jira.codehaus.org/browse/JAXEN-73</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I cannot create expressions anymore which contains variables.&lt;br/&gt;
An example junit test using dom4j:&lt;/p&gt;

&lt;p&gt;public void testJaxen() throws Exception {&lt;br/&gt;
    Document doc = DocumentHelper.createDocument();&lt;br/&gt;
    Element root = doc.addElement(&quot;root&quot;);&lt;br/&gt;
    Element author = root.addElement(&quot;author&quot;);&lt;br/&gt;
    author.addAttribute(&quot;name&quot;, &quot;Scott&quot;);&lt;/p&gt;

&lt;p&gt;    String xpath = &quot;$author/@name&quot;;&lt;br/&gt;
    SimpleVariableContext context = new SimpleVariableContext();&lt;br/&gt;
    context.setVariableValue(&quot;author&quot;, author);&lt;/p&gt;

&lt;p&gt;    Dom4jXPath path = new Dom4jXPath(xpath);  // EXCEPTION&lt;br/&gt;
    path.setVariableContext(context);&lt;/p&gt;

&lt;p&gt;    List result = (List) path.evaluate(doc);&lt;br/&gt;
    assertEquals(author.attribute(&quot;name&quot;), result.get(0));&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;this test throws the following exception:&lt;/p&gt;

&lt;p&gt;org.jaxen.XPathSyntaxException: Node-set expected&lt;br/&gt;
	at org.jaxen.BaseXPath.&amp;lt;init&amp;gt;(BaseXPath.java:140)&lt;br/&gt;
	at org.jaxen.BaseXPath.&amp;lt;init&amp;gt;(BaseXPath.java:161)&lt;br/&gt;
	at org.jaxen.dom4j.Dom4jXPath.&amp;lt;init&amp;gt;(Dom4jXPath.java:101)&lt;/p&gt;

&lt;p&gt;If I replace the xpath expression with &quot;/root/author&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;/@name&quot;, everything works as expected.&lt;/p&gt;

&lt;p&gt;regards,&lt;br/&gt;
Maarten&lt;/p&gt;</description>
                <environment></environment>
            <key id="20848">JAXEN-73</key>
            <summary>Cannot create xpressions anymore using variables</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="1" iconUrl="http://jira.codehaus.org/images/icons/priority_blocker.gif">Blocker</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="maartenc">Maarten Coene</reporter>
                        <created>Sat, 12 Feb 2005 09:11:27 -0600</created>
                <updated>Fri, 20 May 2005 07:02:55 -0500</updated>
                    <resolved>Fri, 20 May 2005 07:02:55 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="30625" author="bazzargh" created="Wed, 9 Mar 2005 14:01:44 -0600"  >&lt;p&gt;you give the example &quot;$author/@name&quot;, but that&apos;s not a valid xpath1 expression. Variables in xpath 1 can hold tree fragments (in xpath as extended for xsl), numbers, booleans, or strings, but &lt;em&gt;not&lt;/em&gt; node sets, so you can&apos;t write a path relative to a variable.&lt;/p&gt;

&lt;p&gt;Leaving this open for the moment, in case you&apos;ve got an example with a valid expression, but otherwise its unlikely this will be fixed.&lt;/p&gt;</comment>
                    <comment id="31200" author="elharo" created="Mon, 21 Mar 2005 17:50:26 -0600"  >&lt;p&gt;Agreed. This is not a bug. &lt;/p&gt;</comment>
                    <comment id="31211" author="maartenc" created="Tue, 22 Mar 2005 02:56:23 -0600"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;can you give me a reference where the xpath1 spec says that variable cannot be bound to node sets?&lt;/p&gt;

&lt;p&gt;I cannot find anything about it at &lt;a href=&quot;http://www.w3.org/TR/xpath&quot;&gt;http://www.w3.org/TR/xpath&lt;/a&gt; . Even more: there is an example on that page where a variable is bound to a node set. See the first note in section 3.4 (&lt;a href=&quot;http://www.w3.org/TR/xpath#booleans&quot;&gt;http://www.w3.org/TR/xpath#booleans&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;regards,&lt;br/&gt;
Maarten&lt;/p&gt;</comment>
                    <comment id="31239" author="elharo" created="Tue, 22 Mar 2005 09:13:24 -0600"  >&lt;p&gt;The description isn&apos;t quite accurate. Variables can be bound to node-sets. however variables references are not allowed as location path steps per the BNF grammar. For instance, $a/child::foo is not legal in XPath 1.0. However foo/bar&lt;span class=&quot;error&quot;&gt;&amp;#91;$a = .&amp;#93;&lt;/span&gt; is legal, even if $a is bound to a node-set. &lt;/p&gt;

&lt;p&gt;If you can create a syntactically correct expression that Jaxen cannot handle. please reopen the issue. However $a/child::foo is not such an expression.&lt;/p&gt;</comment>
                    <comment id="38455" author="elharo" created="Tue, 3 May 2005 07:19:09 -0500"  >&lt;p&gt;It now seems that I was wrong. Variables can be bound to node-sets, and $var/foo is a BNF correct expression so we need to handle this case. For future reference according to Brian Ewins the relevant bits of the BNF are:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;19&amp;#93;&lt;/span&gt; PathExpr    ::= FilterExpr &apos;/&apos; RelativeLocationPath	&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;20&amp;#93;&lt;/span&gt; FilterExp   ::= PrimaryExpr	&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;15&amp;#93;&lt;/span&gt; PrimaryExpr ::= VariableReference	&lt;/p&gt;

</comment>
                    <comment id="39400" author="elharo" created="Fri, 20 May 2005 07:02:55 -0500"  >&lt;p&gt;This should be fixed now. Both variables and parentheses are allowed to begin location paths&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 25 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>maartenc</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-72] 4 | 5 is not legal</title>
                <link>http://jira.codehaus.org/browse/JAXEN-72</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;number | number (e.g. 4 | 5) should throw an XPathSyntaxException&lt;/p&gt;</description>
                <environment></environment>
            <key id="20716">JAXEN-72</key>
            <summary>4 | 5 is not legal</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 7 Feb 2005 07:23:02 -0600</created>
                <updated>Tue, 8 Feb 2005 08:36:31 -0600</updated>
                    <resolved>Tue, 8 Feb 2005 08:36:31 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-71] count(3) and 1/child::test</title>
                <link>http://jira.codehaus.org/browse/JAXEN-71</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Jaxen seems to be allowing syntactically correct but datatype illegal expressions such as 1/child::test and count(3). &lt;/p&gt;</description>
                <environment></environment>
            <key id="20684">JAXEN-71</key>
            <summary>count(3) and 1/child::test</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sun, 6 Feb 2005 11:44:58 -0600</created>
                <updated>Tue, 8 Feb 2005 08:41:43 -0600</updated>
                    <resolved>Tue, 8 Feb 2005 08:41:43 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29633" author="elharo" created="Mon, 7 Feb 2005 07:20:00 -0600"  >&lt;p&gt;This is probably two separate issues. I fixed 1/child::test but that fix did not fix count(3)&lt;/p&gt;</comment>
                    <comment id="29668" author="elharo" created="Tue, 8 Feb 2005 08:41:43 -0600"  >&lt;p&gt;Both of these problems are now fixed. I also problems in the name(), local-name(), namespace-uri(), and sum() functions that were similar to the count() problem. The problem there turned out to be allowing fucntions that can only take node-sets as arguments to take other types as well. &lt;/p&gt;

&lt;p&gt;1/child::test was a completely separate problem.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-70] XPathLexer incorrectly identifies XML name characters</title>
                <link>http://jira.codehaus.org/browse/JAXEN-70</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The class XPathLexer calls the methods Character.isUnicodeIdentifierStart and Character.isUnicodeIdentifierPart to determine whether or not a given character is legal as an XML 1.0 name character. However, the XML 1.0 name rules are not quite the same as the Unicode name rules. Among other issues, the XML 1.0 name characters are fixed while the Unicode name characters evolve. XML is based on Unicode 2 while Java 1.4 is based on Unicode 3.&lt;/p&gt;

&lt;p&gt;XPath 1.0 is defined over XML 1.0. so XML 1.1 isn&apos;t really relevant here. Nonetheless, XML 1.1 doesn&apos;t fix matters either. It has the opposite problem. It allows name characters that are not legal Unicode identifiers.&lt;/p&gt;</description>
                <environment></environment>
            <key id="20676">JAXEN-70</key>
            <summary>XPathLexer incorrectly identifies XML name characters</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 5 Feb 2005 10:18:44 -0600</created>
                <updated>Tue, 8 Feb 2005 09:26:33 -0600</updated>
                    <resolved>Tue, 8 Feb 2005 09:26:33 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29581" author="elharo" created="Sat, 5 Feb 2005 10:22:06 -0600"  >&lt;p&gt;I think JDOM has code that would fix this issue. I&apos;ll have to check. We could either call out to the JDOM Verifier class, which I really don&apos;t want to do since it would introduce a core dependence on JDOM; or we could copy and paste the necessary code from JDOM. I think the licenses are compatible. Is there any reason we should not adopt JDOM code directly into Jaxen?&lt;/p&gt;</comment>
                    <comment id="29582" author="proyal" created="Sat, 5 Feb 2005 11:15:11 -0600"  >&lt;p&gt;given compatible licenses, i see no reason why we couldn&apos;t copy the appropriate code from jdom.&lt;/p&gt;

&lt;p&gt;if xom has code that was solely written by you, you could contribute it to jaxen too &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="29671" author="elharo" created="Tue, 8 Feb 2005 09:26:33 -0600"  >&lt;p&gt;Fixed by adopting Verifier class from JDOM, with some modifications to check NCNames rather than Names&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-69] Make BaseXPath abstract</title>
                <link>http://jira.codehaus.org/browse/JAXEN-69</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;BaseXPath should be abstract, because it does not provide a Navigator which much subsidiary functionality depends on. This may be a minor incompatibility so think about it in the 2.0 time frame. &lt;/p&gt;</description>
                <environment></environment>
            <key id="20589">JAXEN-69</key>
            <summary>Make BaseXPath abstract</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 31 Jan 2005 07:18:24 -0600</created>
                <updated>Sun, 20 Feb 2005 11:43:25 -0600</updated>
                                    <version>1.0</version>
                                <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 40 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-68] // is treated as //.</title>
                <link>http://jira.codehaus.org/browse/JAXEN-68</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Jaxen does not flag // as a syntactically incorrect XPath expression. It should. &lt;/p&gt;</description>
                <environment></environment>
            <key id="20541">JAXEN-68</key>
            <summary>// is treated as //.</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 27 Jan 2005 12:46:04 -0600</created>
                <updated>Tue, 8 Feb 2005 15:09:37 -0600</updated>
                    <resolved>Tue, 8 Feb 2005 15:09:37 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29380" author="elharo" created="Fri, 28 Jan 2005 15:02:14 -0600"  >&lt;p&gt;I&apos;ve checked a fix into CVS, but it&apos;s kludgy; and I&apos;m not at all sure this is the right fix. Basically I added a default block to XPathReader.absoluteLocationPath that throws an XPathSyntaxException. It seems to catch this, and not break anything else. However, perhaps the fix should be in the lexer instead of XPathReader?&lt;/p&gt;</comment>
                    <comment id="29409" author="bazzargh" created="Sun, 30 Jan 2005 10:13:58 -0600"  >&lt;p&gt;took a look at the fix - seems ok to me. &quot;//.&quot; would definitely be at least two lexical tokens, so its the right thing to put it in the parser.&lt;/p&gt;

&lt;p&gt;As for it being hacky, well, you might want to look at how the arithmetic operations are made left-associative - its much worse! The lexer/parser isn&apos;t great, and using javacc instead would be a definite improvement, but there isn&apos;t much pressure for this as there are relatively few parser bugs reported now.&lt;/p&gt;</comment>
                    <comment id="29684" author="elharo" created="Tue, 8 Feb 2005 15:09:37 -0600"  >&lt;p&gt;Fix doesn&apos;t seem to have broken anything else, so closing this issue&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-67] Text nodes not coalesced as required by XPath</title>
                <link>http://jira.codehaus.org/browse/JAXEN-67</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;unless there is a magic number in the code, it appears that CDATA_SECTION_NODE (4) is never used, and is being treated differently to TEXT_NODE (3).&lt;/p&gt;

&lt;p&gt;I&apos;m seeing match rules in a dom4j stylesheet coming up as &quot;4&quot; and being thrown away (along with their child text), inside of the child being processed as text. However, this isn&apos;t entirely consistent - I&apos;ve also seen it work in other circumstances and haven&apos;t been able to pin it down.&lt;/p&gt;

&lt;p&gt;This may or may not be a bug, but thought it warranted investigation.&lt;/p&gt;</description>
                <environment></environment>
            <key id="20518">JAXEN-67</key>
            <summary>Text nodes not coalesced as required by XPath</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="brettporter">Brett Porter</reporter>
                        <created>Tue, 25 Jan 2005 21:02:39 -0600</created>
                <updated>Sat, 8 Apr 2006 09:43:35 -0500</updated>
                    <resolved>Sat, 8 Apr 2006 09:43:35 -0500</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                <component>dom</component>
                <component>dom4j</component>
                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="29267" author="prb" created="Tue, 25 Jan 2005 21:24:10 -0600"  >&lt;p&gt;This looks like an issue with the DOM4J navigator with respect to 5.7 in the spec:&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;br/&gt;
5.7 Text Nodes&lt;br/&gt;
Character data is grouped into text nodes. As much character data as possible is grouped into each text node: a text node never has an immediately following or preceding sibling that is a text node. The string-value of a text node is the character data. A text node always has at least one character of data.&lt;br/&gt;
&amp;#8212;&lt;/p&gt;

&lt;p&gt;If you look at the DOM4J navigator around line 400:&lt;/p&gt;

&lt;p&gt;    private String getNodeStringValue(Node node)&lt;/p&gt;
    {
        return node.getStringValue();
    }

&lt;p&gt;A different algorithm would be:&lt;/p&gt;

&lt;p&gt;1) Is the node is a text or CDATA node?&lt;br/&gt;
2) If so, is the following node a text or CDATA node?  If not, return the original string.  If so, add the original string to a StringBuffer and append the string from this node.&lt;br/&gt;
3) Repeat until the following node is not a text or CDATA node.&lt;/p&gt;</comment>
                    <comment id="29274" author="bazzargh" created="Wed, 26 Jan 2005 05:47:05 -0600"  >&lt;p&gt;That solution won&apos;t work:&lt;/p&gt;

&lt;p&gt;&amp;lt;elem&amp;gt;&amp;lt;![CDATA&lt;span class=&quot;error&quot;&gt;&amp;#91;I repeat myself&amp;#93;&lt;/span&gt;]&amp;gt; repeatedly&amp;lt;/elem&amp;gt;&lt;/p&gt;

&lt;p&gt;string(/elem) would evaluate as:&lt;/p&gt;

&lt;p&gt;I repeat myself repeatedly repeatedly&lt;/p&gt;

&lt;p&gt;as the second text node is seen twice. In some navigators (eg XOM) things have been set up so that text nodes are coalesced on demand to resolve this issue. In others (eg DOM) you are expected to coalesce the document in advance if you want all xpaths to follow the spec.&lt;/p&gt;

&lt;p&gt;Theres a tradeoff in the DOM case between speed and correctness, the best approach may vary from implementation to implementation. In the case of dom4j I expect the XOM approach would work.&lt;/p&gt;</comment>
                    <comment id="29712" author="elharo" created="Wed, 9 Feb 2005 09:25:26 -0600"  >&lt;p&gt;I&apos;ve changed the summary because it felt misleading. I think there is a bug here, but the bug is not in the Pattern class, and does not revolve around the use or non-use of the Pattern.CDATA_SECTION_NODE constant. If someone could submit a test case, that would be helpful. &lt;/p&gt;</comment>
                    <comment id="29724" author="brettporter" created="Wed, 9 Feb 2005 19:20:11 -0600"  >&lt;p&gt;as much as I&apos;d like to submit a test case, I can&apos;t seem to replicate it under simpler conditions.&lt;/p&gt;

&lt;p&gt;is it possibly related to this?&lt;br/&gt;
&lt;a href=&quot;http://tinyurl.com/5c4l3&quot;&gt;http://tinyurl.com/5c4l3&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="30068" author="proyal" created="Sun, 20 Feb 2005 10:03:56 -0600"  >&lt;p&gt;the dom4j bug does appear to be referencing the same problem. &lt;/p&gt;</comment>
                    <comment id="31830" author="maartenc" created="Sun, 10 Apr 2005 14:49:04 -0500"  >&lt;p&gt;I&apos;ve changed the behaviour of the getStringValue() method on the org.dom4j.Text and org.dom4j.CDATA nodes to return the coalesced text.&lt;/p&gt;

&lt;p&gt;However, the text is now returned twice. Any idea how the dom4j navigator should be changed?&lt;/p&gt;

&lt;p&gt;regards,&lt;br/&gt;
Maarten&lt;/p&gt;</comment>
                    <comment id="53371" author="lukas" created="Tue, 13 Dec 2005 18:23:43 -0600"  >&lt;p&gt;Is there any chance that this is going to be picked up by someone any time soon? We are trying to prepare a Maven 1.1 release and AFAICT this is the only issue that keeps us from upgrading dom4j and jaxen due to a blocking issue with CDATA sections (see &lt;a href=&quot;http://jira.codehaus.org/browse/MAVEN-1345&quot; title=&quot;Upgrade dom4j&quot;&gt;&lt;del&gt;MAVEN-1345&lt;/del&gt;&lt;/a&gt;) . If this doesn&apos;t get fixed then Maven 1.1 will still ship with dom4j 1.4 and jaxen 1.0 &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                    <comment id="53380" author="bazzargh" created="Tue, 13 Dec 2005 20:09:47 -0600"  >&lt;p&gt;I had a look at this, I&apos;m not convinced about some of the report. The test for the dom4j bug over on sf.net looks like:&lt;br/&gt;
    public void testJaxen67() throws JaxenException&lt;br/&gt;
    {&lt;br/&gt;
        Navigator nav = getNavigator();&lt;br/&gt;
        String url = &quot;xml/jaxen67.xml&quot;;&lt;br/&gt;
        log(&quot;Document &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + url + &amp;quot;&amp;#93;&lt;/span&gt;&quot;);&lt;br/&gt;
        Object document = nav.getDocument(url);&lt;br/&gt;
        XPath contextpath = new BaseXPath(&quot;/&quot;, nav);&lt;br/&gt;
        log(&quot;Initial Context :: &quot; + contextpath);&lt;br/&gt;
        List list = contextpath.selectNodes(document);&lt;br/&gt;
        Iterator iter = list.iterator();&lt;br/&gt;
        while (iter.hasNext())&lt;/p&gt;
        {
            Object context = iter.next();
            assertCountXPath(1, context, &quot;a/b/text()&quot;);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;with jaxen67.xml containing the text:&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;a&amp;gt;&amp;lt;b&amp;gt;Water T &amp;amp; D-46816&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;&lt;/p&gt;

&lt;p&gt;This test passes. However the issue described further up in this bug above would require the same test with this text:&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;a&amp;gt;&amp;lt;b&amp;gt;Water T &amp;lt;[!CDATA&lt;span class=&quot;error&quot;&gt;&amp;#91;anything here will do&amp;#93;&lt;/span&gt;]&amp;gt; D-46816&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;&lt;br/&gt;
...which fails, because nodes in dom4j aren&apos;t normalized (as I commented above). In fact this test fails for everything but XOM. Elliotte, maybe you can comment on that?&lt;/p&gt;

&lt;p&gt;You could argue that jaxen should call document.normalize() for you (if you use the node() or text() functions - otherwise it doesn&apos;t affect the xpath) but in any case you can work around this problem by calling document.normalize() for yourself - its a method of Branch in dom4j.&lt;/p&gt;
</comment>
                    <comment id="53817" author="elharo" created="Tue, 20 Dec 2005 09:31:07 -0600"  >&lt;p&gt;The XPath data model requires text nodes to contain the maximum contiguous run of text. various XPath expressions that count child nodes depend on this behavior for correct evaluation. However most, perhaps all, models I&apos;m aware of including XOM, DOM, JDOM, and dom4j allow more than one contiguous Text object. (I considered prohibiting this in XOM, but was talked out of it.)&lt;/p&gt;

&lt;p&gt;Consequently, when writing a navigator it is necessary to account for this impedance mismatch between the models. XOM 1.1&apos;s built-in navigator goes the extra mile to make sure text nodes are counted correctly according to the XPath spec. None of the others do. &lt;/p&gt;

&lt;p&gt;However, I&apos;m not sure this has anything to do with the problem over in Maven. That seems to involve even non-contiguous CDATA sections. &lt;/p&gt;</comment>
                    <comment id="54002" author="lukas" created="Wed, 21 Dec 2005 23:55:28 -0600"  >&lt;p&gt;Let me just describe the exact problem that we are having in Maven:&lt;/p&gt;

&lt;p&gt;The jelly script that transforms the xml input into html output in the xdoc-plugin contains the following rule for text nodes:&lt;/p&gt;

&lt;p&gt;  &amp;lt;!-- CDATA and text nodes pass-thru --&amp;gt;&lt;br/&gt;
  &amp;lt;jsl:template match=&quot;text()&quot;&amp;gt;&amp;lt;x:expr select=&quot;.&quot;/&amp;gt;&amp;lt;/jsl:template&amp;gt;&lt;/p&gt;

&lt;p&gt;This transforms&lt;br/&gt;
  &amp;lt;p&amp;gt;a&amp;lt;![CDATA&lt;span class=&quot;error&quot;&gt;&amp;#91;whatever&amp;#93;&lt;/span&gt;]&amp;gt;b&amp;lt;/p&amp;gt;&lt;br/&gt;
into&lt;br/&gt;
  &amp;lt;p&amp;gt;ab&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;p&gt;Interestingly, by changing the jsl rule above into&lt;/p&gt;

&lt;p&gt;  &amp;lt;jsl:template match=&quot;text()&quot;&amp;gt;c&amp;lt;x:expr select=&quot;.&quot;/&amp;gt;d&amp;lt;/jsl:template&amp;gt;&lt;/p&gt;

&lt;p&gt;I get:&lt;/p&gt;

&lt;p&gt;  &amp;lt;p&amp;gt;cadcbd&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;p&gt;which shows that the CDATA section is not being picked up as a text node by the jelly script. This happens with dom4j-1.6.1 and jaxen-1.1-beta-8, everything works as expected with dom4j-1.4 and jaxen-1.0-FCS-full (and all other dependencies unchanged).&lt;/p&gt;
</comment>
                    <comment id="54003" author="bob" created="Thu, 22 Dec 2005 00:13:57 -0600"  >&lt;p&gt;It&apos;s been a while, but I think this was tracked to a bug in dom4j originally, worked around by jaxen, and subsequently fixed in dom4j.&lt;/p&gt;

&lt;p&gt;How that helps, no idea.&lt;/p&gt;
</comment>
                    <comment id="54017" author="elharo" created="Thu, 22 Dec 2005 05:26:03 -0600"  >&lt;p&gt;The test case is helpful. Let&apos;s see if I can reduce it to pure XPath so I can get the Jelly out of the way. Your input document looks like this:&lt;/p&gt;

&lt;p&gt;&amp;lt;p&amp;gt;a&amp;lt;![CDATA&lt;span class=&quot;error&quot;&gt;&amp;#91;whatever&amp;#93;&lt;/span&gt;]&amp;gt;b&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;p&gt;You then apply the XPath expression text() using the context node p, and get &quot;ab&quot; when you should get &quot;awhateverb&quot;. Does the same thing happen if you an absolute XPath such as /p/text() ?&lt;/p&gt;

</comment>
                    <comment id="54020" author="bazzargh" created="Thu, 22 Dec 2005 05:38:35 -0600"  >&lt;p&gt;I followed up on Bob&apos;s comment and looked for changes in the dom4j code. CDATA was parsed incorrectly in 1.5, reported here:&lt;br/&gt;
&lt;a href=&quot;http://sourceforge.net/tracker/index.php?func=detail&amp;amp;aid=926713&amp;amp;group_id=16035&amp;amp;atid=116035&quot;&gt;http://sourceforge.net/tracker/index.php?func=detail&amp;amp;aid=926713&amp;amp;group_id=16035&amp;amp;atid=116035&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;that led to the change in revision 1.49 of dom4j&apos;s SAXContentHandler:&lt;br/&gt;
&lt;a href=&quot;http://fisheye.cenqua.com/changelog/dom4j?cs=MAIN:maartenc:20040401065044&quot;&gt;http://fisheye.cenqua.com/changelog/dom4j?cs=MAIN:maartenc:20040401065044&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I noticed several things in here:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;CDATA sections will not appear unless dom4j gets lexical events (otherwise they are just character data)&lt;/li&gt;
	&lt;li&gt;some comments suggest that dom4j&apos;s internal parser does /not/ send lexical events.&lt;/li&gt;
	&lt;li&gt;dom4j have added a &apos;setMergeAdjacentText(boolean)&apos; method to SAXReader and SAXContentHandler which would supposedly allow you to get dom4j to behave correctly for xpaths.&lt;/li&gt;
	&lt;li&gt;... and its incorrect.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Specifically inside &apos;characters()&apos;, this code:&lt;br/&gt;
            } else if (insideCDATASection) {&lt;br/&gt;
                if (mergeAdjacentText &amp;amp;&amp;amp; textInTextBuffer) {
                    completeCurrentTextNode();
                }&lt;/p&gt;

&lt;p&gt;                cdataText.append(new String(ch, start, end));&lt;br/&gt;
            } else {&lt;/p&gt;

&lt;p&gt;... means that even if you&apos;ve asked it to merge adjacent text nodes, it does ahead and builds cdata nodes; which it then adds without checking the &apos;mergeAdjacentText&apos; flag:&lt;/p&gt;

&lt;p&gt;    public void endCDATA() throws SAXException {
        insideCDATASection = false;
        currentElement.addCDATA(cdataText.toString());
    }&lt;/p&gt;

&lt;p&gt;To my mind, these should read, respectively:&lt;br/&gt;
            } else if (insideCDATASection &amp;amp;&amp;amp; !mergeAdjacentText) {
                cdataText.append(new String(ch, start, end));
            } else {&lt;br/&gt;
...&lt;br/&gt;
    public void endCDATA() throws SAXException {&lt;br/&gt;
        // you&apos;d want this condition around the code in startCDATA too.&lt;br/&gt;
        if (!mergeAdjacentText) {
            insideCDATASection = false;
            currentElement.addCDATA(cdataText.toString());
        }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;unfortunately this doesn&apos;t seem to me to be the cause of your problem. You would see exactly the problem you describe if startCDATA() was being fired but endCDATA() wasn&apos;t, seems unlikely but worth pointing out.&lt;/p&gt;
</comment>
                    <comment id="54031" author="bazzargh" created="Thu, 22 Dec 2005 08:34:14 -0600"  >&lt;p&gt;I&apos;ve added the comment above to a related open dom4j issue:&lt;br/&gt;
&lt;a href=&quot;http://sourceforge.net/tracker/index.php?func=detail&amp;amp;aid=1116471&amp;amp;group_id=16035&amp;amp;atid=116035&quot;&gt;http://sourceforge.net/tracker/index.php?func=detail&amp;amp;aid=1116471&amp;amp;group_id=16035&amp;amp;atid=116035&lt;/a&gt;&lt;/p&gt;
</comment>
                    <comment id="54045" author="lukas" created="Thu, 22 Dec 2005 12:45:39 -0600"  >&lt;p&gt;Elliotte: exactly the same thing happens with an absolute XPath, the CDATA section is simply ignored by the template rule, plain text before and after it is correctly picked up.&lt;/p&gt;</comment>
                    <comment id="54050" author="elharo" created="Thu, 22 Dec 2005 13:23:17 -0600"  >&lt;p&gt;This test case passes using the dom4j navigator:&lt;/p&gt;

&lt;p&gt;    public void testCDATASectionsAreIncludedInTextNodes() throws JaxenException&lt;/p&gt;
    {
        Navigator nav = getNavigator();
        String url = &quot;xml/cdata.xml&quot;;
        log(&quot;Document [&quot; + url + &quot;]&quot;);
        Object document = nav.getDocument(url);
        XPath contextPath = new BaseXPath(&quot;/p/text()&quot;, nav);
        log(&quot;Initial Context :: &quot; + contextPath);
        List list = contextPath.selectNodes(document);
        assertEquals(&quot;whatever&quot;, StringFunction.evaluate(list.get(1), nav));
    }

&lt;p&gt;Here the file cdata.xml contains&lt;/p&gt;

&lt;p&gt;&amp;lt;p&amp;gt;a&amp;lt;![CDATA&lt;span class=&quot;error&quot;&gt;&amp;#91;whatever&amp;#93;&lt;/span&gt;]&amp;gt;b&amp;lt;/p&amp;gt;&lt;/p&gt;

&lt;p&gt;Thus I&apos;m not convinced the problem is what you think it is. Can you produce a simple self-contained test case without involving Jelly or Maven that manifests this bug? I have not been able to do that.&lt;/p&gt;</comment>
                    <comment id="54707" author="lukas" created="Mon, 2 Jan 2006 16:02:40 -0600"  >&lt;p&gt;Ok, I have buggered around with this for quite a while too now and I just can&apos;t seem to reproduce it with any simpler test case. All tests for dom4j and jelly involving CDATA sections pass successfully, the bug seems to manifest itself only in the final maven build. This makes me suspect some kind of binary incompatibility in project dependencies of maven and jelly. I have opened a ticket with jelly (&lt;a href=&quot;http://issues.apache.org/jira/browse/JELLY-226&quot;&gt;http://issues.apache.org/jira/browse/JELLY-226&lt;/a&gt;).&lt;br/&gt;
For the moment, I think we still have to stick with dom4j-1.4 (see &lt;a href=&quot;http://jira.codehaus.org/browse/MAVEN-1345&quot; title=&quot;Upgrade dom4j&quot;&gt;&lt;del&gt;MAVEN-1345&lt;/del&gt;&lt;/a&gt;). Thanks for all your comments anyway!&lt;/p&gt;</comment>
                    <comment id="61916" author="maartenc" created="Fri, 24 Mar 2006 16:10:51 -0600"  >&lt;p&gt;FYI: I&apos;ve updated SAXContentHandler in dom4j to act as suggested above.&lt;/p&gt;</comment>
                    <comment id="62708" author="lukas" created="Mon, 3 Apr 2006 19:06:37 -0500"  >&lt;p&gt;This seems to have solved our problem with CDATA sections in Maven, see my comments at &lt;a href=&quot;http://tinyurl.com/5c4l3&quot;&gt;http://tinyurl.com/5c4l3&lt;/a&gt; and &lt;a href=&quot;http://jira.codehaus.org/browse/MAVEN-1345&quot; title=&quot;Upgrade dom4j&quot;&gt;&lt;del&gt;MAVEN-1345&lt;/del&gt;&lt;/a&gt;. Thanks everyone!&lt;/p&gt;</comment>
                    <comment id="63130" author="elharo" created="Sat, 8 Apr 2006 09:43:35 -0500"  >&lt;p&gt;I&apos;m still not sure there was ever a bug in Jaxen here, but if there was it seems to be fixed now. More likely changes in dom4j or Jaxen fixed the bug. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 31 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>brettporter</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>lukas</customfieldvalue>
            <customfieldvalue>maartenc</customfieldvalue>
            <customfieldvalue>prb</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-66] EvaluateFunction throws exception with incorrect message</title>
                <link>http://jira.codehaus.org/browse/JAXEN-66</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In functions/ext/EvaluateFunction.java :&lt;/p&gt;

&lt;p&gt;throw new FunctionCallException( &quot;id() requires one argument&quot; );&lt;/p&gt;

&lt;p&gt;Shouldn&apos;t it be &quot;evaluate() requires ...&quot; ?&lt;/p&gt;</description>
                <environment></environment>
            <key id="20514">JAXEN-66</key>
            <summary>EvaluateFunction throws exception with incorrect message</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="nsushkin">Nicholas Sushkin</reporter>
                        <created>Tue, 25 Jan 2005 19:40:16 -0600</created>
                <updated>Wed, 26 Jan 2005 06:56:02 -0600</updated>
                    <resolved>Wed, 26 Jan 2005 06:56:02 -0600</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29276" author="elharo" created="Wed, 26 Jan 2005 06:55:55 -0600"  >&lt;p&gt;Yes. Fixed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 41 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>nsushkin</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-65] More open constructors for BaseXPath</title>
                <link>http://jira.codehaus.org/browse/JAXEN-65</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The current set of constructors of org.jaxen.BaseXPath don&apos;t allow a user assigned JaxenHandler or its XPathFactory. The constructors could be so rearranged this:&lt;/p&gt;

&lt;p&gt;    protected BaseXPath(String xpathExpr, Navigator navigator, JaxenHandler handler) throws JaxenException&lt;br/&gt;
   public BaseXPath(String xpathExpr, Navigator navigator) throws JaxenException&lt;br/&gt;
  public BaseXPath(String xpathExpr) throws JaxenException&lt;/p&gt;</description>
                <environment>jdk1.3, win32</environment>
            <key id="20369">JAXEN-65</key>
            <summary>More open constructors for BaseXPath</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="http://jira.codehaus.org/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="piran">Piran Montford</reporter>
                        <created>Mon, 17 Jan 2005 09:38:16 -0600</created>
                <updated>Mon, 3 Jul 2006 06:16:03 -0500</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="3600">1 hour</timeoriginalestimate>
                    <timeestimate seconds="3600">1 hour</timeestimate>
                                  <comments>
                    <comment id="29013" author="piran" created="Mon, 17 Jan 2005 09:40:13 -0600"  >&lt;p&gt;Here is a patch that will accomplish the above.&lt;/p&gt;</comment>
                    <comment id="31819" author="elharo" created="Sat, 9 Apr 2005 21:30:33 -0500"  >&lt;p&gt;Can you explain why this is important? I.e. what&apos;s the use case? I prefer not to expand the API without an obvious need. &lt;/p&gt;</comment>
                    <comment id="31870" author="piran" created="Mon, 11 Apr 2005 14:07:11 -0500"  >&lt;p&gt;I use Jaxen in Jiffie, to traverse Internet Explorer&apos;s object model: &amp;lt;&lt;a href=&quot;http://jiffie.sourceforge.net&quot;&gt;http://jiffie.sourceforge.net&lt;/a&gt;&amp;gt;. I wish to set my own JaxenHandler, to use my own XPathFactory, because there are optimisations we can do on expresions. For example, //INPUT&lt;span class=&quot;error&quot;&gt;&amp;#91;@name=&amp;quot;password&amp;quot;&amp;#93;&lt;/span&gt; might take &amp;gt;30 seconds instead of &amp;lt;1 sec with the optimisation.&lt;/p&gt;

&lt;p&gt;I have an interim release that uses this optimisation (which people are using while awaiting a new Jaxen release): &amp;lt;&lt;a href=&quot;http://www.onwhichsubject.com/jiffie/&quot;&gt;http://www.onwhichsubject.com/jiffie/&lt;/a&gt;&amp;gt;.&lt;/p&gt;

&lt;p&gt;My JiffieXPath constructor wants to look like this:&lt;/p&gt;

&lt;p&gt;   public JiffieXPath (String xpathExpr)&lt;br/&gt;
      throws JaxenException&lt;/p&gt;
   {
      super(xpathExpr, DocumentNavigator.getInstance(), createJiffieHandler());
   }

&lt;p&gt;   private static JaxenHandler createJiffieHandler ()&lt;/p&gt;
   {
      JaxenHandler handler = new JaxenHandler();
      handler.setXPathFactory(new JiffieXPathFactory());
      return handler;
   }

&lt;p&gt;This patch cleans up the pre-existing constructors, allows me to use my own JaxenHandler, and is currently the only way to set my own XPathFactory and still extend BaseXPath (which is the recommended base class).&lt;/p&gt;</comment>
                    <comment id="46723" author="elharo" created="Tue, 20 Sep 2005 05:53:56 -0500"  >&lt;p&gt;The only thing XPathFactory appears to do is to create XPathReaders. You can change the class of the XPathReader created by changing the system property org.saxpath.driver. Does this help? If not, why not? I suspect it doesn&apos;t help because what you really need to change is the JaxenHandler, not the factory; but please confirm (or deny) that. &lt;/p&gt;

&lt;p&gt;I&apos;m still struggling here because &lt;/p&gt;

&lt;p&gt;A) If I were starting from scratch I would not have designed anything remotely like how Jaxen is currently organized, and I&apos;m not sure I understand exactly how jaxen is designed and expects to be used here.&lt;/p&gt;

&lt;p&gt;B) I don&apos;t have the full use case from you yet. Without seeing all the code, I can&apos;t really see why you want to set your own JaxenHandler or determine whether that&apos;s a sensible thing to do or not. &lt;/p&gt;

&lt;p&gt;For instance, what&apos;s the  optimization you want to do on //INPUT&lt;span class=&quot;error&quot;&gt;&amp;#91;@name=&amp;quot;password&amp;quot;&amp;#93;&lt;/span&gt; ? &lt;br/&gt;
What methods in which classes do you need to override to do this, and how would you change them?&lt;/p&gt;</comment>
                    <comment id="68812" author="elharo" created="Mon, 3 Jul 2006 06:16:03 -0500"  >&lt;p&gt;Pushing out to 1.2 since I still don;t understand this, it doesn&apos;t seem critical, and I want to get 1.1 out this year.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13828" name="patch.txt" size="2476" author="piran" created="Mon, 17 Jan 2005 09:40:13 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>piran</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-64] org.jaxen.jdom.DocumentNavigator check for XPathNamespace, Attribute and others</title>
                <link>http://jira.codehaus.org/browse/JAXEN-64</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Class org.jaxen.jdom.DocumentNavigator: In function Object getDocumentNode(Object contextNode), if contextNode is an instance of Text, ProcessingInstruction or any other class different from Element or Document it throws a ClassCastException. I think it should check if contextNode is any of the possible classes (Document, XPathNamespace, Element, Attribute, Text, ProcessingInstruction or Comment).&lt;/p&gt;</description>
                <environment>jdom beta 8</environment>
            <key id="20367">JAXEN-64</key>
            <summary>org.jaxen.jdom.DocumentNavigator check for XPathNamespace, Attribute and others</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="scabre">Sergi Cabre</reporter>
                        <created>Mon, 17 Jan 2005 06:29:38 -0600</created>
                <updated>Sun, 20 Feb 2005 11:45:50 -0600</updated>
                                    <version>1.1</version>
                                <fixVersion>1.2</fixVersion>
                                <component>jdom</component>
                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="29685" author="elharo" created="Tue, 8 Feb 2005 15:18:26 -0600"  >&lt;p&gt;Can you provide a test case that demonstrates the bug in the ussual way; i.e. by invoking selectNodes on a JDOM document and without directly calling this method? My initial tests to contrive such a case failed. It may be that Jaxen never passes the wrong type of object to this method. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>scabre</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-63] generated build.xml should not be in CVS</title>
                <link>http://jira.codehaus.org/browse/JAXEN-63</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I see from a comment that the build.xml file is &quot;generated by maven from project.xml version 1.1-beta-3&quot;. In general, generated files should not be under source code control; only the actual source files. &lt;/p&gt;</description>
                <environment></environment>
            <key id="20333">JAXEN-63</key>
            <summary>generated build.xml should not be in CVS</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 13 Jan 2005 16:04:47 -0600</created>
                <updated>Wed, 23 Mar 2005 08:25:13 -0600</updated>
                    <resolved>Wed, 23 Mar 2005 08:25:13 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28905" author="proyal" created="Thu, 13 Jan 2005 16:09:32 -0600"  >&lt;p&gt;Historically, this was created for GUMP. Unsure if GUMP can build directly from Maven now though.&lt;/p&gt;</comment>
                    <comment id="28940" author="bazzargh" created="Fri, 14 Jan 2005 06:30:08 -0600"  >&lt;p&gt;It can now build from maven. See: &lt;a href=&quot;http://gump.apache.org/metadata/builder.html#maven&quot;&gt;http://gump.apache.org/metadata/builder.html#maven&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Replacing the ant tag in our gump.xml with:&lt;br/&gt;
&amp;lt;maven/&amp;gt;&lt;/p&gt;

&lt;p&gt;should do it.&lt;/p&gt;</comment>
                    <comment id="29071" author="bazzargh" created="Wed, 19 Jan 2005 10:47:53 -0600"  >&lt;p&gt;I&apos;ve contacted the gump people...more news when I get it.&lt;/p&gt;</comment>
                    <comment id="30069" author="proyal" created="Sun, 20 Feb 2005 10:05:56 -0600"  >&lt;p&gt;any news from the gump folk?&lt;/p&gt;</comment>
                    <comment id="31280" author="elharo" created="Wed, 23 Mar 2005 08:25:13 -0600"  >&lt;p&gt;I&apos;ve removed build.xml from CVS. I&apos;m not sure where gump.xml is; maybe in Gump, not here? In any case, this change will probably break Gump temporarily. The Gump folks will holler, and we can tell them to use Maven instead; and that should be that. If not, well. we can always regenerate build.xml and check it back in. However, I intend to do some hacking on project.xml this week so I wanted to get this out of the way first.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 33 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-62] Jaxen returns lists containing nodes and non-nodes</title>
                <link>http://jira.codehaus.org/browse/JAXEN-62</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Consider an expression such as &lt;/p&gt;

&lt;p&gt;count(//&lt;b&gt;) | //&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This is a union expression, production 18. Section 3.3 of the XPath 1.0 spec states  &quot;The | operator computes the union of its operands, which must be node-sets. Predicates are used to filter expressions in the same way that they are used in location paths. It is an error if the expression to be filtered does not evaluate to a node-set.&quot; In other words, Jaxen should throw an exception when encountering such an expression. Instead it returns a list containing the matched nodes and a Double object.&lt;/p&gt;

&lt;p&gt;To prove it try something like&lt;/p&gt;

&lt;p&gt;java JDOMDemo &lt;a href=&quot;http://www.cafeconleche.org/&quot;&gt;http://www.cafeconleche.org/&lt;/a&gt; &quot;/* | count(//*)&quot;&lt;/p&gt;

&lt;p&gt;Document :: &lt;a href=&quot;http://www.cafeconleche.org/&quot;&gt;http://www.cafeconleche.org/&lt;/a&gt;&lt;br/&gt;
   XPath :: /* | count(//*)&lt;/p&gt;

&lt;p&gt;Results&lt;br/&gt;
----------------------------------&lt;br/&gt;
[Element: &amp;lt;html &lt;span class=&quot;error&quot;&gt;&amp;#91;Namespace: http://www.w3.org/1999/xhtml&amp;#93;&lt;/span&gt;/&amp;gt;]&lt;br/&gt;
606.0&lt;/p&gt;

&lt;p&gt;However, I&apos;ve also seen this bug in my own XOM binding and have no reason to believe it is specific to any one object model.&lt;/p&gt;</description>
                <environment></environment>
            <key id="20328">JAXEN-62</key>
            <summary>Jaxen returns lists containing nodes and non-nodes</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Thu, 13 Jan 2005 11:34:01 -0600</created>
                <updated>Tue, 8 Feb 2005 15:08:33 -0600</updated>
                    <resolved>Tue, 8 Feb 2005 15:08:33 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29683" author="elharo" created="Tue, 8 Feb 2005 15:08:33 -0600"  >&lt;p&gt;Appears to have been fixed as a side-effect of fixing 4 | 5&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-61] Jaxen counts root node on ancestor axis</title>
                <link>http://jira.codehaus.org/browse/JAXEN-61</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;When evaluating an XPath expression such as ancestor::* Jaxen appears to return the root node as well as the root element. It should not. the * node-test only matches on the prinicple node type, which is element. the root node should not be matched. To reproduce try &lt;/p&gt;

&lt;p&gt;JDOMDemo &lt;a href=&quot;http://www.cafeconleche.org/&quot;&gt;http://www.cafeconleche.org/&lt;/a&gt; count(/&lt;b&gt;/ancestor::&lt;/b&gt;)&lt;/p&gt;

&lt;p&gt;Document :: &lt;a href=&quot;http://www.cafeconleche.org/&quot;&gt;http://www.cafeconleche.org/&lt;/a&gt;&lt;br/&gt;
   XPath :: count(/&lt;b&gt;/ancestor::&lt;/b&gt;)&lt;/p&gt;

&lt;p&gt;Results&lt;br/&gt;
----------------------------------&lt;br/&gt;
1.0&lt;/p&gt;

&lt;p&gt;The output should be 0, not 1.&lt;/p&gt;</description>
                <environment></environment>
            <key id="20264">JAXEN-61</key>
            <summary>Jaxen counts root node on ancestor axis</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 10 Jan 2005 16:05:43 -0600</created>
                <updated>Thu, 13 Jan 2005 20:41:35 -0600</updated>
                    <resolved>Thu, 13 Jan 2005 20:41:35 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28831" author="bazzargh" created="Tue, 11 Jan 2005 06:19:30 -0600"  >&lt;p&gt;I thought this had been fixed, I remembered spotting incorrect unit tests a while back... I see I have the tests in the zip file attached to jaxen-31. Below is the relevant bit, from jaxen/xml/test/tests.xml&lt;/p&gt;

&lt;p&gt;    I believe these counts are wrong. descendant-or-self::* shouldn&apos;t count the document node!&lt;br/&gt;
      &amp;lt;test select=&quot;descendant-or-self::*&quot; count=&quot;20&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;test select=&quot;descendant::*&quot; count=&quot;19&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;test select=&quot;/descendant::*&quot; count=&quot;19&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;test select=&quot;/descendant-or-self::*&quot; count=&quot;20&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;      these tests match the spec.&lt;br/&gt;
        &amp;lt;test select=&quot;descendant-or-self::*&quot; count=&quot;19&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;test select=&quot;descendant::*&quot; count=&quot;19&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;test select=&quot;/descendant::*&quot; count=&quot;19&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;test select=&quot;web-app/descendant-or-self::*&quot; count=&quot;19&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;test select=&quot;web-app/descendant::*&quot; count=&quot;18&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;test select=&quot;/web-app/descendant::*&quot; count=&quot;18&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;There was no fix in that zip, unless its just to the jdom navigator - the problem is repeated across the navigators. TODO: there are more unit tests changed in that version. need to make sure they&apos;ve all been filed as bugs.&lt;/p&gt;</comment>
                    <comment id="28869" author="elharo" created="Wed, 12 Jan 2005 05:57:08 -0600"  >&lt;p&gt;On a hunch I tried it with the parent axis as well. The bug appears there too. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 43 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-60] Minimal JAR file</title>
                <link>http://jira.codehaus.org/browse/JAXEN-60</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The build.xml file should have a target for a minimal jar file without specific object model support; e.g.&lt;/p&gt;

&lt;p&gt; &amp;lt;target name=&quot;minimal&quot; description=&quot;o Minimal Jar&quot; depends=&quot;compile&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;jar jarfile=&quot;target/${final.name}-min.jar&quot; excludes=&quot;*&lt;b&gt;/package.html org/jaxen/xom/&lt;/b&gt;* org/jaxen/jdom/** org/jaxen/dom4j/** org/jaxen/javabean/** org/jaxen/dom/**&quot; basedir=&quot;${classesdir}&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;/jar&amp;gt;&lt;br/&gt;
  &amp;lt;/target&amp;gt;&lt;/p&gt;</description>
                <environment>All</environment>
            <key id="20263">JAXEN-60</key>
            <summary>Minimal JAR file</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="proyal">peter royal</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Mon, 10 Jan 2005 16:03:04 -0600</created>
                <updated>Mon, 3 Jul 2006 06:40:07 -0500</updated>
                                    <version>1.2</version>
                                <fixVersion>1.2</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="30070" author="proyal" created="Sun, 20 Feb 2005 10:07:19 -0600"  >&lt;p&gt;i am seriously considering scrapping the maven build and going back to ant, since its simple and i understand it well.&lt;/p&gt;

&lt;p&gt;a side effect will likely be that the website gets flipped over to being a confluence-based site.&lt;/p&gt;</comment>
                    <comment id="68817" author="elharo" created="Mon, 3 Jul 2006 06:40:07 -0500"  >&lt;p&gt;As much as I&apos;d like this, I can;t figure out how to make it happen in Maven 1. In Maven 2, it looks a lot simpler. So unless someone else steps forward to fix this, I&apos;m going to defer this to 1.2, when hopefully we can move to Maven 2. Possibly we could even do a 1.1.1 release that does nothing but move the build system to maven 2 and add a minimal JAR. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-59] Xerces is out of date</title>
                <link>http://jira.codehaus.org/browse/JAXEN-59</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I notice the build file for Jaxen 1.1 grabs Xerces 2.0.2 out of Maven. Xerces 2.0.2 is years old, out-of-date, and buggy. The current version is 2.6.2, and has fixed too many bugs to list. Please upgrade the Xerces version. &lt;/p&gt;</description>
                <environment>All</environment>
            <key id="20236">JAXEN-59</key>
            <summary>Xerces is out of date</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="elharo">Elliotte Rusty Harold</reporter>
                        <created>Sat, 8 Jan 2005 14:12:36 -0600</created>
                <updated>Sun, 9 Jan 2005 09:58:48 -0600</updated>
                    <resolved>Sun, 9 Jan 2005 09:58:48 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28771" author="hoju" created="Sun, 9 Jan 2005 01:57:05 -0600"  >&lt;p&gt;I&apos;ve resolved this issue as well as updated dom4j and xom to the latest in the maven repository.  I really wish someone would keep the repository better updated.  xom and, especially, xml-apis are out of date.&lt;/p&gt;

&lt;p&gt;I don&apos;t have administrative rights for Jaxen in Jira, otherwise I&apos;d close this issue as resolved.&lt;/p&gt;

&lt;p&gt;Jake&lt;/p&gt;</comment>
                    <comment id="28774" author="proyal" created="Sun, 9 Jan 2005 09:58:48 -0600"  >&lt;p&gt;resolved. jacob added to jaxen group too &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 43 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-58] NullPointer Exception thrown when evaluating wildcard followed by &quot;following&quot; or &quot;preceding&quot; axis</title>
                <link>http://jira.codehaus.org/browse/JAXEN-58</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The following xpath evaluation will throw NullPointerException:&lt;/p&gt;

&lt;p&gt;//preceding::x&lt;br/&gt;
//following::x&lt;br/&gt;
/descendant::*/preceding::x&lt;br/&gt;
/descendant::node()/preceding::x&lt;/p&gt;

&lt;p&gt;regardless the source XML&lt;/p&gt;

&lt;p&gt;code:&lt;br/&gt;
    Document node = saxReader.read(&quot;&amp;lt;xml file&amp;gt;&quot;);&lt;br/&gt;
    node.selectNodes(&quot;/descendant::*/preceding::x&quot;);&lt;/p&gt;

&lt;p&gt;Exception:&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.jaxen.util.PrecedingSiblingAxisIterator.init(PrecedingSiblingAxisIterator.java:108)&lt;br/&gt;
	at org.jaxen.util.PrecedingSiblingAxisIterator.&amp;lt;init&amp;gt;(PrecedingSiblingAxisIterator.java:90)&lt;br/&gt;
	at org.jaxen.DefaultNavigator.getPrecedingSiblingAxisIterator(DefaultNavigator.java:138)&lt;br/&gt;
	at org.jaxen.util.PrecedingAxisIterator.&amp;lt;init&amp;gt;(PrecedingAxisIterator.java:129)&lt;br/&gt;
	at org.jaxen.DefaultNavigator.getPrecedingAxisIterator(DefaultNavigator.java:156)&lt;br/&gt;
	at org.jaxen.expr.iter.IterablePrecedingAxis.iterator(IterablePrecedingAxis.java:82)&lt;br/&gt;
	at org.jaxen.expr.DefaultStep.axisIterator(DefaultStep.java:139)&lt;br/&gt;
	at org.jaxen.expr.DefaultLocationPath.evaluate(DefaultLocationPath.java:188)&lt;br/&gt;
	at org.jaxen.expr.DefaultAbsoluteLocationPath.evaluate(DefaultAbsoluteLocationPath.java:126)&lt;br/&gt;
	at org.jaxen.expr.DefaultXPathExpr.asList(DefaultXPathExpr.java:107)&lt;br/&gt;
	at org.jaxen.BaseXPath.selectNodesForContext(BaseXPath.java:716)&lt;br/&gt;
	at org.jaxen.BaseXPath.selectNodes(BaseXPath.java:239)&lt;br/&gt;
	at org.dom4j.xpath.DefaultXPath.selectNodes(DefaultXPath.java:132)&lt;br/&gt;
	at org.dom4j.tree.AbstractNode.selectNodes(AbstractNode.java:164)&lt;/p&gt;</description>
                <environment>Windows XP Professional</environment>
            <key id="19513">JAXEN-58</key>
            <summary>NullPointer Exception thrown when evaluating wildcard followed by &quot;following&quot; or &quot;preceding&quot; axis</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="rayman_young">Yang Lei</reporter>
                        <created>Tue, 30 Nov 2004 23:54:00 -0600</created>
                <updated>Tue, 18 Jan 2005 21:19:41 -0600</updated>
                    <resolved>Tue, 18 Jan 2005 21:19:41 -0600</resolved>
                            <version>1.0</version>
                <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28919" author="elharo" created="Thu, 13 Jan 2005 20:50:47 -0600"  >&lt;p&gt;I cannot reproduce this. Can you please provide a sample document and a sample program that demonstrates the bug? &lt;/p&gt;</comment>
                    <comment id="29054" author="bazzargh" created="Tue, 18 Jan 2005 21:19:41 -0600"  >&lt;p&gt;I&apos;ve added a test for this issue, and I&apos;ve also changed the code so we never get null iterators. While I couldn&apos;t reproduce this issue with the test you describe, the patch fixes a bunch of similar problems.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>rayman_young</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-57] patch to support jdom 1.0</title>
                <link>http://jira.codehaus.org/browse/JAXEN-57</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I just noticed that in jdom 1.0 they ship a patched version of jaxen. The patch is below:&lt;/p&gt;

&lt;p&gt;The Jaxen libraries included here are based on Jaxen 1.0-FCS.  Jaxen 1.0-FCS&lt;br/&gt;
was written against JDOM Beta 9, and for Jaxen to support JDOM Beta 10+, we&lt;br/&gt;
had to make the following change to org.jaxen.jdom.DocumentNavigator.  The&lt;br/&gt;
jaxen-jdom.jar provided here includes this change, and it&apos;s the only&lt;br/&gt;
difference between the JARs here and the Jaxen 1.0-FCS JARs.&lt;/p&gt;


&lt;p&gt;&amp;#8212; DocumentNavigator.java.orig Tue Aug 31 16:23:32 2004&lt;br/&gt;
+++ DocumentNavigator.java      Fri Sep 03 00:08:37 2004&lt;br/&gt;
@@ -72,6 +72,8 @@&lt;/p&gt;

&lt;p&gt; import org.jdom.Document;&lt;br/&gt;
 import org.jdom.Element;&lt;br/&gt;
+import org.jdom.Parent;&lt;br/&gt;
+import org.jdom.Content;&lt;br/&gt;
 import org.jdom.Comment;&lt;br/&gt;
 import org.jdom.Text;&lt;br/&gt;
 import org.jdom.Attribute;&lt;br/&gt;
@@ -231,7 +233,7 @@&lt;br/&gt;
                     nsMap.put( ns.getPrefix(), new XPathNamespace(elem, ns) );&lt;br/&gt;
             }&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;current = current.getParent();&lt;br/&gt;
+            current = current.getParentElement();&lt;br/&gt;
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         nsMap.put( &quot;xml&quot;, new XPathNamespace(elem, Namespace.XML_NAMESPACE) );&lt;br/&gt;
@@ -247,17 +249,9 @@&lt;/p&gt;
         {
             parent = contextNode;
         }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;else if ( contextNode instanceof Element )&lt;br/&gt;
+        else if ( contextNode instanceof Content )&lt;br/&gt;
         {&lt;/li&gt;
	&lt;li&gt;parent = ((Element)contextNode).getParent();&lt;br/&gt;
-&lt;/li&gt;
	&lt;li&gt;if ( parent == null )&lt;/li&gt;
	&lt;li&gt;{&lt;/li&gt;
	&lt;li&gt;if ( ((Element)contextNode).isRootElement() )&lt;/li&gt;
	&lt;li&gt;{
-                    parent = ((Element)contextNode).getDocument();
-                }&lt;/li&gt;
	&lt;li&gt;}&lt;br/&gt;
+            parent = ((Content)contextNode).getParent();&lt;br/&gt;
         }&lt;br/&gt;
         else if ( contextNode instanceof Attribute )&lt;br/&gt;
         {&lt;br/&gt;
@@ -267,18 +261,6 @@
         {
             parent = ((XPathNamespace)contextNode).getJDOMElement();
         }&lt;/li&gt;
	&lt;li&gt;else if ( contextNode instanceof ProcessingInstruction )&lt;/li&gt;
	&lt;li&gt;{
-            parent = ((ProcessingInstruction)contextNode).getParent();
-        }&lt;/li&gt;
	&lt;li&gt;else if ( contextNode instanceof Comment )&lt;/li&gt;
	&lt;li&gt;{
-            parent = ((Comment)contextNode).getParent();
-        }&lt;/li&gt;
	&lt;li&gt;else if ( contextNode instanceof Text )&lt;/li&gt;
	&lt;li&gt;{
-            parent = ((Text)contextNode).getParent();
-        }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         if ( parent != null )&lt;br/&gt;
         {&lt;br/&gt;
@@ -456,9 +438,9 @@&lt;/p&gt;
         {
             element = (Element) context;
         }
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;else if ( context instanceof Text )&lt;br/&gt;
+        else if ( context instanceof Content )
         {
-            element = ((Text)context).getParent();
+            element = ((Content)context).getParentElement();
         }
&lt;p&gt;         else if ( context instanceof Attribute )&lt;br/&gt;
         {&lt;br/&gt;
@@ -467,14 +449,6 @@&lt;br/&gt;
         else if ( context instanceof XPathNamespace )&lt;/p&gt;
         {
             element = ((XPathNamespace)context).getJDOMElement();
-        }&lt;/li&gt;
	&lt;li&gt;else if ( context instanceof Comment )&lt;/li&gt;
	&lt;li&gt;{
-            element = ((Comment)context).getParent();
-        }&lt;/li&gt;
	&lt;li&gt;else if ( context instanceof ProcessingInstruction )&lt;/li&gt;
	&lt;li&gt;{
-            element = ((ProcessingInstruction)context).getParent();
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         if ( element != null )&lt;/p&gt;</description>
                <environment></environment>
            <key id="19178">JAXEN-57</key>
            <summary>patch to support jdom 1.0</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 17 Nov 2004 07:23:38 -0600</created>
                <updated>Sat, 9 Apr 2005 18:02:30 -0500</updated>
                    <resolved>Sat, 9 Apr 2005 18:02:30 -0500</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                <component>jdom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28363" author="hoju" created="Tue, 28 Dec 2004 01:40:02 -0600"  >&lt;p&gt;I applied the changes in Brian&apos;s diff by hand to the latest 1.1 code.  I&apos;m not 100% positive that I did the right thing because the latest code actually seems to compile and pass tests (it&apos;s just &quot;maven test&quot;, right?) against jdom 1.0 anyway (I updated project.xml to point to the latest jar).  My changes compile and pass tests as well.  So, for what its worth, here it is.&lt;/p&gt;

&lt;p&gt;Jake&lt;/p&gt;</comment>
                    <comment id="30071" author="proyal" created="Sun, 20 Feb 2005 10:08:38 -0600"  >&lt;p&gt;isn&apos;t jdom 1.0 the one with the bug that affects jaxen that we really need a 1.1 from them? (if so, we should push this out to 1.2 perhaps?&lt;/p&gt;</comment>
                    <comment id="30089" author="elharo" created="Sun, 20 Feb 2005 14:40:40 -0600"  >&lt;p&gt;I&apos;m not sure. We may be confusing two different bugs here; one ours, one theirs. Then again maybe not.&lt;/p&gt;

&lt;p&gt;What we really need to do is at least privately (if not yet in CVS) update JDOM to 1.0; find the breakage in JDOM; write a simple test case that clearly demonstrates the bug; post it on the jdom-interest mailing list; write a fix for the JDOM bug; and then bug Jason to release JDOM 1.0.1.&lt;/p&gt;</comment>
                    <comment id="31815" author="elharo" created="Sat, 9 Apr 2005 18:02:30 -0500"  >&lt;p&gt;I&apos;ve looked at this and as near as I can tell, the current version of Jaxen does work JDOM 1.0, at least as well as it ever has. There are still a couple of JDOM tests breaking, but this patch wouldn&apos;t fix those. Possibly this patch would be marginally more efficient, but I&apos;m not even sure of that. &lt;/p&gt;

&lt;p&gt;I&apos;m closing this. If someone can provide a verifiable test that demonstrates an incompatibility between jaxen 1.1 and JDOM 1.0, we can always reopen it. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13692" name="jdom.DocumentNavigator.java.patch" size="3354" author="hoju" created="Tue, 28 Dec 2004 01:40:02 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 31 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-56] Sample substring calls from XPath spec fail</title>
                <link>http://jira.codehaus.org/browse/JAXEN-56</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/xpath#function-substring&quot;&gt;http://www.w3.org/TR/xpath#function-substring&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;substring(&quot;12345&quot;, 0, 3) returns &quot;12&quot;&lt;/li&gt;
	&lt;li&gt;substring(&quot;12345&quot;, -42, 1 div 0) returns &quot;12345&quot;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Executing these calls via Jaxen yields the following errors&lt;/p&gt;

&lt;p&gt;substring(&apos;12345&apos;, -42, 1 div 0): String index out of range: -43&lt;br/&gt;
substring(&apos;12345&apos;, 0, 3): String index out of range: -1&lt;/p&gt;</description>
                <environment>JDK 1.5, XP</environment>
            <key id="18872">JAXEN-56</key>
            <summary>Sample substring calls from XPath spec fail</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="ryancox">Ryan Cox</reporter>
                        <created>Mon, 1 Nov 2004 15:33:04 -0600</created>
                <updated>Thu, 13 Jan 2005 21:23:02 -0600</updated>
                    <resolved>Thu, 13 Jan 2005 21:23:02 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="26478" author="bazzargh" created="Tue, 16 Nov 2004 12:04:08 -0600"  >&lt;p&gt;neither of these give errors in the nightlies, there&apos;s test cases:&lt;/p&gt;

&lt;p&gt;      &amp;lt;valueOf select=&quot;substring(&apos;12345&apos;, 0, 3)&quot;&amp;gt;123&amp;lt;/valueOf&amp;gt;&lt;br/&gt;
      &amp;lt;valueOf select=&quot;substring(&apos;12345&apos;, -42, 1 div 0)&quot;&amp;gt;12345&amp;lt;/valueOf&amp;gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;http://cvs.jaxen.codehaus.org/jaxen/xml/test/tests.xml?rev=1.73&amp;amp;view=auto&quot;&gt;http://cvs.jaxen.codehaus.org/jaxen/xml/test/tests.xml?rev=1.73&amp;amp;view=auto&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;However as you can see above these aren&apos;t quite correct with respect to the spec. Below is my code for Functions.substring() (part of the zip attached to &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-31&quot; title=&quot;if jaxen stopped using lists it would be 37x faster&quot;&gt;JAXEN-31&lt;/a&gt;) which I believe matches the spec:&lt;/p&gt;

&lt;p&gt;    public static String substring(String s1, double dpos, double dlen)&lt;br/&gt;
    {&lt;br/&gt;
        dpos = round(dpos); // see below&lt;br/&gt;
        dlen = round(dlen);&lt;br/&gt;
        if (Double.isNaN(dpos + dlen)) {
            return &quot;&quot;;
        }&lt;br/&gt;
        int ipos = ((int) dpos) - 1;&lt;br/&gt;
        int imax = ipos + (int) dlen;&lt;br/&gt;
        if (ipos &amp;lt; 0)&lt;br/&gt;
        {
            ipos = 0;
        }&lt;br/&gt;
        if (imax &amp;gt; s1.length())&lt;br/&gt;
        {
            imax = s1.length();
        }&lt;br/&gt;
        if (ipos &amp;gt;= imax)&lt;br/&gt;
        {            return &quot;&quot;;        } }&lt;br/&gt;
        return s1.substring(ipos, imax);&lt;br/&gt;
    }&lt;br/&gt;
    public static double round(double value)&lt;br/&gt;
    {&lt;br/&gt;
        if (Double.isNaN(value)&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; Double.isInfinite(value)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; value == 0.0&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; value == -0.0)
        {
            return value;
        }
&lt;p&gt;        return Math.round(value);&lt;br/&gt;
    }&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;since there&apos;s still a spec compliance problem here I&apos;ll leave this open for now.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 51 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>ryancox</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-55] [ 864320 ] Bad order with selectNodes //something</title>
                <link>http://jira.codehaus.org/browse/JAXEN-55</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;According the documentation of BaseXPath.selectNodes, &lt;br/&gt;
&quot;nodes will be returned in document-order&quot; unless I&apos;m &lt;br/&gt;
&quot;using XPath expressions involving the union operator&quot;. &lt;br/&gt;
But it seems that //somthing expressions return the result &lt;br/&gt;
not in document order. E.g for this XML:&lt;/p&gt;

&lt;p&gt;&amp;lt;a&amp;gt;&lt;br/&gt;
&amp;lt;x&amp;gt;1&amp;lt;/x&amp;gt;&lt;br/&gt;
&amp;lt;b&amp;gt;&lt;br/&gt;
&amp;lt;x&amp;gt;2&amp;lt;/x&amp;gt;&lt;br/&gt;
&amp;lt;x&amp;gt;3&amp;lt;/x&amp;gt;&lt;br/&gt;
&amp;lt;/b&amp;gt;&lt;br/&gt;
&amp;lt;x&amp;gt;4&amp;lt;/x&amp;gt;&lt;br/&gt;
&amp;lt;/a&amp;gt;&lt;/p&gt;

&lt;p&gt;XPath expression //x will return the nodes in order 1, 4, &lt;br/&gt;
2, 3.&lt;/p&gt;

&lt;p&gt;I have tried it with both 1.0 FCS and the 1.1 beta&lt;/p&gt;</description>
                <environment></environment>
            <key id="17823">JAXEN-55</key>
            <summary>[ 864320 ] Bad order with selectNodes //something</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bazzargh">Brian Ewins</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:38:31 -0500</created>
                <updated>Sat, 2 Apr 2005 23:38:48 -0600</updated>
                    <resolved>Sat, 2 Apr 2005 23:38:48 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>2</votes>
                                                    <comments>
                    <comment id="28159" author="mguillem" created="Fri, 17 Dec 2004 17:06:37 -0600"  >&lt;p&gt;test to illustrate this:&lt;/p&gt;

&lt;p&gt;  &amp;lt;document url=&quot;xml/moreover.xml&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;context select=&quot;/&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;valueOf select=&quot;(//*)&lt;span class=&quot;error&quot;&gt;&amp;#91;5&amp;#93;&lt;/span&gt;&quot;&amp;gt;StockAccess&amp;lt;/valueOf&amp;gt;&lt;br/&gt;
    &amp;lt;/context&amp;gt;&lt;br/&gt;
  &amp;lt;/document&amp;gt;&lt;/p&gt;</comment>
                    <comment id="28920" author="bob" created="Thu, 13 Jan 2005 21:33:46 -0600"  >&lt;p&gt;It was a bad choice in implementation, but easily corrected.&lt;/p&gt;

&lt;p&gt;A path involving // is a full walk of the tree, and unfortunately, we picked breadth-first instead of depth-first.  &lt;/p&gt;

&lt;p&gt;I think it&apos;s one change of how we push nodes onto the walk stack in one method.  Correction of it is left as an exercise to the reader.&lt;/p&gt;</comment>
                    <comment id="28990" author="elharo" created="Sun, 16 Jan 2005 10:14:59 -0600"  >&lt;p&gt;It&apos;s certainly not obvious to me how to fix this. If anyone sees, please do. After some single stepping with a debugger, I have determined the following:&lt;/p&gt;

&lt;p&gt;// returns the nodes in the correct order. That is /descendant-or-self::node() returns all nodes in the document in document order as expected. It appears that the DescendantAxisIterator and DescendantOrSelfAxisIterator work. (Not 100% certain here since I was using my own custom iterators rather than the standard ones from org.jaxen but pretty sure)  I don&apos;t think the bug is here (or if there is a bug, it&apos;s not only here).&lt;/p&gt;

&lt;p&gt;The problem doesn&apos;t arise until you have something like //x or, unabbreviated/ /descendant-or-self::node()/child::x&lt;/p&gt;

&lt;p&gt;Specifically it seems to be the DefaultNameStep.evaluate method that gets the order wrong; specifically this for loop:&lt;/p&gt;

&lt;p&gt;            for (int i = 0; i &amp;lt; contextSize; ++i) {&lt;br/&gt;
                eachContextNode = contextNodeSet.get&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;/p&gt;

&lt;p&gt;                Iterator axisNodeIter = axisIterator(eachContextNode, support);&lt;br/&gt;
                if (axisNodeIter == null || axisNodeIter.hasNext() == false) {
                    continue;
                }&lt;/p&gt;

&lt;p&gt;                // ensure only unique matching nodes in the result&lt;br/&gt;
                while (axisNodeIter.hasNext()) {&lt;br/&gt;
                    eachAxisNode = axisNodeIter.next();&lt;/p&gt;

&lt;p&gt;                    if (matches(eachAxisNode, support)) {&lt;br/&gt;
                        if (unique.put(eachAxisNode, PRESENT) == null) {
                            interimSet.add(eachAxisNode);
                        }&lt;br/&gt;
                    }&lt;br/&gt;
                }&lt;/p&gt;

&lt;p&gt;                // evaluate the predicates&lt;br/&gt;
                newNodeSet.addAll(getPredicateSet().evaluatePredicates(interimSet, support));&lt;br/&gt;
                interimSet.clear();&lt;br/&gt;
            }&lt;/p&gt;

&lt;p&gt;However, the fix is not yet obvious to me so if anyone else sees how to fix this, please do so.&lt;/p&gt;</comment>
                    <comment id="28991" author="elharo" created="Sun, 16 Jan 2005 10:18:01 -0600"  >&lt;p&gt;FYI, I suspect this is the same problem as Jaxen-15, which says:&lt;/p&gt;

&lt;p&gt; Please see&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23933&quot;&gt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23933&lt;/a&gt;&lt;br/&gt;
Which I think describes the issue and saves me retyping essentially the same data. &lt;/p&gt;

&lt;p&gt;If we fix this, I think we can close that too.&lt;/p&gt;</comment>
                    <comment id="28998" author="bazzargh" created="Sun, 16 Jan 2005 20:18:38 -0600"  >&lt;p&gt;FYI Elliotte: unfortunately an apple jdk upgrade has hosed my IDE, I&apos;m only able to browse the code at the moment. However I went over the code for the two descendant iterators and they seem overly complex, but correct. They both would work with this logic (merged for brevity):&lt;/p&gt;

&lt;p&gt;Iterator children;&lt;/p&gt;

&lt;p&gt;// constructor for Descendant axis&lt;br/&gt;
Descendant() {&lt;br/&gt;
  children = EMPTY_ITERATOR;&lt;br/&gt;
  stack.push(children(node));  &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;// constructor for DescendantOrSelf axis&lt;br/&gt;
DescendantOrSelf() {&lt;br/&gt;
  children = EMPTY_ITERATOR;&lt;br/&gt;
  stack.push(new SingletonList(node).iterator());  &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;boolean hasNext() {&lt;br/&gt;
	while (!children.hasNext()) {&lt;br/&gt;
		if (stack.isEmpty()) {
			return false;
		}&lt;br/&gt;
		children = (Iterator) stack.pop();&lt;br/&gt;
	}&lt;br/&gt;
	return true;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Object next() {&lt;br/&gt;
	if (hasNext()) {
		Object node = children.next();
		stack.push(children);
		children = children(node);
		return node;
	}&lt;br/&gt;
	throw new NoSuchElementException();&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;This doesnt change the logic much, so won&apos;t fix this bug (it removes an unnecessary check in internalCreateIterator, and avoids using nulls as sentinels). Just posting this in case it helps, I&apos;ll apply this tidy up once I&apos;ve got my IDE back.&lt;/p&gt;</comment>
                    <comment id="30300" author="elharo" created="Fri, 25 Feb 2005 09:31:37 -0600"  >&lt;p&gt;Upgrading this bug to critical because working around it is proving to be a major performance hit in XOM (something like 50% of the execution time on some queries)&lt;/p&gt;</comment>
                    <comment id="30350" author="elharo" created="Sun, 27 Feb 2005 14:54:46 -0600"  >&lt;p&gt;After quite a bit of work with the debugger I have determined that the bug is not where I thought it was at all. The DescendantAxisIterator and DescendantOrSelfAxisIterator classes are correct. In fact, /descendant::x and /descendant-or-self::x behave as expected. The following block of code in DefaultNameStep.evaluate is what shuffles the nodes out of document order:&lt;/p&gt;

&lt;p&gt;            for (int i = 0; i &amp;lt; contextSize; ++i) {&lt;br/&gt;
                eachContextNode = contextNodeSet.get&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;;&lt;/p&gt;

&lt;p&gt;                Iterator axisNodeIter = axisIterator(eachContextNode, support);&lt;br/&gt;
                if (axisNodeIter == null || axisNodeIter.hasNext() == false) {
                    continue;
                }&lt;/p&gt;

&lt;p&gt;                while (axisNodeIter.hasNext()) {&lt;br/&gt;
                    eachAxisNode = axisNodeIter.next();&lt;/p&gt;

&lt;p&gt;                    if (matches(eachAxisNode, support)) {&lt;br/&gt;
                        if (unique.put(eachAxisNode, PRESENT) == null) {
                            interimSet.add(eachAxisNode);
                        }&lt;br/&gt;
                    }&lt;br/&gt;
                }&lt;/p&gt;

&lt;p&gt;                // evaluate the predicates&lt;br/&gt;
                newNodeSet.addAll(getPredicateSet().evaluatePredicates(interimSet, support));&lt;br/&gt;
                interimSet.clear();&lt;br/&gt;
            }&lt;br/&gt;
        }&lt;/p&gt;

&lt;p&gt;I &lt;b&gt;think&lt;/b&gt; what is going on is that because //x is really /descendant-or-self::node()/child::x Jaxen does the following:&lt;/p&gt;

&lt;p&gt;1. Grab all the nodes that match /descendant-or-self::node(). jaxen returns these in the correct order.&lt;/p&gt;

&lt;p&gt;2. Iterate through that list, and for each node in that list, in order, evaluate child::x. Because it goes in order it gets the children of &amp;lt;a&amp;gt;, including &amp;lt;x&amp;gt;1&amp;lt;/x&amp;gt; and &amp;lt;x&amp;gt;4&amp;lt;/x&amp;gt;, before it evaluates the children of b.&lt;/p&gt;

&lt;p&gt;Jaxen simply appends these to the list, and finally returns &amp;lt;x1&amp;gt;1&amp;lt;/x&amp;gt;, &amp;lt;x1&amp;gt;4&amp;lt;/x&amp;gt;, &amp;lt;x&amp;gt;2&amp;gt;&amp;lt;/x&amp;gt;, &amp;lt;x&amp;gt;3&amp;lt;/x&amp;gt;. &lt;/p&gt;

&lt;p&gt;Jaxen is assuming that because it gets the order of each step right, it will get the eventual order right, but this is not true. &lt;/p&gt;

&lt;p&gt;For the moment I am not sure how to fix this problem. I suspect it extends way beyond this simple case. Possibly there&apos;s a way we can fix the order within the block of code I&apos;ve indicated here. Possibly, however, Jaxen needs some sort of resort step, either at the end of evaluation, or at the end of evaluation of each step to make sure the nodes come out in document order as promised. &lt;/p&gt;

&lt;p&gt;Possibly Jaxen needs to attach some sort of sequence number to each node as its read in the first time, so that the nodes can be efficiently sorted when they come out. I&apos;m not quite sure how that would work. Possibly there&apos;s another solution. Suggestions are appreciated.&lt;/p&gt;</comment>
                    <comment id="30381" author="proyal" created="Mon, 28 Feb 2005 21:35:59 -0600"  >&lt;p&gt;you are absolutely correct as to what&apos;s going on. trying to crunch it through my brain now to see if there&apos;s a way around this w/o re-sorting it all.&lt;/p&gt;</comment>
                    <comment id="30382" author="proyal" created="Mon, 28 Feb 2005 22:24:42 -0600"  >&lt;p&gt;We can fix this specific problem by injecting the following into DefaultAbsoluteLocationPath:&lt;/p&gt;

&lt;p&gt;    public Expr simplify()&lt;br/&gt;
    {&lt;br/&gt;
        final DefaultAbsoluteLocationPath expr = (DefaultAbsoluteLocationPath)super.simplify();&lt;/p&gt;

&lt;p&gt;        if( 2 == getSteps().size() )&lt;br/&gt;
        {&lt;br/&gt;
            final Step second = (Step)getSteps().get( 1 );&lt;/p&gt;

&lt;p&gt;            if( Axis.DESCENDANT_OR_SELF == ( (Step)getSteps().get( 0 ) ).getAxis()&lt;br/&gt;
                &amp;amp;&amp;amp; second instanceof DefaultNameStep &lt;br/&gt;
                &amp;amp;&amp;amp; Axis.CHILD == second.getAxis() )&lt;/p&gt;
            {
                final DefaultNameStep step = (DefaultNameStep)second;
                
                getSteps().set( 1, new DefaultNameStep(new IterableSelfAxis( Axis.SELF),
                                                       step.getPrefix(),
                                                       step.getLocalName(),
                                                       step.getPredicateSet() ) );
            }
&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;        return expr;&lt;br/&gt;
    }&lt;/p&gt;


&lt;p&gt;But, this just fixes this specific problem. Would like to find a general solution.&lt;/p&gt;</comment>
                    <comment id="30383" author="bob" created="Mon, 28 Feb 2005 22:34:43 -0600"  >&lt;p&gt;I honestly think this is just a simple change.&lt;/p&gt;

&lt;p&gt;Switching from a bredth-first walk to a depth-first should be almost trivial, no?&lt;/p&gt;</comment>
                    <comment id="30384" author="proyal" created="Mon, 28 Feb 2005 23:21:37 -0600"  >&lt;p&gt;bob, i saw your earlier comment about that, but i didn&apos;t see where it was an issue.&lt;/p&gt;

&lt;p&gt;the descendant-or-self iterator does to depth first, as it should be needed. &lt;/p&gt;

&lt;p&gt;that step returns a node-set of all document nodes, in order.&lt;/p&gt;

&lt;p&gt;next step is a child iterator for &apos;x&apos;.&lt;/p&gt;

&lt;p&gt;since the first node in the list is &apos;a&apos;, the children of it are x/1 and x/4. this will happen regardless of how the first step is evaluated (be it depth or breadth)&lt;/p&gt;

&lt;p&gt;unless in depth-vs-breadth you are talking about how the various steps play together? (ie, only evaluate first node of first step, pass to 2nd step, etc).. but i think that might be a huge change to the entire way jaxen operates, and i can&apos;t work it out in my head if that wouldn&apos;t totally break things.&lt;/p&gt;</comment>
                    <comment id="31532" author="elharo" created="Sat, 2 Apr 2005 23:38:48 -0600"  >&lt;p&gt;This is now fixed. &lt;b&gt;All&lt;/b&gt; node-sets are returned in document order. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 32 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>mguillem</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-54] [ 776395 ] selectNodes in DOM</title>
                <link>http://jira.codehaus.org/browse/JAXEN-54</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Unlike selectSingleNode, the Nodes in the List are not &lt;br/&gt;
updateable. I was hoping to make mass-updates like...&lt;/p&gt;

&lt;p&gt;Iterator iter = nodeList.iterator();&lt;br/&gt;
while (iter.hasNext()) {&lt;br/&gt;
Node node = (Node)iter.next();&lt;br/&gt;
node.setNodeValue(newValue);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;If this is not a bug, is there a different way to achieve &lt;br/&gt;
this easily?&lt;/p&gt;</description>
                <environment></environment>
            <key id="17822">JAXEN-54</key>
            <summary>[ 776395 ] selectNodes in DOM</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:35:46 -0500</created>
                <updated>Sat, 2 Apr 2005 23:49:22 -0600</updated>
                    <resolved>Sat, 2 Apr 2005 23:49:22 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>dom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="30076" author="proyal" created="Sun, 20 Feb 2005 11:40:29 -0600"  >&lt;p&gt;sounds like a problem with the DOM implementation used?&lt;/p&gt;</comment>
                    <comment id="31533" author="elharo" created="Sat, 2 Apr 2005 23:49:22 -0600"  >&lt;p&gt;I&apos;ve added a test case that does not find the problem. I suspect there&apos;s a misunderstanding of DOM here. Element and document nodes cannot be updated with setNodeValue, no matter what. Text, Attr, Comment, ProcessingInstruction nodes can be regardless of how they&apos;re selected by jaxen.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 32 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-53] [ 681141 ] xpath result error with jdom</title>
                <link>http://jira.codehaus.org/browse/JAXEN-53</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The xpath result set when using jdom is incorrect when &lt;br/&gt;
using the text() function. However, when using the DOM &lt;br/&gt;
implementation returns the correct result set.&lt;/p&gt;

&lt;p&gt;&amp;lt;root&amp;gt;&lt;br/&gt;
&amp;lt;data&amp;gt;1&amp;lt;/data&amp;gt;&lt;br/&gt;
&amp;lt;/root&amp;gt;&lt;/p&gt;

&lt;p&gt;xpath expr //data/text()&lt;/p&gt;

&lt;p&gt;JDOM:&lt;/p&gt;

&lt;p&gt;XPath path = new JDOMXPath(expr);&lt;br/&gt;
List list = path.selectNodes(root); // root is a jdom &lt;br/&gt;
element&lt;/p&gt;

&lt;p&gt;List is empty.&lt;/p&gt;

&lt;p&gt;DOM:&lt;/p&gt;

&lt;p&gt;XPath path = new DOMXPath(expr);&lt;br/&gt;
List list = path.selectNodes(root); // root is a w3c &lt;br/&gt;
dom element&lt;/p&gt;

&lt;p&gt;List contains one element&lt;/p&gt;</description>
                <environment></environment>
            <key id="17821">JAXEN-53</key>
            <summary>[ 681141 ] xpath result error with jdom</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:30:00 -0500</created>
                <updated>Sun, 20 Feb 2005 10:11:56 -0600</updated>
                    <resolved>Sun, 20 Feb 2005 10:11:56 -0600</resolved>
                                                            <component>jdom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29699" author="elharo" created="Tue, 8 Feb 2005 22:09:22 -0600"  >&lt;p&gt;I can&apos;t reproduce this one. Is there a test case?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-52] [ 585042 ] selectNodeList in DOMXPath</title>
                <link>http://jira.codehaus.org/browse/JAXEN-52</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;While using Jaxen and the DOMXPath object, I noticed &lt;br/&gt;
that in some instances the List object returned by &lt;br/&gt;
DOMXPath.selectNodeList(Object node) contains &lt;br/&gt;
java.lang.Double objects. This appears to happen very &lt;br/&gt;
rarely. The value of the Double is always 1.0.&lt;/p&gt;

&lt;p&gt;If this is a feature, sorry to bother you but it probably &lt;br/&gt;
should be documented somewhere so as to avoid a &lt;br/&gt;
ClassCastException.&lt;/p&gt;

&lt;p&gt;Here is an example code:&lt;/p&gt;


&lt;p&gt;XPath xPath = new DOMXPath(xpath);&lt;br/&gt;
List list = xPath.selectNodes(node);&lt;/p&gt;

&lt;p&gt;for (int i = 0; i &amp;lt; list.size(); i++) {&lt;br/&gt;
if (!(list.get&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; instanceof Node))&lt;br/&gt;
System.out.println(&amp;quot;Dave, &amp;quot; + list.get&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/information.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; + &lt;br/&gt;
&amp;quot; is not a Node&amp;quot;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;return list;&lt;/p&gt;

&lt;p&gt;Thanks in advance and I really like the software,&lt;/p&gt;</description>
                <environment></environment>
            <key id="17820">JAXEN-52</key>
            <summary>[ 585042 ] selectNodeList in DOMXPath</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="3">Duplicate</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:28:05 -0500</created>
                <updated>Thu, 13 Jan 2005 21:38:50 -0600</updated>
                    <resolved>Thu, 13 Jan 2005 21:38:50 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28921" author="elharo" created="Thu, 13 Jan 2005 21:38:50 -0600"  >&lt;p&gt;This appears to be the same as issue 62. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 43 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-51] [ 529413 ] Predicate matching not working</title>
                <link>http://jira.codehaus.org/browse/JAXEN-51</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;./../servlet-name=&amp;#39;DeviceInfoServlet&amp;#39;&amp;#93;&lt;/span&gt;&quot;);&lt;br/&gt;
String rez = (String) expr.selectSingleNode (doc);&lt;/p&gt;

&lt;p&gt;always return null for the following doc:&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;&amp;lt;servlet-mapping&amp;gt;&lt;br/&gt;
&amp;lt;servlet-name&amp;gt;DeviceInfoServlet&amp;lt;/servlet-name&amp;gt;&lt;br/&gt;
&amp;lt;url-pattern&amp;gt;/tools/*&amp;lt;/url-pattern&amp;gt;&lt;br/&gt;
&amp;lt;/servlet-mapping&amp;gt;&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;But simple ones are working:&lt;br/&gt;
String b = (String) (new XPath (&quot;//servlet-mapping/url-pattern&quot;)).selectSingleNode (doc);&lt;/p&gt;

&lt;p&gt;And I am sorry to say but Microsoft XML parser does &lt;br/&gt;
understand the first expression and return the right &lt;br/&gt;
stuff.&lt;/p&gt;</description>
                <environment></environment>
            <key id="17819">JAXEN-51</key>
            <summary>[ 529413 ] Predicate matching not working</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:26:13 -0500</created>
                <updated>Fri, 14 Jan 2005 07:01:04 -0600</updated>
                    <resolved>Fri, 14 Jan 2005 07:01:04 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28922" author="elharo" created="Thu, 13 Jan 2005 21:42:25 -0600"  >&lt;p&gt;Are you sure you&apos;ve got the context node right? Could you provide a smaple XML file and source code that demonstrates the problem? &lt;/p&gt;</comment>
                    <comment id="28939" author="bazzargh" created="Fri, 14 Jan 2005 06:19:24 -0600"  >&lt;p&gt;I&apos;m afraid I can&apos;t shed any more light on this issue. This is one of the issues migrated from sourceforge, the original owner was mailed when I moved it but hasn&apos;t commented. (all the issues with &lt;span class=&quot;error&quot;&gt;&amp;#91;numbers&amp;#93;&lt;/span&gt; in the titles are like this).&lt;/p&gt;</comment>
                    <comment id="28943" author="elharo" created="Fri, 14 Jan 2005 07:01:04 -0600"  >&lt;p&gt;I tried but I can&apos;t reproduce this problem, so I&apos;m goign to close it as unreproduceable.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 43 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-50] [ 764479 ] XPath function throws exception when using NamespaceContext</title>
                <link>http://jira.codehaus.org/browse/JAXEN-50</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The API documentation say, about the getFunction method&lt;br/&gt;
of FunctionContext :&lt;br/&gt;
&quot; Parameters:&lt;br/&gt;
namespaceURI - the namespace uri to which the prefix&lt;br/&gt;
parameter is bound in the xpath expression. If the&lt;br/&gt;
function call expression had no prefix, the namespace&lt;br/&gt;
uri is null. &quot;&lt;/p&gt;

&lt;p&gt;Here, the last sentence is important.&lt;/p&gt;

&lt;p&gt;That should be ok for native XPath functions, however,&lt;br/&gt;
when using a namespace context, this behaviour is not&lt;br/&gt;
followed :&lt;/p&gt;

&lt;p&gt;SimpleNamespaceContext nsContext = new&lt;br/&gt;
SimpleNamespaceContext();&lt;br/&gt;
// Add all namespace declarations from the node&lt;br/&gt;
nsContext.addElementNamespaces(this.xpath.getNavigator(),&lt;br/&gt;
node);&lt;br/&gt;
this.xpath.setNamespaceContext(nsContext);&lt;/p&gt;

&lt;p&gt;When this.xpath is evaluated, native XPath functions&lt;br/&gt;
are unreachable if the node or one of its ancestor&lt;br/&gt;
defines the default ns (xmlns=&quot;foo&quot;)&lt;br/&gt;
This cause an exception : &lt;br/&gt;
org.jaxen.UnresolvableException: Function :string&lt;br/&gt;
(that&apos;s the same for any function, of course)&lt;/p&gt;

&lt;p&gt;I read the code of SimpleFunctionContext, and it seems&lt;br/&gt;
to ignore what is indicated in the FunctionContext API,&lt;br/&gt;
that is to say that no test of the presence of the&lt;br/&gt;
prefix is done;&lt;br/&gt;
Maybe the bug could be correct by testing it.&lt;/p&gt;

&lt;p&gt;On the user side, this bug can be avoid by adding this&lt;br/&gt;
code after nsContext.addElementNamespaces(...) :&lt;/p&gt;

&lt;p&gt;// reset ns declaration for default ns&lt;br/&gt;
nsContext.addNamespace(&quot;&quot;, null);&lt;/p&gt;

&lt;p&gt;But this is not enough because the default ns is also&lt;br/&gt;
ignore for other usage than function call resolution.&lt;/p&gt;

&lt;p&gt;Cordialement,&lt;br/&gt;
Philippe Poulard&lt;/p&gt;</description>
                <environment></environment>
            <key id="17818">JAXEN-50</key>
            <summary>[ 764479 ] XPath function throws exception when using NamespaceContext</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:24:10 -0500</created>
                <updated>Sun, 20 Feb 2005 10:13:08 -0600</updated>
                    <resolved>Sun, 20 Feb 2005 10:13:08 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29713" author="elharo" created="Wed, 9 Feb 2005 09:27:41 -0600"  >&lt;p&gt;Removing double escaping in comment&lt;/p&gt;</comment>
                    <comment id="29714" author="elharo" created="Wed, 9 Feb 2005 09:53:27 -0600"  >&lt;p&gt;I&apos;m unable to reproduce this problem using the following test case:&lt;/p&gt;

&lt;p&gt;    public void testJAXEN50() throws JaxenException, ParserConfigurationException {
        
        DOMXPath xpath = new DOMXPath(&quot;true()&quot;);
        
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        Document doc = factory.newDocumentBuilder().newDocument();
        Element root = doc.createElementNS(&quot;http://www.example.org/&quot;, &quot;root&quot;);
        doc.appendChild(root);
        root.setAttributeNS(&quot;http://www.w3.org/2000/xmlns/&quot;, &quot;xmlns&quot;, &quot;http://www.example.org/&quot;);
        
        SimpleNamespaceContext nsContext = new SimpleNamespaceContext();
        // Add all namespace declarations from the node
        nsContext.addElementNamespaces(xpath.getNavigator(), doc);
        xpath.setNamespaceContext(nsContext);
        
        boolean result = xpath.booleanValueOf(doc);
        assertTrue(result);
        
    }&lt;/p&gt;

&lt;p&gt;Is there a complete test case that demonstrates the problem?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-49] [ 675302 ] boolean NaN evaluation</title>
                <link>http://jira.codehaus.org/browse/JAXEN-49</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;When a NaN value is evaluated as a boolean, false &lt;br/&gt;
should be returned. Instead, true is returned. This is &lt;br/&gt;
caused by the following code in BooleanFunction.java &lt;br/&gt;
(line 120):&lt;/p&gt;

&lt;p&gt;if ( d == 0 || d == Double.NaN )&lt;/p&gt;

&lt;p&gt;which should be replaced by&lt;/p&gt;

&lt;p&gt;if ( d == 0 || Double.isNaN(d) )&lt;/p&gt;

&lt;p&gt;Ruud Diterwich&lt;/p&gt;</description>
                <environment></environment>
            <key id="17817">JAXEN-49</key>
            <summary>[ 675302 ] boolean NaN evaluation</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:21:34 -0500</created>
                <updated>Thu, 13 Jan 2005 21:53:13 -0600</updated>
                    <resolved>Thu, 13 Jan 2005 21:53:13 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28923" author="elharo" created="Thu, 13 Jan 2005 21:53:13 -0600"  >&lt;p&gt;You can&apos;t use == to compare with NaN because NaN == NaN is false and NaN != NaN is true. You have to use the Double.isNaN method instead.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 43 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-48] QNames starting with underscores</title>
                <link>http://jira.codehaus.org/browse/JAXEN-48</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;The XPath-parser does not allow QNames starting with &lt;br/&gt;
underscores (_). This is valid as described in &lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-Prefix&quot;&gt;http://www.w3.org/TR/REC-xml-names/#NT-Prefix&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="17816">JAXEN-48</key>
            <summary>QNames starting with underscores</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:08:10 -0500</created>
                <updated>Tue, 18 Jan 2005 21:26:35 -0600</updated>
                    <resolved>Tue, 18 Jan 2005 21:26:35 -0600</resolved>
                                                            <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29055" author="bazzargh" created="Tue, 18 Jan 2005 21:26:35 -0600"  >&lt;p&gt;theres a bunch of unit tests covering underscores in names. I assume this has been fixed in the intervening years since this was filed on sourceforge&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-47] use of == not equals</title>
                <link>http://jira.codehaus.org/browse/JAXEN-47</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;Hello-&lt;/p&gt;

&lt;p&gt;why are you using == inside the default impl of &lt;br/&gt;
FollowingSiblingAxisIterator? I would suggest changing &lt;br/&gt;
to .equals() ?&lt;/p&gt;

&lt;p&gt;line of code is:&lt;br/&gt;
&amp;lt;pre&amp;gt;&lt;br/&gt;
else if ( eachChild == this.contextNode )&lt;br/&gt;
&amp;lt;/pre&amp;gt;&lt;br/&gt;
My object model does not guarantee == for equality. I &lt;br/&gt;
have custom impl as a workaround so this is not a big &lt;br/&gt;
deal.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;-David&lt;/p&gt;

&lt;p&gt;(the answer is that DOM doesnt support equals. I&apos;m not just closing this because it may be worthwhile to add a node equality test to the navigator interface - brian)&lt;/p&gt;</description>
                <environment></environment>
            <key id="17815">JAXEN-47</key>
            <summary>use of == not equals</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 17:04:49 -0500</created>
                <updated>Wed, 15 Jun 2005 16:13:52 -0500</updated>
                                                    <fixVersion>2.0</fixVersion>
                                <component>core</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="31698" author="elharo" created="Thu, 7 Apr 2005 16:37:17 -0500"  >&lt;p&gt;I just got bit by this. In the XOM internal navigator (not the one that ships with Jaxen, the one bundled with XOM) XPath text nodes are constructed on the fly and are not always == but are equals(). Therefore I had a bug in using this axis. &lt;/p&gt;

&lt;p&gt;I switched FollwoingSibling (and NodeComparator) over to using equals() instead and the problem was fixed, and nothing else broke.&lt;/p&gt;

&lt;p&gt;Remember, DOM doesn&apos;t support equals(); but in Java a class that doesn&apos;t have an equals() method inherits one from the java.lang.Object class which just uses == to compare. Thus using equals() here is likely more correct. Calling equals() basically means we&apos;ve used equals() for classes that cared enough to override it, and == for every other class. &lt;/p&gt;

&lt;p&gt;This may be important for other, stranger object models that have more sophisticated storage models; using databases or tables, for instance. In these cases, there may be fewer objects than nodes, and == may also not work.&lt;/p&gt;

&lt;p&gt;So far I can&apos;t think of any cases where == would work and equals() would not work, barring deliberately perverse things like an equals() method that always returns false.&lt;/p&gt;</comment>
                    <comment id="41347" author="bazzargh" created="Wed, 15 Jun 2005 16:13:52 -0500"  >&lt;p&gt;Theres a couple of scenarios:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;== is true, .equals() false. This would be perverse, as you say.&lt;/li&gt;
	&lt;li&gt;.equals() is true, == is false, and the two nodes &quot;are the same&quot;. This can happen with pooled entities and the like, and would be a problem for jaxen now.&lt;/li&gt;
	&lt;li&gt;.equals() is true, == is false, and the two nodes are different. This can happen when the OM just compares QNames.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thats why I think the equality test should be on the navigator. But breaking API changes belong in 2.0.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 21 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-46] Problem if attribute has a &apos;#&apos;  in it</title>
                <link>http://jira.codehaus.org/browse/JAXEN-46</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;Hii &lt;/p&gt;

&lt;p&gt;import com.werken.xpath.XPath;&lt;/p&gt;

&lt;p&gt;public class HashBug {&lt;/p&gt;

&lt;p&gt;  public static void main(String ar[]) throws Exception {
    // if xpath has attribute without &apos;#&apos; it gives the location
    // else if xpath has &apos;#&apos; in the attribute it gives null for location
    XPath xpathTest = new XPath(&quot;test[@test=&apos;SUBSCRIBER&apos;]&quot;);
    XPath xPathTest1 = new XPath(&quot;test1[@test1=&apos;SUBSCRIBER#&apos;]&quot;);

    System.out.println(&quot;Xpath for test is &quot; + xpathTest);
    System.out.println(&quot;Xpath Test1 is&quot; + xPathTest1);
  }&lt;br/&gt;
}&lt;/p&gt;



&lt;p&gt;Output :&lt;/p&gt;

&lt;p&gt;Xpath for test is [XPath: test&lt;span class=&quot;error&quot;&gt;&amp;#91;@test=&amp;#39;SUBSCRIBER&amp;#39;&amp;#93;&lt;/span&gt; &lt;br/&gt;
com.werken.xpath.impl.LocationPath@3a34f2]&lt;/p&gt;

&lt;p&gt;Xpath Test1 is[XPath: test1&lt;span class=&quot;error&quot;&gt;&amp;#91;@test1=&amp;#39;SUBSCRIBER#&amp;#39;&amp;#93;&lt;/span&gt; &lt;br/&gt;
null]&lt;/p&gt;</description>
                <environment></environment>
            <key id="17814">JAXEN-46</key>
            <summary>Problem if attribute has a &apos;#&apos;  in it</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 16:58:58 -0500</created>
                <updated>Wed, 19 Jan 2005 09:58:24 -0600</updated>
                    <resolved>Wed, 19 Jan 2005 09:58:24 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29064" author="elharo" created="Wed, 19 Jan 2005 09:50:16 -0600"  >&lt;p&gt;Cleaning up code an removing double escaping of &quot;&lt;/p&gt;</comment>
                    <comment id="29067" author="elharo" created="Wed, 19 Jan 2005 09:58:24 -0600"  >&lt;p&gt;I&apos;m unable to reproduce this. The example code refers to very old packages, so I suspect this was accidentally fixed by one of the numerous changes made in the last couple of years. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-45] ClassCastExcpetion using jdom ancestor axis</title>
                <link>http://jira.codehaus.org/browse/JAXEN-45</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;With JDOM a search using selectNodes with &quot;ancestor&quot; goes up to &lt;br/&gt;
jdom.Document, but to stop before it.&lt;br/&gt;
A search should never give back the document object, only &lt;br/&gt;
Elements, meaning XML Nodes.&lt;/p&gt;

&lt;p&gt;(leaving this as unknown not jdom as I&apos;ve seen this error in the count(//*) test case across the board)&lt;/p&gt;</description>
                <environment></environment>
            <key id="17813">JAXEN-45</key>
            <summary>ClassCastExcpetion using jdom ancestor axis</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 16:52:00 -0500</created>
                <updated>Thu, 13 Jan 2005 21:55:13 -0600</updated>
                    <resolved>Thu, 13 Jan 2005 21:55:13 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-44] Jaxen does not compile with GUMP</title>
                <link>http://jira.codehaus.org/browse/JAXEN-44</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The problem is that the interface in JDOM has changed&lt;br/&gt;
for the getParent() method. There is no class named&lt;br/&gt;
Parent, and it returns an Element instead. In fact,&lt;br/&gt;
the JDOM published API docs list this as the case. The&lt;br/&gt;
official compilation error is this&lt;br/&gt;
(&lt;a href=&quot;http://cvs.apache.org/builds/gump/latest/jaxen.html):&quot;&gt;http://cvs.apache.org/builds/gump/latest/jaxen.html):&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Buildfile: build-legacy.xml init: &lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; -----------&lt;br/&gt;
Jaxen 1.0-FCS &lt;span class=&quot;error&quot;&gt;&amp;#91;2002&amp;#93;&lt;/span&gt; ------------ clean: prepare:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir: /home/rubys/jakarta/jaxen/build&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir:&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/classes &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created&lt;br/&gt;
dir: /home/rubys/jakarta/jaxen/build/classes/main&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir:&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/classes/test &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt;&lt;br/&gt;
Created dir:&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/classes/samples &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt;&lt;br/&gt;
Created dir: /home/rubys/jakarta/jaxen/build/src&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir:&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main &lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt;&lt;br/&gt;
Created dir: /home/rubys/jakarta/jaxen/build/src/test&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;mkdir&amp;#93;&lt;/span&gt; Created dir:&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/samples&lt;br/&gt;
prepare.core: &lt;span class=&quot;error&quot;&gt;&amp;#91;copy&amp;#93;&lt;/span&gt; Copying 179 files to&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main &lt;span class=&quot;error&quot;&gt;&amp;#91;copy&amp;#93;&lt;/span&gt; Copied&lt;br/&gt;
4 empty directories to&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main compile.core:&lt;br/&gt;
internal.compile: &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; Compiling 170 source files to&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/classes/main &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
This version of java does not support the classic&lt;br/&gt;
compiler; upgrading to modern prepare.dom4j:&lt;br/&gt;
compile.dom4j: internal.compile: prepare.jdom: &lt;span class=&quot;error&quot;&gt;&amp;#91;copy&amp;#93;&lt;/span&gt;&lt;br/&gt;
Copying 4 files to&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main compile.jdom:&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;echo&amp;#93;&lt;/span&gt; support.jdom true internal.compile: &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
Compiling 3 source files to&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/classes/main &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
This version of java does not support the classic&lt;br/&gt;
compiler; upgrading to modern &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main/org/jaxen/jdom/DocumentNavigator.java:234:&lt;br/&gt;
incompatible types &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; found : org.jdom.Parent&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; required: org.jdom.Element &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; current =&lt;br/&gt;
current.getParent(); &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; ^ &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main/org/jaxen/jdom/DocumentNavigator.java:461:&lt;br/&gt;
incompatible types &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; found : org.jdom.Parent&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; required: org.jdom.Element &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; element =&lt;br/&gt;
((Text)context).getParent(); &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; ^ &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main/org/jaxen/jdom/DocumentNavigator.java:473:&lt;br/&gt;
incompatible types &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; found : org.jdom.Parent&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; required: org.jdom.Element &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; element =&lt;br/&gt;
((Comment)context).getParent(); &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; ^ &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;&lt;br/&gt;
/home/rubys/jakarta/jaxen/build/src/main/org/jaxen/jdom/DocumentNavigator.java:477:&lt;br/&gt;
incompatible types &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; found : org.jdom.Parent&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; required: org.jdom.Element &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; element =&lt;br/&gt;
((ProcessingInstruction)context).getParent(); &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; ^&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; 4 errors BUILD FAILED&lt;br/&gt;
/home/rubys/jakarta/jaxen/build-legacy.xml:249: Compile&lt;br/&gt;
failed; see the compiler error output for details.&lt;br/&gt;
Total time: 10 seconds&lt;/p&gt;


&lt;p&gt;Please remove all use of the class org.jdom.Parent, and&lt;br/&gt;
just use the Element class. That would be best.&lt;/p&gt;

&lt;p&gt;Here is a link to a working source:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.servlets.com/archive/servlet/ReadMsg?msgId=358919&quot;&gt;http://www.servlets.com/archive/servlet/ReadMsg?msgId=358919&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="17812">JAXEN-44</key>
            <summary>Jaxen does not compile with GUMP</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 16:44:32 -0500</created>
                <updated>Sun, 20 Feb 2005 11:57:58 -0600</updated>
                    <resolved>Tue, 21 Sep 2004 05:18:04 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="24250" author="bazzargh" created="Sat, 18 Sep 2004 20:26:03 -0500"  >&lt;p&gt;found the gump logs for jaxen (despite links on the gump site pointing to covalent, apache are building it on tiger here:&lt;br/&gt;
&lt;a href=&quot;http://brutus.apache.org/gump/jdk15/jaxen/jaxen/gump_work/build_jaxen_jaxen.html&quot;&gt;http://brutus.apache.org/gump/jdk15/jaxen/jaxen/gump_work/build_jaxen_jaxen.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Turns out jaxen still wasn&apos;t building because it used the word &apos;enum&apos;. Patched. &lt;/p&gt;

&lt;p&gt;The jdk 1.4 instance is failing differently:&lt;br/&gt;
&lt;a href=&quot;http://brutus.apache.org/gump/public/jaxen/jaxen/index.html&quot;&gt;http://brutus.apache.org/gump/public/jaxen/jaxen/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;... due to a missing dependency. Seems theres yet another jaxen build:&lt;br/&gt;
&lt;a href=&quot;http://brutus.apache.org/gump/public/jaxen/jaxen-from-packaged-dom4j/index.html&quot;&gt;http://brutus.apache.org/gump/public/jaxen/jaxen-from-packaged-dom4j/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;...using a prebuilt dom4j, and this one&apos;s succeeding. I&apos;ll leave this bug open to see if the 1.5 build gets working again.&lt;/p&gt;</comment>
                    <comment id="24289" author="bazzargh" created="Tue, 21 Sep 2004 05:18:04 -0500"  >&lt;p&gt;The jdk 1.5 build now fails due to a prerequisite, not the jaxen code, and both builds now work when their prerequisites build. Will mark closed when we&apos;ve got nightlies going again at codehaus.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 7 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-43] Unwrapping primitive objects from List</title>
                <link>http://jira.codehaus.org/browse/JAXEN-43</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;After evaluation, an XPath expression gives a List&lt;br/&gt;
If it contains a single item, it is unwrapped from the&lt;br/&gt;
List.&lt;br/&gt;
When the expression is $bar, the variable object is not&lt;br/&gt;
wrapped within a List (because it would be immediately&lt;br/&gt;
unwrapped).&lt;/p&gt;

&lt;p&gt;However, I use the VariableContext to store objects&lt;br/&gt;
that can be also a List, and if it contains only 1&lt;br/&gt;
item, it is also unwrapped from the List when $foo is&lt;br/&gt;
evaluated. But this is not what I want !!! I want to&lt;br/&gt;
keep my List alive.&lt;/p&gt;

&lt;p&gt;Unwrapping a single item from a List should be done&lt;br/&gt;
only after evaluation expression, not for retrieving&lt;br/&gt;
objects stored in a VariableContext.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;Solution ***&lt;br/&gt;
when evaluating an expression, the kinf of List used&lt;br/&gt;
could be something like :&lt;br/&gt;
class org.jaxen.Result extends java.util.ArrayList&lt;br/&gt;
then, instead of instanciated an ArrayList, you only&lt;br/&gt;
have to instanciate the new class org.jaxen.Result and&lt;br/&gt;
put the items inside.&lt;br/&gt;
When the unwrapping code is invoked, it should test :&lt;br/&gt;
if (result instanceof org.jaxen.Result) {&lt;br/&gt;
// perform unwrap stuff here&lt;br/&gt;
}&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Cordialement,&lt;br/&gt;
Philippe Poulard&lt;/p&gt;</description>
                <environment></environment>
            <key id="17810">JAXEN-43</key>
            <summary>Unwrapping primitive objects from List</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 16:23:56 -0500</created>
                <updated>Wed, 19 Jan 2005 08:47:02 -0600</updated>
                    <resolved>Wed, 19 Jan 2005 08:47:02 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28924" author="elharo" created="Thu, 13 Jan 2005 21:56:28 -0600"  >&lt;p&gt;Agreed. This one bit me too. I had to create my own subclass of ArrayList to keep Jaxen from unwrapping it. &lt;/p&gt;</comment>
                    <comment id="29053" author="bazzargh" created="Tue, 18 Jan 2005 21:09:54 -0600"  >&lt;p&gt;StringFunction used to recurse when looking at the string value of a list. That would cause the multiple unwraps you saw, although it would be better if I had a test case?&lt;/p&gt;

&lt;p&gt;Anyway I&apos;ve fixed that: string(list) now evaluates to string(list.get(0)) but never to string(((List) list.get(0)).get(0)). Leaving this open, I wouldn&apos;t be suprised if the bugs still there somewhere: hopefully you can check this Elliotte?&lt;/p&gt;</comment>
                    <comment id="29062" author="elharo" created="Wed, 19 Jan 2005 08:47:02 -0600"  >&lt;p&gt;It appears that your fixes have resolved this issue. Thanks. I was able to remove the hack I had in my code to work around this and all of my tests still passed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-42] Patch for JDom beta 10 and later</title>
                <link>http://jira.codehaus.org/browse/JAXEN-42</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Please find attached a patch for the JDom&lt;br/&gt;
DocumentNavigator class to work with the JDom beta 10&lt;br/&gt;
and JDom 1.0 API. The main purpose of the patch is to&lt;br/&gt;
deal with the introduction of the Parent interface and&lt;br/&gt;
Content abstract class. &lt;/p&gt;

&lt;p&gt;In the case of the getParent method, this now returns a&lt;br/&gt;
type of Parent, which could be either an Element or a&lt;br/&gt;
Document. Therefore a typecast and an additional test&lt;br/&gt;
is required in the getNamespaceAxisIterator method.&lt;/p&gt;

&lt;p&gt;The other change is to simplify the&lt;br/&gt;
translateNamespacePrefixToUri method, since several&lt;br/&gt;
instanceof tests can be combined into one test for&lt;br/&gt;
instanceof Content abstract class. This also needs a&lt;br/&gt;
typecast to Element instead of the Parent interface,&lt;br/&gt;
but in this case no additional test is required for&lt;br/&gt;
type safety.&lt;/p&gt;</description>
                <environment></environment>
            <key id="17809">JAXEN-42</key>
            <summary>Patch for JDom beta 10 and later</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="3">Duplicate</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 15:59:35 -0500</created>
                <updated>Tue, 18 Jan 2005 21:29:20 -0600</updated>
                    <resolved>Tue, 18 Jan 2005 21:29:20 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="24119" author="bazzargh" created="Wed, 15 Sep 2004 16:02:15 -0500"  >&lt;p&gt;I see now (by accident) that Jaxen has moved to&lt;br/&gt;
&lt;a href=&quot;http://jaxen.codehaus.org/&quot;&gt;http://jaxen.codehaus.org/&lt;/a&gt; where a similar, less optimal,&lt;br/&gt;
patch has been applied. I would suggest advertising this new&lt;br/&gt;
project home in the announcements area of the project page&lt;br/&gt;
in order to avoid further confusion among other Jaxen users.&lt;/p&gt;

&lt;p&gt;The patch here can be thought of an an optimization now.&lt;/p&gt;</comment>
                    <comment id="29056" author="bazzargh" created="Tue, 18 Jan 2005 21:29:20 -0600"  >&lt;p&gt;jaxen-57 covers this issue for the latest jdom&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13013" name="DocumentNavigator.java.patch" size="2290" author="bazzargh" created="Wed, 15 Sep 2004 16:02:15 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-41] Functions with prefixed names are not supported</title>
                <link>http://jira.codehaus.org/browse/JAXEN-41</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;the expression &quot;a:b()&quot; throws the exception &quot;unexpected&lt;br/&gt;
&apos;(&apos; &quot;&lt;/p&gt;

&lt;p&gt;try this :&lt;br/&gt;
org.jaxen.dom.DocumentNavigator.getInstance().parseXPath(&quot;a:b()&quot;);&lt;/p&gt;

&lt;p&gt;patch applied on the class XPathReader :&lt;br/&gt;
line 145 becomes :&lt;br/&gt;
case IDENTIFIER:&lt;br/&gt;
{&lt;br/&gt;
if ( ( ( LA(2) == LEFT_PAREN ) &amp;amp;&amp;amp; ( !&lt;br/&gt;
isNodeTypeName( LT(1) ) ) ) ||&lt;br/&gt;
( ( LA(2) == COLON ) &amp;amp;&amp;amp; ( LA(3) ==&lt;br/&gt;
IDENTIFIER ) &amp;amp;&amp;amp; ( LA(4) == LEFT_PAREN ) ) )&lt;br/&gt;
{&lt;/p&gt;

&lt;p&gt;The test for functions that have a name with a prefix&lt;br/&gt;
was missing&lt;/p&gt;</description>
                <environment></environment>
            <key id="17808">JAXEN-41</key>
            <summary>Functions with prefixed names are not supported</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 15:53:05 -0500</created>
                <updated>Mon, 10 Apr 2006 07:54:32 -0500</updated>
                    <resolved>Mon, 10 Apr 2006 07:54:32 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="24118" author="bazzargh" created="Wed, 15 Sep 2004 15:54:32 -0500"  >&lt;p&gt;replacement xpathreader&lt;/p&gt;</comment>
                    <comment id="63211" author="mguillem" created="Mon, 10 Apr 2006 07:17:40 -0500"  >&lt;p&gt;This problem makes the documentation at &lt;a href=&quot;http://jaxen.org/extensions.html&quot;&gt;http://jaxen.org/extensions.html&lt;/a&gt; quite curious. It recommands to use namespaces but this seems to work only if the xpath expression starts with the function (like in the example &quot;math:min(//x)&quot;)&lt;/p&gt;</comment>
                    <comment id="63212" author="elharo" created="Mon, 10 Apr 2006 07:31:08 -0500"  >&lt;p&gt;I suspect this may have been fixed a long time ago without anyone noticing. Or possibly this report only applies to pure function expressions like math:min(), not expressions used in predicates. &lt;/p&gt;

&lt;p&gt;Can anyone provide an actual JUnit test case for this alleged bug? ideally one that doesn;t delve too deeply into the internal parts of Jaxen but only accesses it through its published API? &lt;/p&gt;</comment>
                    <comment id="63215" author="elharo" created="Mon, 10 Apr 2006 07:54:32 -0500"  >&lt;p&gt;I&apos;ve added a very simple test for this:&lt;/p&gt;

&lt;p&gt;    public void testJaxen47() throws SAXPathException {
       org.jaxen.dom.DocumentNavigator.getInstance().parseXPath(&quot;a:b()&quot;);
    }&lt;/p&gt;

&lt;p&gt;The test passes. No exception is thrown. If someone else can reproduce this, holler. Otherwise, I think it&apos;s been fixed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13012" name="XPathReader.java" size="27846" author="bazzargh" created="Wed, 15 Sep 2004 15:54:32 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 30 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>mguillem</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-40] Context set inappropriately</title>
                <link>http://jira.codehaus.org/browse/JAXEN-40</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;The source for the org.jaxen.expr.DefaultPathExpr.evaluate() method is:&lt;/p&gt;

&lt;p&gt;     public Object evaluate(Context context) throws JaxenException&lt;/p&gt;
     {
         Object results = getFilterExpr().evaluate( context );

         context.setNodeSet( convertToList( results ) );

         return getLocationPath().evaluate( context );
     }

&lt;p&gt;It seems to me that invoking the setNodeSet() method on the Context &lt;br/&gt;
instance that was passed as an argument is incorrect. Shouldn&apos;t a new &lt;br/&gt;
Context be created for evaluation of the location path? For example:&lt;/p&gt;

&lt;p&gt;     public Object evaluate(Context context) throws JaxenException&lt;/p&gt;
     {
         Object results = getFilterExpr().evaluate( context );

         Context pathContext = new Context( context.getContextSupport() );
         pathContext.setNodeSet( convertToList( results ) );

         return getLocationPath().evaluate( pathContext );
     }

&lt;p&gt;Otherwise, evaluating the LHS of a UnionExpr (e.g.) could change the &lt;br/&gt;
context for evaluation of the RHS.&lt;/p&gt;</description>
                <environment></environment>
            <key id="17807">JAXEN-40</key>
            <summary>Context set inappropriately</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 15:44:07 -0500</created>
                <updated>Sun, 20 Feb 2005 10:16:48 -0600</updated>
                    <resolved>Sun, 20 Feb 2005 10:16:48 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29715" author="elharo" created="Wed, 9 Feb 2005 10:07:08 -0600"  >&lt;p&gt;I&apos;ve tried writing a test case fo this but am unable to reporduce it. Is any more information available? If not, I suggest marking this one Closed - Can&apos;t Reproduce since it&apos;s based on a hypothesis rather than an actual discovered bug. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-39] Entity handling for DOM Navigator</title>
                <link>http://jira.codehaus.org/browse/JAXEN-39</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;migrated issue from sourceforge&lt;/p&gt;

&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;Please find attached a patch that allows the org.jaxen.dom.DocumentNavigator class to handle entity references.&lt;/p&gt;

&lt;p&gt;Entity references are tricky to deal with using the W3C DOM model, since they involve a degress of travesing up and down when looking for nodes that XPath sees as being at the same depth in the tree.&lt;/p&gt;

&lt;p&gt;As a consequence the code is not as clean as the original DOM implementation. In fact, you&apos;ll see a fair degree of redundancy in getChildAxisIterator and getFollowingSiblingAxisIterator. In fact getPrecedingAxisIterator follows a very similar pattern as well.&lt;/p&gt;

&lt;p&gt;I&apos;ve done some basic testing of the code against DOM 1 (though I see no reason why DOM 2 wouldn&apos;t work just as well). I guess you&apos;ll be after some test cases at some point as well.&lt;/p&gt;

&lt;p&gt;The code is patched against the 1.0-beta-7 release, though a quick look at CVS doesn&apos;t show any more recent changes to the DocumentNavigator.&lt;/p&gt;

&lt;p&gt;I&apos;m subscribed to the mailing list, so if you have any questions, I&apos;ll be listening there.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Nicholas Cull&lt;br/&gt;
run2000@users.sourceforge.net&lt;/p&gt;

&lt;p&gt;Mea culpa!&lt;/p&gt;

&lt;p&gt;I ran my original patch through the JUnit tests, and spotted&lt;br/&gt;
a problem with the parent axis iterator. The newer patch&lt;br/&gt;
fixes this by testing for null before trying to test the&lt;br/&gt;
parent node&apos;s type.&lt;/p&gt;

&lt;p&gt;The new patch now passes all the existing test cases on the&lt;br/&gt;
DOM model. I&apos;ll see if I can construct some simple tests&lt;br/&gt;
that show that entity references actually work correctly for&lt;br/&gt;
DOM shortly. I&apos;ll have difficulty making these generic&lt;br/&gt;
though, since some of the other XML models will surely have&lt;br/&gt;
the same problems that the DOM navigator had with entity&lt;br/&gt;
handling.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Nicholas Cull&lt;br/&gt;
run2000@users.sourceforge.net&lt;/p&gt;</description>
                <environment></environment>
            <key id="17806">JAXEN-39</key>
            <summary>Entity handling for DOM Navigator</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 15:28:50 -0500</created>
                <updated>Sun, 20 Feb 2005 11:42:36 -0600</updated>
                                    <version>1.0</version>
                                <fixVersion>1.2</fixVersion>
                                <component>dom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="24117" author="bazzargh" created="Wed, 15 Sep 2004 15:30:18 -0500"  >&lt;p&gt;&quot;Better factored patch that still works (v4)&quot; (patch was to 1.0.b7)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13011" name="DocumentNavigator.patch" size="5830" author="bazzargh" created="Wed, 15 Sep 2004 15:30:18 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-38] Java 1.5 interfaces?</title>
                <link>http://jira.codehaus.org/browse/JAXEN-38</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;migrated issue from sourceforge&lt;/p&gt;

&lt;p&gt;I&apos;ve been using the new &quot;implementation-independent&quot;&lt;br/&gt;
XPath interface in Java 1.5 but have come to look at&lt;br/&gt;
Jaxen because the Xalan reference implementation of&lt;br/&gt;
XPath in the Java release is so appallingly&lt;br/&gt;
(inacceptably) slow. Every method seems to have a 0.25&lt;br/&gt;
second delay built in! Jaxen is just SO MUCH FASTER&lt;br/&gt;
(about 100 times faster in my experiments).&lt;/p&gt;

&lt;p&gt;So my question is: do you Jaxen people have any plans&lt;br/&gt;
to support the XPath interfaces in Java 1.5 in the near&lt;br/&gt;
future, so I can just plug Jaxen into my app? Or do I&lt;br/&gt;
have to hand-craft all my code to your interfaces (that&lt;br/&gt;
would be a real turn-off)?&lt;/p&gt;

&lt;p&gt;I think supporting these interfaces is a real&lt;br/&gt;
opportunity for Jaxen to get used more, but something&lt;br/&gt;
else that would help is if you people could just push&lt;br/&gt;
out a new release. It&apos;s been ages since v1.0 and there&lt;br/&gt;
are a number of important patches (that you can&apos;t&lt;br/&gt;
easily install because the build.pl file in the release&lt;br/&gt;
fails due to missing files). Any chance of a &quot;tidying&lt;br/&gt;
up&quot; release any time soon?&lt;/p&gt;

&lt;p&gt;Thanks for your time.&lt;/p&gt;

&lt;p&gt;Rod.&lt;/p&gt;</description>
                <environment></environment>
            <key id="17805">JAXEN-38</key>
            <summary>Java 1.5 interfaces?</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 15:23:34 -0500</created>
                <updated>Sun, 20 Feb 2005 11:41:09 -0600</updated>
                                    <version>1.0</version>
                                <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                            <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-37] New Extension Function to perform String compareTo</title>
                <link>http://jira.codehaus.org/browse/JAXEN-37</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Issue migrated from sourceforge&lt;/p&gt;

&lt;p&gt;Since XPath 1.0 does not support the ability to compare &lt;br/&gt;
Strings with (&amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=), how about adding an &lt;br/&gt;
extension function to mimic the String.compareTo() &lt;br/&gt;
method?&lt;/p&gt;

&lt;p&gt;Like this:&lt;/p&gt;

&lt;p&gt;public class CompareFunction implements Function {&lt;/p&gt;

&lt;p&gt;public Object call(Context context, List args) throws &lt;br/&gt;
FunctionCallException {&lt;br/&gt;
if (args.size() == 2) {&lt;br/&gt;
return evaluate(args.get(0), args.get(1), &lt;br/&gt;
context.getNavigator());&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;throw new FunctionCallException(&quot;compare() requires &lt;br/&gt;
two arguments.&quot;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;public static Integer evaluate(Object strArg1, Object &lt;br/&gt;
strArg2, Navigator nav) {&lt;br/&gt;
String str1 = StringFunction.evaluate(strArg1, nav);&lt;br/&gt;
String str2 = StringFunction.evaluate(strArg2, nav);&lt;/p&gt;

&lt;p&gt;return new Integer(str1.compareTo(str2));&lt;br/&gt;
}&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Steve:O&lt;/p&gt;</description>
                <environment></environment>
            <key id="17804">JAXEN-37</key>
            <summary>New Extension Function to perform String compareTo</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 15 Sep 2004 15:21:11 -0500</created>
                <updated>Tue, 22 Feb 2005 11:38:22 -0600</updated>
                                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="30072" author="proyal" created="Sun, 20 Feb 2005 10:51:22 -0600"  >&lt;p&gt;do we want to go down the road of adding non-spec functions? i say no..&lt;/p&gt;</comment>
                    <comment id="30202" author="elharo" created="Tue, 22 Feb 2005 11:22:28 -0600"  >&lt;p&gt;I would prefer not to do this. if we do do it, however, there is a compare function in XPath 2. It is named compare, takes two operands, and &quot;Returns -1, 0, or 1, depending on whether the value of the $comparand1 is respectively less than, equal to, or greater than the value of $comparand2, according to the rules of the collation that is used.&quot; &lt;/p&gt;

&lt;p&gt;However doing comparison right is extremely tricky because it does involves locales and collations. We should probably just reject this suggestion until such time (if ever) as Jaxen supports XPath 2.0.&lt;/p&gt;</comment>
                    <comment id="30203" author="elharo" created="Tue, 22 Feb 2005 11:24:47 -0600"  >&lt;p&gt;The proposed implementation does not take locales into account, and is not internationalizable. &lt;/p&gt;</comment>
                    <comment id="30205" author="proyal" created="Tue, 22 Feb 2005 11:38:22 -0600"  >&lt;p&gt;agreed. moving to 2.0, in case we decide on xpath 2.0 for that also.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 37 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-36] operators are not left-associative</title>
                <link>http://jira.codehaus.org/browse/JAXEN-36</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;as discussed on jaxen-user, xpathreader uses right recursion, not left recursion, in the parser, which ends up making operators right associative when left was intended. A previous patch fixed this for &apos;-&apos;, but the code is wrong for all other operators that aren&apos;t associative. the examples below are used for the tests, evaluating the expressions without parentheses should give the same results as the grouping on the right in each case.&lt;/p&gt;

&lt;p&gt; 3-(2-1)=2 , (3-2)-1=0&lt;br/&gt;
 8/(4/2)=4 , (8/4)/2=1&lt;br/&gt;
 3%(7%5)=1, (3%7)%5=3&lt;br/&gt;
 1=(2=2) is true, (1=2)=2 is false&lt;br/&gt;
 2!=(3!=1) is true, (2!=3)!=1 is false&lt;br/&gt;
 3&amp;gt;(2&amp;gt;1) is true, (3&amp;gt;2)&amp;gt;1 is false&lt;br/&gt;
 3&amp;gt;=(2&amp;gt;=2) is true, (3&amp;gt;=2)&amp;gt;=2 is false&lt;br/&gt;
 1&amp;lt;(2&amp;lt;3) is false, (1&amp;lt;2)&amp;lt;3 is true&lt;br/&gt;
 2&amp;lt;=(2&amp;lt;=3) is false, (2&amp;lt;=2)&amp;lt;=3 is true&lt;/p&gt;

&lt;p&gt;patch with these tests and the fix follows...&lt;/p&gt;</description>
                <environment></environment>
            <key id="17535">JAXEN-36</key>
            <summary>operators are not left-associative</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 1 Sep 2004 17:55:19 -0500</created>
                <updated>Thu, 16 Sep 2004 17:54:47 -0500</updated>
                    <resolved>Thu, 16 Sep 2004 17:54:47 -0500</resolved>
                            <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="0">0 minutes</timeoriginalestimate>
                    <timeestimate seconds="0">0 minutes</timeestimate>
                                  <comments>
                    <comment id="23692" author="bazzargh" created="Wed, 1 Sep 2004 17:59:02 -0500"  >&lt;p&gt;patch with tests + fix. also includes patch to disable the test for jaxen-24 (since it stops the rest of the tests being tested) and the fix for jaxen-30, same reason.&lt;/p&gt;</comment>
                    <comment id="24159" author="bazzargh" created="Thu, 16 Sep 2004 17:54:47 -0500"  >&lt;p&gt;applied the patch in jaxen-35&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12940" name="assocpatch.txt" size="7402" author="bazzargh" created="Wed, 1 Sep 2004 17:59:02 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-35] multiple xpaths in the same string, dose not throw error while parsing</title>
                <link>http://jira.codehaus.org/browse/JAXEN-35</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;XPath: /tmp:abc tmp:abc /tmp:def/tmp:abc&lt;/p&gt;

&lt;p&gt;While parsing, it just processes /tmp:abc, and does not parse further.&lt;/p&gt;</description>
                <environment>Windows 2000</environment>
            <key id="17498">JAXEN-35</key>
            <summary>multiple xpaths in the same string, dose not throw error while parsing</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rammenon1999">Ramkumar Menon</reporter>
                        <created>Wed, 1 Sep 2004 03:25:38 -0500</created>
                <updated>Sun, 20 Feb 2005 11:59:03 -0600</updated>
                    <resolved>Thu, 16 Sep 2004 17:16:34 -0500</resolved>
                            <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="23699" author="bazzargh" created="Wed, 1 Sep 2004 19:09:59 -0500"  >&lt;p&gt;Had a look at this one, with this test:&lt;br/&gt;
  &amp;lt;document url=&quot;xml/numbers.xml&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;context select=&quot;/&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;!-- repeated xpaths, jaxen-35 --&amp;gt;&lt;br/&gt;
      &amp;lt;test exception=&quot;true&quot; select=&quot;/numbers /numbers&quot; count=&quot;0&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/context&amp;gt;&lt;br/&gt;
  &amp;lt;/document&amp;gt;&lt;/p&gt;

&lt;p&gt;this test passes because of a bug in the test code, in XpathTestBase.runTest() the code should look like:&lt;/p&gt;

&lt;p&gt;                log ( debug,&lt;br/&gt;
                      &quot;    Result Size   :: &quot; + results.size() );&lt;/p&gt;

&lt;p&gt;                if (exception !=null &amp;amp;&amp;amp; (exception.equals(&quot;on&quot;) || exception.equals(&quot;true&quot;))) {
                    fail(&quot;An exception was expected.&quot;);
                }&lt;/p&gt;

&lt;p&gt;(ie fail if an exception was expected and didnt happen)&lt;/p&gt;

&lt;p&gt;Tracing through to the source of the bug, in this case its that whitespace is always ignored in the lexer, the path is actually being interpreted as &quot;/numbers/numbers&quot;. Correct behaviour is for the lexer to report whitespace tokens (1 token per run of ws) and handle them in the parser.&lt;/p&gt;</comment>
                    <comment id="23719" author="bazzargh" created="Thu, 2 Sep 2004 05:02:26 -0500"  >&lt;p&gt;the test I did above is a red herring, &quot;/numbers /numbers&quot; is the valid path &quot;/numbers/numbers&quot; according to the spec. &lt;/p&gt;

&lt;p&gt;The correct test path is &quot;/numbers numbers&quot;, which is invalid. The bug appears to be in unionExpr(), if the next token after a pathExpr isn&apos;t PIPE it should be an error, instead it parsing stops as in the original bug description.&lt;/p&gt;</comment>
                    <comment id="23740" author="bazzargh" created="Thu, 2 Sep 2004 17:54:18 -0500"  >&lt;p&gt;patch rolling up previous fixes (jaxen-36, jaxen-30) with the introduction of an error token, which fixes this bug, including tests. Also fixes jaxen-25, jaxen-26, jaxen-34, but comments out another broken test for undeclared namespaces (jaxen-18?) which it turns out wasn&apos;t actually being tested.&lt;/p&gt;</comment>
                    <comment id="24156" author="bazzargh" created="Thu, 16 Sep 2004 17:16:34 -0500"  >&lt;p&gt;applied the patch. If you get the latest from cvs, can you check this works for you?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12945" name="errtoken.txt" size="21983" author="bazzargh" created="Thu, 2 Sep 2004 17:54:18 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>rammenon1999</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-34] Exception not thrown on incorrect XPath</title>
                <link>http://jira.codehaus.org/browse/JAXEN-34</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The following XPath should be considered invalid and should throw an XPathSyntaxException. It doesn&apos;t do so.&lt;/p&gt;

&lt;p&gt;XPath: /a/b&lt;span class=&quot;error&quot;&gt;&amp;#91;c &amp;gt; d&amp;#93;&lt;/span&gt;efg&lt;/p&gt;</description>
                <environment>Windows 2000 Professional, using Jaxen-1.1-beta-4</environment>
            <key id="17430">JAXEN-34</key>
            <summary>Exception not thrown on incorrect XPath</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rammenon1999">Ramkumar Menon</reporter>
                        <created>Thu, 26 Aug 2004 09:50:19 -0500</created>
                <updated>Tue, 18 Jan 2005 21:31:36 -0600</updated>
                    <resolved>Tue, 18 Jan 2005 21:31:36 -0600</resolved>
                            <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29057" author="bazzargh" created="Tue, 18 Jan 2005 21:31:36 -0600"  >&lt;p&gt;fixed this some time ago, theres a test in there confirming this works&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>rammenon1999</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-33] Incorrect links to release versions</title>
                <link>http://jira.codehaus.org/browse/JAXEN-33</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;All links to release builds (not betas) on this page are broken:&lt;br/&gt;
&lt;a href=&quot;http://jaxen.codehaus.org/releases.html&quot;&gt;http://jaxen.codehaus.org/releases.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are some similar problems with the (defunct?) jaxen page on sf:&lt;br/&gt;
&lt;a href=&quot;http://jaxen.sourceforge.net/releases.html&quot;&gt;http://jaxen.sourceforge.net/releases.html&lt;/a&gt;&lt;br/&gt;
(individual downloads work but not the link to all releases)&lt;/p&gt;

&lt;p&gt;Dodging the question of whether jaxen will continue to exist on sourceforge, the broken links are all to a specific mirror instead of the &apos;released files&apos; page on sourceforge, that takes users to an /appropriate/ mirror, it would be better to link to:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sourceforge.net/project/showfiles.php?group_id=31447&quot;&gt;http://sourceforge.net/project/showfiles.php?group_id=31447&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Related to Jaxen-32 (that&apos;s cleaning up the sf.net site, this one is about the codehaus site)&lt;/p&gt;</description>
                <environment></environment>
            <key id="17398">JAXEN-33</key>
            <summary>Incorrect links to release versions</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 25 Aug 2004 05:32:44 -0500</created>
                <updated>Sun, 20 Feb 2005 11:28:11 -0600</updated>
                    <resolved>Sun, 20 Feb 2005 11:28:11 -0600</resolved>
                            <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="3600">1 hour</timeoriginalestimate>
                    <timeestimate seconds="3600">1 hour</timeestimate>
                                  <comments>
                    <comment id="30074" author="proyal" created="Sun, 20 Feb 2005 11:28:11 -0600"  >&lt;p&gt;this has been fixed&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 37 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-32] clean up jaxen.sourceforge.net</title>
                <link>http://jira.codehaus.org/browse/JAXEN-32</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;&lt;a href=&quot;http://jaxen.sourceforge.net/&quot;&gt;http://jaxen.sourceforge.net/&lt;/a&gt; needs to be cleaned up, says peter royal. This user agrees. I was convinced for much of last week that jaxen had been abandoned and spent too much time investigating alternatives.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jaxen.org/&quot;&gt;http://jaxen.org/&lt;/a&gt; should also resolve to &lt;a href=&quot;http://jaxen.codehaus.org/&quot;&gt;http://jaxen.codehaus.org/&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
            <key id="17210">JAXEN-32</key>
            <summary>clean up jaxen.sourceforge.net</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rhobot">Donald Ball</reporter>
                        <created>Tue, 17 Aug 2004 21:46:15 -0500</created>
                <updated>Wed, 15 Sep 2004 09:24:14 -0500</updated>
                    <resolved>Wed, 15 Sep 2004 09:24:14 -0500</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="24105" author="proyal" created="Wed, 15 Sep 2004 09:24:14 -0500"  >&lt;p&gt;jaxen.org now resolves properly. sf.net sites shut down to best of my ability (deactivated + notice)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>rhobot</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-31] if jaxen stopped using lists it would be 37x faster</title>
                <link>http://jira.codehaus.org/browse/JAXEN-31</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The short story - I&apos;ve rewritten jaxen to use a nodeset abstraction instead of a list to accumulate results. With the unit tests at nearly 100%, the performance test on dom4j runs in ~200ms on my 1GHz powerbook, compared to ~7400ms for the nightly jaxen build. The failing unit tests are for paths not covered in the performance test.&lt;/p&gt;

&lt;p&gt;The long story - I wrote an implementation of the draft ISO Schematron spec on top of Jaxen, instead of the more usual XSLT. The schematron spec is designed so this can be done, mainly for performance reasons. Once I had enough working I was able to compare jaxen with xalan on the &apos;screamatron&apos; torture test, which is using schematron to validate the schematron 1.5 spec. I was suprised to find that jaxen was about 2x /slower/ than xalan, and marginally slower with a jdom navigator than a dom4j navigator. Looking at why it was so slow, it became clear that the problem was that throughout jaxen it&apos;s building lists of intermediate results to filter down, instead of generating the &apos;next&apos; result on demand. There&apos;s comments about this in several places in the code, but the list thing is so ingrained it needs more than a little refactoring to fix. &lt;/p&gt;

&lt;p&gt;I decided to have a go. This change produces apis incompatible with previous versions of jaxen, so this will be a lump of code not a wee patch. I&apos;ve basically cloned jaxen to &apos;org.jaxen2&apos; to work on it. I&apos;m nearly done with the changes, failing tests for the non-xpath extension functions which I havent implemented yet, patterns (not touched at all yet), and a couple of minor bugs.&lt;/p&gt;

&lt;p&gt;I&apos;ll post the code on jira once I&apos;m done, but here&apos;s the gist of the changes I made:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Introduce a Nodeset abstraction instead of a list...&lt;br/&gt;
public interface extends Iterator {&lt;br/&gt;
Object current();&lt;br/&gt;
int position();&lt;br/&gt;
// use of last() replaces the internal iterator with an iterator over a list caching results.&lt;br/&gt;
// it&apos;s basically a fallback on what jaxen used to do.&lt;br/&gt;
int last();&lt;br/&gt;
}&lt;br/&gt;
the reason for this is obvious, eg you can just test &apos;hasNext()&apos; to check the boolean value of a nodeset.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;change the signature of Expr to allow the selection of a fast code path&lt;br/&gt;
public interface Expr {&lt;br/&gt;
// these require context because of variable/function refs only. see later.&lt;br/&gt;
boolean isBoolean(Context ctx);&lt;br/&gt;
boolean isNumber(Context ctx);&lt;br/&gt;
boolean isString(Context ctx);&lt;br/&gt;
boolean isNodeset(Context ctx);&lt;br/&gt;
boolean booleanValue(Context ctx);&lt;br/&gt;
double numberValue(Context ctx);&lt;br/&gt;
String stringValue(Context ctx);&lt;br/&gt;
Nodeset nodesetValue(Context ctx);&lt;br/&gt;
// etc&lt;br/&gt;
}&lt;br/&gt;
this is really for my own sanity as there&apos;s so much code to maintain. Throughout jaxen, everything is untyped, so its fairly easy to (eg) pass a nodeSet when you meant to pass a node; there&apos;s instanceof checks, == null checks, and casts everywhere to deal with this.  Once you put everything behind an interface like the one above, making objects responsible for their own casts, a lot of the code is simplified, eg addition is just expr1.numberValue(ctx) + expr2.numberValue(ctx). All but a couple of classes inherit from abstract base classes that implement all but one of those methods (eg StringExprBase leaves stringValue() abstract.)  &lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Variable/Function refs don&apos;t have a type without context in my version,  and like Jaxen I look up functions, variables every time. This isn&apos;t smart - in xpath we can resolve all variable, function refs beforehand, and get faster code as a result. I&apos;ll probably change things so I have &apos;bound&apos; and &apos;unbound&apos; exprs, add &apos;BoundExpr bind(VariableContext,FunctionContext)&apos;. I&apos;ll still need to pass these as members of Context to support the &apos;evaluate&apos; extension function though.&lt;/p&gt;

&lt;p&gt;Another approach to the same concern that I didn&apos;t try is to pass in a typed context, eg &apos;StringContext&apos;, &apos;NodesetContext&apos;, etc (think of this as allowing things like perl&apos;s &apos;wantarray()&apos;. That approach would make it easier to expand the number of supported types (eg for xpath2) in future, I&apos;ll try it once the tests pass.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;moved all the functions to a single utility class&lt;br/&gt;
public class Functions {&lt;br/&gt;
String substring(String s, double start, double end);&lt;br/&gt;
// etc&lt;br/&gt;
}&lt;br/&gt;
this makes it easier to unit test the xpath functions, since they are mostly context-independent. Functions that need a navigator get it passed as the first arg, functions that optionally use the context node instead of an argument have that function added as a method of Context. Incidentally I changed some of the unit tests to get mine to pass - in particular I changed the substring() tests back to match the spec (they don&apos;t currently).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;No function in my version returns null. (compare to eg the name, namespaceuri functions of Navigator). The xpath spec uses &quot;&quot; or an empty nodeset throughout, so do I, this gets rid of a lot of == null checks. &lt;/p&gt;

&lt;p&gt;Some of the bugs against the current version of jaxen are fixed by this code - eg the use of double throughout allows gt/lt comparisons of longs (bug jaxen-28), + both of the bugs I filed previously.&lt;/p&gt;

&lt;p&gt;I&apos;d estimate I can finish this in the next week.&lt;/p&gt;</description>
                <environment></environment>
            <key id="17081">JAXEN-31</key>
            <summary>if jaxen stopped using lists it would be 37x faster</summary>
                <type id="4" iconUrl="http://jira.codehaus.org/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Wed, 11 Aug 2004 06:05:53 -0500</created>
                <updated>Fri, 23 Oct 2009 17:41:13 -0500</updated>
                                    <version>1.0</version>
                                <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>3</votes>
                          <timeoriginalestimate seconds="604800">1 week</timeoriginalestimate>
                    <timeestimate seconds="604800">1 week</timeestimate>
                                  <comments>
                    <comment id="22983" author="bazzargh" created="Wed, 11 Aug 2004 07:15:57 -0500"  >&lt;p&gt;BTW if bob or peter take a look at this... as this touches all over the code, I was planning to submit as a zip of the entire tree, not patches, with the code in some distinct package (org.jaxen2 currently, but I&apos;ll probably rename that to org.jaxen.v2 to stay under the right root). &lt;/p&gt;

&lt;p&gt;I don&apos;t touch the saxpath stuff, and wanted to leave the navigators alone, but unfortunately Navigator has a method to return an XPath so it was simpler to copy everything. I see that method as a cyclic dependency, I think it should be dropped. If I fix this there&apos;s less duplicate code to submit, but it makes a non-backward compatible change in jaxen. Your preference.&lt;/p&gt;

&lt;p&gt;If you have the IDEA xml file for the haus coding conventions, it would be great if it could be posted somewhere? I&apos;ve got something approximately the same I&apos;m using to format my code but it would be handy to be able to format all this the way you want. Of course, you can do that once you see the code...&lt;/p&gt;

&lt;p&gt;My tests share their data with the jaxen tests. This means that when jaxen&apos;s gone deliberately off-spec (for substring()) one or other must break. I&apos;m not keen on checking in broken tests but thats already happened for the &apos;preceding&apos; axis tests? I&apos;d rather comment out those tests for both, so gump works.&lt;/p&gt;

&lt;p&gt;Any comments, better ideas appreciated.&lt;/p&gt;</comment>
                    <comment id="22988" author="proyal" created="Wed, 11 Aug 2004 11:12:34 -0500"  >&lt;p&gt;wow, awesome! i&apos;ll certainly take a look!&lt;/p&gt;

&lt;p&gt;if you made a zip of it as org.jaxen, then one could easily pull up both source trees in a diff program to view the changes.. we can then decide on where to house the changes &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="23111" author="bazzargh" created="Sat, 14 Aug 2004 17:46:03 -0500"  >&lt;p&gt;ok here it is. This passes the tests 100%. Its still just about 37x faster on the performance test, but no faster on the functional tests - I think those are largely I/O bound. I&apos;ve also put in my schematron impl (org.jaxen.schematron package). this has a performance test too, which compares the xsl/jaxen performance on a more complex set of patterns. While I can pass the jaxen tests 100%, some of these tests fail (see the commented out assertion test in the performance test). So I don&apos;t think this code is quite right yet. The schematron tests run about 20% faster than xalan with this code (nearly twice as fast as with old jaxen). Also, I found several more jaxen tests that violated the spec, due to * patterns matching more than the principal node type (sec 2.3). I&apos;ve put the corrected tests in but commented them out, so tests.xml will pass both jaxen and my code. Have fun!&lt;/p&gt;</comment>
                    <comment id="30075" author="proyal" created="Sun, 20 Feb 2005 11:30:08 -0600"  >&lt;p&gt;this is a big change. i believe brian said that this direct approach may have problems.&lt;/p&gt;

&lt;p&gt;either way, the idea is a 2.0 idea &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="39051" author="bazzargh" created="Sun, 15 May 2005 19:34:52 -0500"  >&lt;p&gt;This is a revised attack on a number of v2 issues. Largely rewritten from scratch with jdk1.5 work-a-like public interface, a javacc-generated parser, an interal class structure designed around the OPTMINCONTEXT algorithm. While I havent gone as far as that algorithm in this code, its still 3x faster on the perf test, and comparable on the navigator test. It should be possible with some renames and a bit of surgery on BaseXPath to bolt this into the existing Jaxen APIs.&lt;/p&gt;</comment>
                    <comment id="39289" author="bazzargh" created="Thu, 19 May 2005 04:14:46 -0500"  >&lt;p&gt;A bit more fiddling with this new build... I&apos;m back to MUCH MUCH faster (jaxen runs the performance test in 31 seconds, the new code does it in 200 /milliseconds/), but still passing all the navigator tests; touch wood that it won&apos;t all blow up later on. Performance on the navigator tests is largely the same as jaxen&apos;s because it calls result.size() to test for a pass/fail - forcing my code to evaluate all nodes. &lt;/p&gt;

&lt;p&gt;The differences from the previous upload were mainly in making RelativeLocationPath use an iterator instead of a loop, so it&apos;s as lazy as it can be; and relying on an optimised navigator.getNodeType() instead of navigator.isElement() and friends. I&apos;ve profiled the code and don&apos;t see any more low-hanging fruit, so I&apos;m going to work on building this as a (hefty) patch to the main code now.&lt;/p&gt;</comment>
                    <comment id="39296" author="proyal" created="Thu, 19 May 2005 06:54:23 -0500"  >&lt;p&gt;how about working on this in a branch in CVS?&lt;/p&gt;</comment>
                    <comment id="39716" author="bazzargh" created="Wed, 25 May 2005 08:45:33 -0500"  >&lt;p&gt;A branch in CVS will be a good idea, but not quite yet. I&apos;m doing too much messing around with packages still, cvs would be painful. Also, when I upgraded MacOS I realized that I no longer remembered the passphrase for my ssh key (which keychain had been managing for me). I am &lt;b&gt;such&lt;/b&gt; a &lt;b&gt;loser&lt;/b&gt; &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I&apos;ll sort this out soon.&lt;/p&gt;

&lt;p&gt;Anyhoo, I am slowly getting to enough stability to go for a branch (2.0-alpha?). I&apos;m working on backwards compatibility at the moment, the patch doesn&apos;t need to be as radical as that attachment. Sometime this week.&lt;/p&gt;
</comment>
                    <comment id="194379" author="olo" created="Mon, 12 Oct 2009 05:24:48 -0500"  >&lt;p&gt;So, are there any plans to incorporate the optimizations to Jaxen?&lt;/p&gt;

&lt;p&gt;Accorging to benchmarks, Jaxen is the slowest XPath implementation among the competition:&lt;br/&gt;
&lt;a href=&quot;http://www.asciiarmor.com/post/33736620/java-xpath-1-0-engine-comparison-performance&quot;&gt;http://www.asciiarmor.com/post/33736620/java-xpath-1-0-engine-comparison-performance&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="194381" author="elharo" created="Mon, 12 Oct 2009 06:32:24 -0500"  >&lt;p&gt;Thanks for posting this. For the moment, I&apos;m more concerned about the three conformance failures they say they&apos;ve found. I&apos;ll have to check those out. Correctness trumps speed in my book. &lt;/p&gt;

&lt;p&gt;That said, if someone felt like implementing this idea without changing the public API, and could demonstrate that this did noticeably improve performance, it would certainly go in. However if the optimization requires changes to the public API, especially backwards incompatible changes, we&apos;d have to look more closely, and possibly release it as 2.0. Possible, but it would certainly take longer if we&apos;re going to break existing clients. &lt;/p&gt;</comment>
                    <comment id="194382" author="olo" created="Mon, 12 Oct 2009 06:41:09 -0500"  >&lt;p&gt;Do current unit tests have enough coverage to demonstrate API-wise backwards compatibility? I could give a shot at refreshing Brian&apos;s stuff.&lt;/p&gt;</comment>
                    <comment id="194390" author="elharo" created="Mon, 12 Oct 2009 07:04:18 -0500"  >&lt;p&gt;FYI, the tests you cite were run with Jaxen 1.0. This is years out of date. Since then, a lot of work has gone into both conformance and optimization so we likely do better now. I&apos;d be curious to see updated results.&lt;/p&gt;

&lt;p&gt;That said, the optimization suggested here may still be a good idea. As far as API compatibility, just make sure you don&apos;t change any existing public or protected class or method signatures, and you should be good. And of course the unti tests should all pass too. &lt;/p&gt;</comment>
                    <comment id="194400" author="olo" created="Mon, 12 Oct 2009 08:15:38 -0500"  >&lt;p&gt;OK, I&apos;ve dug out some old posts on jaxen-user made by Brian in Nov 2004:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://markmail.org/message/fhl327jznaxw3fbp&quot;&gt;http://markmail.org/message/fhl327jznaxw3fbp&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://markmail.org/message/c226vid7yaoofdfm&quot;&gt;http://markmail.org/message/c226vid7yaoofdfm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They sort of lay out the proposed course of action WRT optimizing Jaxen.&lt;/p&gt;

&lt;p&gt;Do you agree with assertions presented there?&lt;/p&gt;

&lt;p&gt;As I understand, none of this has happened and 1.1.1 and 1.1.2 releases were made in the mean time.&lt;br/&gt;
Do those plans need to be revised, then? Or are they more or less still correct?&lt;/p&gt;</comment>
                    <comment id="195018" author="olo" created="Fri, 16 Oct 2009 12:16:04 -0500"  >&lt;p&gt;I&apos;ve contacted Brian and he has prepared a cleaned up version of the patch with minimized differences (now it&apos;s only 30 kb).&lt;/p&gt;

&lt;p&gt;I&apos;ll be working on it, but just in case I&apos;m attaching it here.&lt;/p&gt;

&lt;p&gt;The patch shouldn&apos;t break API compatibility (modulo some issues left to iron out) and Brian has just recently fixed some issues with it:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;off-by-one error in PredicateSet&lt;/li&gt;
	&lt;li&gt;sort and reverse support in DefaultLocationPath&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Additional notes from Brian:&lt;/p&gt;

&lt;p&gt;&quot;In one case I just added an ArrayList wrapper which is a bit wasteful, to make the sort work I implemented a load more methods in LazyList&lt;/p&gt;

&lt;p&gt;the tests that are failing are: testUnboundNamespaceUsedInXPathExpression - this is likely to be because the test no longer triggers. There is code in BaseXpath now that unwraps some JaxenRuntimeExceptions, which was actually supposed to catch this test. Not sure why its not firing now. However, this test is only failing on illegal xpaths anyway - not a high priority&lt;/p&gt;

&lt;p&gt;testPrecedingAxisInDocumentOrder - this one should have been fixed by the sort() mentioned above.&lt;/p&gt;

&lt;p&gt;testIdentitySetUsageInDefaultNameStep - seems to be some issue with the way I&apos;m uniquing the nodes after finding them. (there is a uniqueness check, but obviously its not working)&lt;/p&gt;

&lt;p&gt;testAncestorAxis, testPrecedingSiblingAxisIsInDocumentOrder,testPrecedingAxisIsInDocumentOrder,testAncestorOrSelfAxis - all to do with the sort order of nodes.&lt;/p&gt;

&lt;p&gt;I think the rest of the 21 are all dupes of these&lt;/p&gt;

&lt;p&gt;The kind of thing that is supposed to be much faster with this, btw, is doing things like boolean(//x) - which tests for the existence of a node in the entire tree. Since this just involves forward axes, the lazy-list version will stop when it hits the first matching node, rather than continuing to accumulate node-sets. There&apos;s some overhead, reverse-axis tests may be slower, count() and the like which require collection of all nodes are likely to be unaffected.&quot;&lt;/p&gt;</comment>
                    <comment id="195234" author="bazzargh" created="Mon, 19 Oct 2009 07:05:48 -0500"  >&lt;p&gt;Aleksander commented that there were still a few hotspots in this version, checking isElement() etc. I had a look over the code for any obvious optimisations. I think the tests we do there are unavoidable, and the number of calls ought to match up with released version of jaxen. However, I did spot a few further improvements.&lt;/p&gt;

&lt;p&gt;First thing: it turns out that removing the new ArrayList() from &quot;Collections.reverse(new ArrayList(contextNodeSet));&quot; in DefaultLocationPath took my failed tests down to 6 (really 2, duplicated because IDEA runs the suites and the tests). Its unclear to me why this would have any effect at all (which is worrying). &lt;/p&gt;

&lt;p&gt;Next, optimisations: there were a few things that jumped out. Any time we call context.size() we force the LazyLists introduced in the previous patch to fill up. The code quite nastily uses &apos;list.size() == 0&apos; to test for emptiness, rather than using &apos;list.isEmpty()&apos;. That&apos;s just bad, there&apos;s no need to know the actual size to test if a list is empty, and the LazyLists are optimised for that case; so I replaced those. There was also an avoidable use of size() testing &apos;size() ==1&apos; prior to a list.get(0); I fixed this to use the iterator.  DefaultStep was not using iterators, so non-name-steps were evaluating the size. Fixing all of this did not change the test situation at all, but should have a good impact on perf.&lt;/p&gt;

&lt;p&gt;There&apos;s two users of size() which are more complicated: PredicateSet and Context. Context is mutable, which is a big mistake; worse, the size, position, and nodeset are mutable separately. In order for some of the logic to work, if the nodeset changes, the position may need reset to zero; but only if the position is not explicitly set before it is used. Anyway, I&apos;ve updated that code slightly so that the right thing happens, but where possible we avoid calling nodeset.size(). I&apos;ve not updated the PredicateSet code - which is more complicated - so it remains the case that uses of predicates will trigger slow paths.&lt;/p&gt;

&lt;p&gt;patch attached.&lt;/p&gt;</comment>
                    <comment id="195236" author="elharo" created="Mon, 19 Oct 2009 07:51:50 -0500"  >&lt;p&gt;Looking good. I would like to get the failed tests down to zero though.&lt;/p&gt;

&lt;p&gt;We could probably make Context immutable as part of a larger revision. &lt;/p&gt;

&lt;p&gt;Brian, you&apos;re a committer right? &lt;/p&gt;</comment>
                    <comment id="195242" author="bazzargh" created="Mon, 19 Oct 2009 08:13:33 -0500"  >&lt;p&gt;(A bit off topic here) yes, or more accurately I was a committer. I hadn&apos;t pushed anything for a while, and then an ssh key vulnerability was announced, which led to all vulnerable ssh keys - including mine - being disabled everywhere. I never submitted a new one, so effectively I&apos;m out of the loop.  I&apos;m still monitoring the mailing list and following you on twitter tho!&lt;/p&gt;

&lt;p&gt;Also, I wouldn&apos;t expect to see this land until all the tests pass; its not quite there yet, though its not far off (2 real failures now). So pushing all of this isn&apos;t an option for now, though as I see you&apos;ve just commented elsewhere, landing bits of it, like isEmpty(), might be useful.&lt;/p&gt;</comment>
                    <comment id="195264" author="bazzargh" created="Mon, 19 Oct 2009 13:11:33 -0500"  >&lt;p&gt;This version of the patch passes all tests (w00t!), and reduces the number of places that force the lazy list to be filled. I&apos;ve refactored the lazy list itself a bit, so that a separate method, fill(), is called when filling is forced for the first time. This makes it easy to find the culprits in the debugger.&lt;/p&gt;

&lt;p&gt;Debugging XOMPerformance.java, there is only one culprit - the call to Collections.sort() in DefaultLocationPath. Sorting should always be unnecessary - since we deal with nodes that are either already sorted in a forward or reverse direction, we at most need to perform a reverse and a merge.&lt;/p&gt;

&lt;p&gt;BTW, I am seeing this version as being /slower/ for that test than svn head - 5.9s versus 4.9s. Seems like a lot of overhead wrapping iterators in lists in iterators... Aleksander, how does this perform in your real world case? &lt;/p&gt;</comment>
                    <comment id="195320" author="bazzargh" created="Tue, 20 Oct 2009 04:30:19 -0500"  >&lt;p&gt;Ok, I have gone one step further and turned off the sort whenever the location path only uses the parent, self, or child axes (a very common case). The theory here is that given a list of nodes X in document order, then X/parent::&lt;b&gt;, X/self::&lt;/b&gt;, and X/child::* are also in document order; that a whole location path consisting of these axes is also ordered follows by induction. Other axes do not support this assertion, and removing the sort for them would trigger &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-55&quot; title=&quot;[ 864320 ] Bad order with selectNodes //something&quot;&gt;&lt;del&gt;JAXEN-55&lt;/del&gt;&lt;/a&gt;. Do you agree with this analysis Elliotte? &lt;/p&gt;

&lt;p&gt;All tests still pass. The performance gains are back towards the title of this bug - XOMPerformance goes from 4.9s to 97ms on my machine. Its a shame I can&apos;t get this simple trick to work for descendant-or-self but this is quite a big win as it stands.&lt;/p&gt;</comment>
                    <comment id="195774" author="olo" created="Fri, 23 Oct 2009 17:41:13 -0500"  >&lt;p&gt;BTW, I&apos;ve already started to adapt jBPM-BPEL to take advantage of Jaxen LazyLists:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jira.jboss.org/jira/browse/BPEL-313&quot;&gt;https://jira.jboss.org/jira/browse/BPEL-313&lt;/a&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="45317" name="Brian_Ewins_JAXEN-31_perf.patch" size="32324" author="olo" created="Fri, 16 Oct 2009 12:16:04 -0500" />
                    <attachment id="12821" name="jaxen.zip" size="1428332" author="bazzargh" created="Sat, 14 Aug 2004 17:46:03 -0500" />
                    <attachment id="45357" name="perf.patch" size="43812" author="bazzargh" created="Tue, 20 Oct 2009 04:30:19 -0500" />
                    <attachment id="45349" name="perf.patch" size="42685" author="bazzargh" created="Mon, 19 Oct 2009 13:11:33 -0500" />
                    <attachment id="45344" name="perf.patch" size="42326" author="bazzargh" created="Mon, 19 Oct 2009 07:05:48 -0500" />
                    <attachment id="15280" name="stuff.tgz" size="151350" author="bazzargh" created="Sun, 15 May 2005 19:34:52 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                1 year, 2 weeks, 1 day ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>olo</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-30] XPathReaderFactoryTest is unpredictable</title>
                <link>http://jira.codehaus.org/browse/JAXEN-30</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;In current CVS, XPathReaderFactoryTest fails in some environments but not others. eg works for me IDEA4, doesn&apos;t work in Maven 1.0. The problem is that system properties are being set but not restored to their default values. In the event that they are left set to a value that is supposed to cause a test to fail, they cause subsequent failures. Otherwise they don&apos;t. Ouch.&lt;/p&gt;

&lt;p&gt;Patch follows after these messages...&lt;/p&gt;</description>
                <environment></environment>
            <key id="16772">JAXEN-30</key>
            <summary>XPathReaderFactoryTest is unpredictable</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 26 Jul 2004 18:44:10 -0500</created>
                <updated>Thu, 16 Sep 2004 17:14:25 -0500</updated>
                    <resolved>Thu, 16 Sep 2004 17:14:25 -0500</resolved>
                            <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="22349" author="bazzargh" created="Mon, 26 Jul 2004 18:45:02 -0500"  >&lt;p&gt;this is the patch to fix the problem&lt;/p&gt;</comment>
                    <comment id="24155" author="bazzargh" created="Thu, 16 Sep 2004 17:14:25 -0500"  >&lt;p&gt;applied the rolled up patch in jaxen-35, fixes this.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12641" name="xprft.diff" size="3398" author="bazzargh" created="Mon, 26 Jul 2004 18:45:02 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-29] StringIndexOutOfBoundsException in NormalizeSpaceFunction</title>
                <link>http://jira.codehaus.org/browse/JAXEN-29</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I got a stringindexoutofbounds with code that worked under 1.0, checked the code of NormalizeSpaceFunction and found this:&lt;/p&gt;

&lt;p&gt;        if ( str.length() &amp;lt;= 1 )&lt;/p&gt;
        {
            if (Character.isWhitespace(str.charAt(0)))
                return &quot;&quot;;
            else
                return str;
        }

&lt;p&gt;which will obviously go wrong when str.length() is 0!&lt;/p&gt;

&lt;p&gt;While in there I spotted that this implementation requires a single argument - in the xpath spec, normalize-space with no arguments is also valid, and is equivalent to normalize-space(current()) . I&apos;ll send in patches once I&apos;ve fixed enough to get my build working...&lt;/p&gt;</description>
                <environment>all</environment>
            <key id="16759">JAXEN-29</key>
            <summary>StringIndexOutOfBoundsException in NormalizeSpaceFunction</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="bazzargh">Brian Ewins</reporter>
                        <created>Mon, 26 Jul 2004 16:01:49 -0500</created>
                <updated>Thu, 16 Sep 2004 17:39:08 -0500</updated>
                    <resolved>Thu, 16 Sep 2004 17:39:08 -0500</resolved>
                            <version>1.1</version>
                                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="22350" author="bazzargh" created="Mon, 26 Jul 2004 18:52:47 -0500"  >&lt;p&gt;test case for this bug&lt;/p&gt;</comment>
                    <comment id="22351" author="bazzargh" created="Mon, 26 Jul 2004 18:54:29 -0500"  >&lt;p&gt;patch for this bug. nb I didn&apos;t stick with the stringtokenizer implementation, this should do the same with less copying. Passes the tests for me.&lt;/p&gt;</comment>
                    <comment id="24158" author="bazzargh" created="Thu, 16 Sep 2004 17:39:08 -0500"  >&lt;p&gt;patches applied&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12643" name="nsf.diff" size="2187" author="bazzargh" created="Mon, 26 Jul 2004 18:54:29 -0500" />
                    <attachment id="12642" name="nsft.diff" size="655" author="bazzargh" created="Mon, 26 Jul 2004 18:52:47 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-28] GT / LT refuses to work with long values</title>
                <link>http://jira.codehaus.org/browse/JAXEN-28</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The following maven script snippet tries to compare whether or not a specific file is up-to-date. &lt;/p&gt;

&lt;p&gt;The script fails if I take away the intValue() stuff. The &quot;minus two billions&quot; is because File.lastModified() is a long with a value that overflows int. &lt;/p&gt;


&lt;p&gt;&amp;lt;u:file var=&quot;sourcefile&quot; name=&quot;${maven.javacc.jjtree.grammar}&quot; /&amp;gt;&lt;br/&gt;
&amp;lt;u:file var=&quot;destfile&quot; name=&quot;${maven.javacc.javacc.grammar}&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;j:set var=&quot;regenerateIsNecessary&quot; value=&quot;${&apos;false&apos;}&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;j:if test=&quot;${regenerateIsNecessary == &apos;false&apos;}&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;j:set var=&quot;sfts&quot; &lt;br/&gt;
           value=&quot;${ (sourcefile.lastModified() - 2000000000 )}&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;j:set var=&quot;dfts&quot; &lt;br/&gt;
           value=&quot;${ (destfile.lastModified() - 2000000000 )}&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;j:if test=&quot;${ (sfts.intValue()) gt (dfts.intValue()) }&quot; &amp;gt;&lt;br/&gt;
         &amp;lt;j:set var=&quot;regenerateIsNecessary&quot; value=&quot;${&apos;true&apos;}&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;/j:if&amp;gt;&lt;br/&gt;
&amp;lt;/j:if&amp;gt;&lt;/p&gt;


&lt;p&gt;Comparing the two lastModified()s directly (or the two shorter variables) fails with exception inside the greater-than comparison, because the long values doesn&apos;t get recognised as any of the types that can be compared in a jaxen.parser.ASTGTNode (or whatever the parser node was called again). &lt;/p&gt;


&lt;p&gt;This may be a trouble with jelly, but it does seem like the script is parsed as it should. Very strange that is works with ints but not longs. And very annoying since the actual values to compare overflows int max values.&lt;/p&gt;</description>
                <environment>Maven 1.0</environment>
            <key id="16562">JAXEN-28</key>
            <summary>GT / LT refuses to work with long values</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="eirikma">Eirik Maus</reporter>
                        <created>Mon, 19 Jul 2004 09:10:45 -0500</created>
                <updated>Wed, 19 Jan 2005 09:33:16 -0600</updated>
                    <resolved>Wed, 19 Jan 2005 09:33:16 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="29063" author="elharo" created="Wed, 19 Jan 2005 09:33:16 -0600"  >&lt;p&gt;To fix this I caught the NumberFormatException thrown when parsing an integer value that exceeds the maximum value of an int (2.1 billion or so) and fell back on parsing it as a double. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>eirikma</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-27] Incomplete Step not throwing exceptions</title>
                <link>http://jira.codehaus.org/browse/JAXEN-27</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;A path like &quot;/child::&quot; does not throw an error while XPathReader is parsing this xpath value.&lt;/p&gt;</description>
                <environment></environment>
            <key id="16501">JAXEN-27</key>
            <summary>Incomplete Step not throwing exceptions</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="maheshn">Mahesh N</reporter>
                        <created>Fri, 16 Jul 2004 11:05:23 -0500</created>
                <updated>Sun, 20 Feb 2005 11:59:23 -0600</updated>
                    <resolved>Thu, 16 Sep 2004 17:31:29 -0500</resolved>
                            <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="23286" author="maheshn" created="Fri, 20 Aug 2004 07:58:51 -0500"  >&lt;p&gt;The scenario for the bug jaxen-27 can be understood with the&lt;br/&gt;
following xpath&lt;/p&gt;

&lt;p&gt;   /inv/chid::&lt;/p&gt;

&lt;p&gt;Behaviour :&lt;br/&gt;
Jaxen does not throw any errors.&lt;/p&gt;

&lt;p&gt;Why its wrong:&lt;br/&gt;
According to the XPath 1.0 spec A NodeTest should be a &quot;NameTest&quot; or&lt;br/&gt;
&quot;NodeType &apos;(&apos; &apos;)&apos; &quot; or&lt;br/&gt;
&quot;&apos;processiong-instruction&apos; &apos;(&apos; Literal &apos;)&apos;&quot;.  Since the xpath does not&lt;br/&gt;
confirm to any of these it should be an error.&lt;/p&gt;

&lt;p&gt;The method that should throw the exception:&lt;/p&gt;

&lt;p&gt;nodeTest(int axis)&lt;/p&gt;

&lt;p&gt;It should throw an exception if the switch of Look Ahead (LA) is EOF,&lt;br/&gt;
which is the case when jaxen is parsing for a token after the axis&lt;br/&gt;
&quot;child::&quot; in the above xpath scenario.&lt;/p&gt;

&lt;p&gt;Fix:&lt;br/&gt;
Throw an exception in default cases within nodeTest(int axis) method.&lt;/p&gt;</comment>
                    <comment id="24157" author="bazzargh" created="Thu, 16 Sep 2004 17:31:29 -0500"  >&lt;p&gt;added test and fix for this issue, as described&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>maheshn</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-26] [Re-open JAXEN-25] Incomplete XPaths not giving error while parsing using XPathReader</title>
                <link>http://jira.codehaus.org/browse/JAXEN-26</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;PLease refer to the earlier closed issue &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-25&quot; title=&quot;Incomplete XPaths not giving error while parsing using XPathReader&quot;&gt;&lt;del&gt;JAXEN-25&lt;/del&gt;&lt;/a&gt;. &lt;br/&gt;
After building the latest jar containing the fix, incomplete XPaths&lt;br/&gt;
are still going through without an error.&lt;br/&gt;
Please try with the following.&lt;/p&gt;

&lt;p&gt;1) /invoice/@test[abcd&lt;br/&gt;
2) /invoice/@test[abcd &amp;gt; x&lt;/p&gt;

&lt;p&gt;Just FYI, I have followed the following steps to obtain the latest version of the jaxen from the cs.&lt;/p&gt;

&lt;p&gt;1) cvsgrab -rootUrl &lt;a href=&quot;http://cvs.codehaus.org/viewcvs.cgi&quot;&gt;http://cvs.codehaus.org/viewcvs.cgi&lt;/a&gt; -projectRoot -packagePath jaxen/jaxen -proxyHost &amp;lt;myProxyHost&amp;gt; -proxyPort &amp;lt;myProxyPort&amp;gt;&lt;/p&gt;

&lt;p&gt;2) After having received all the sources, I performed &quot;maven jar&quot; to build the jar file.&lt;/p&gt;

&lt;p&gt;a) It threw an exception about some cvs repository string does not contain six tokens. &lt;br/&gt;
b) Following this, it also failed some regress tests.&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;I think the DocumentNavigatorTest had failed&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;c) I commented out the unit tests witihn the project.xml and re-ran the build. Then I received the jaxen jar file. &lt;span class=&quot;error&quot;&gt;&amp;#91;jaxen-1.1-beta-4.jar&amp;#93;&lt;/span&gt;.&lt;/p&gt;</description>
                <environment></environment>
            <key id="16401">JAXEN-26</key>
            <summary>[Re-open JAXEN-25] Incomplete XPaths not giving error while parsing using XPathReader</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rammenon1999">Ramkumar Menon</reporter>
                        <created>Wed, 14 Jul 2004 07:51:27 -0500</created>
                <updated>Sun, 20 Feb 2005 11:59:36 -0600</updated>
                    <resolved>Thu, 16 Sep 2004 17:12:16 -0500</resolved>
                            <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="24154" author="bazzargh" created="Thu, 16 Sep 2004 17:12:16 -0500"  >&lt;p&gt;I&apos;ve applied the patch to fix this - the two examples you cited are there in test.xml now.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>rammenon1999</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-25] Incomplete XPaths not giving error while parsing using XPathReader</title>
                <link>http://jira.codehaus.org/browse/JAXEN-25</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;While trying to use the XPathReader and the&lt;br/&gt;
DefaultXPathHandler to fire events and handle them for the User&lt;br/&gt;
supplied XPath&lt;span class=&quot;error&quot;&gt;&amp;#91;Using jaxen-1.1-beta-2.jar for this purpose&amp;#93;&lt;/span&gt;&lt;br/&gt;
When a query like &quot;/invoice/address[street &quot; is fired, the Parser does&lt;br/&gt;
not give an error.&lt;br/&gt;
Same happens for an XPath like &lt;br/&gt;
&quot;/invoice/address[(id &amp;gt; 1) and (street/index&quot;&lt;/p&gt;

&lt;p&gt;For the former XPath, the events triggered, in order is given below.&lt;/p&gt;


&lt;p&gt;====================  TRACE  =============================&lt;br/&gt;
startXPath&lt;/p&gt;

&lt;p&gt;startOrExpr&lt;/p&gt;

&lt;p&gt;startAndExpr&lt;/p&gt;

&lt;p&gt;startEqualityExpr&lt;/p&gt;

&lt;p&gt;startRelationalExpr&lt;/p&gt;

&lt;p&gt;startAdditiveExpr&lt;/p&gt;

&lt;p&gt;startMultiplicativeExpr&lt;/p&gt;

&lt;p&gt;startUnaryExpr&lt;/p&gt;

&lt;p&gt;startUnionExpr&lt;/p&gt;

&lt;p&gt;startPathExpr&lt;/p&gt;

&lt;p&gt;startAbsoluteLocationPath&lt;/p&gt;

&lt;p&gt;startNameStep :Local Name = invoice Axis = 1&lt;/p&gt;

&lt;p&gt;endNameStep&lt;/p&gt;

&lt;p&gt;startNameStep :Local Name = address Axis = 1&lt;/p&gt;

&lt;p&gt;startPredicate&lt;/p&gt;

&lt;p&gt;startOrExpr&lt;/p&gt;

&lt;p&gt;startAndExpr&lt;/p&gt;

&lt;p&gt;startEqualityExpr&lt;/p&gt;

&lt;p&gt;startRelationalExpr&lt;/p&gt;

&lt;p&gt;startAdditiveExpr&lt;/p&gt;

&lt;p&gt;startMultiplicativeExpr&lt;/p&gt;

&lt;p&gt;startUnaryExpr&lt;/p&gt;

&lt;p&gt;startUnionExpr&lt;/p&gt;

&lt;p&gt;startPathExpr&lt;/p&gt;

&lt;p&gt;startRelativeLocationPath&lt;/p&gt;

&lt;p&gt;startNameStep :Local Name = streetAxis = 1&lt;/p&gt;

&lt;p&gt;endNameStep&lt;/p&gt;

&lt;p&gt;endRelativeLocationPath&lt;/p&gt;

&lt;p&gt;endPathExpr&lt;/p&gt;

&lt;p&gt;endUnionExpr&lt;/p&gt;

&lt;p&gt;endUnaryExpr&lt;/p&gt;

&lt;p&gt;endMultiplicativeExpr&lt;/p&gt;

&lt;p&gt;endAdditiveExpr&lt;/p&gt;

&lt;p&gt;endRelationalExpr&lt;/p&gt;

&lt;p&gt;endEqualityExpr&lt;/p&gt;

&lt;p&gt;endAndExpr&lt;/p&gt;

&lt;p&gt;endOrExpr&lt;/p&gt;

&lt;p&gt;endPredicate&lt;/p&gt;

&lt;p&gt;endNameStep&lt;/p&gt;

&lt;p&gt;endAbsoluteLocationPath&lt;/p&gt;

&lt;p&gt;endPathExpr&lt;/p&gt;

&lt;p&gt;endUnionExpr&lt;/p&gt;

&lt;p&gt;endUnaryExpr&lt;/p&gt;

&lt;p&gt;endMultiplicativeExpr&lt;/p&gt;

&lt;p&gt;endAdditiveExpr&lt;/p&gt;

&lt;p&gt;endRelationalExpr&lt;/p&gt;

&lt;p&gt;endEqualityExpr&lt;/p&gt;

&lt;p&gt;endAndExpr&lt;/p&gt;

&lt;p&gt;endOrExpr&lt;/p&gt;

&lt;p&gt;endXPath&lt;/p&gt;</description>
                <environment>Windows</environment>
            <key id="16148">JAXEN-25</key>
            <summary>Incomplete XPaths not giving error while parsing using XPathReader</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rammenon1999">Ramkumar Menon</reporter>
                        <created>Sun, 4 Jul 2004 02:44:39 -0500</created>
                <updated>Mon, 5 Jul 2004 17:25:46 -0500</updated>
                    <resolved>Mon, 5 Jul 2004 17:25:46 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="21389" author="proyal" created="Mon, 5 Jul 2004 17:25:46 -0500"  >&lt;p&gt;Fixed!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>proyal</customfieldvalue>
            <customfieldvalue>rammenon1999</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-24] preceding axis fails to report reverse document order</title>
                <link>http://jira.codehaus.org/browse/JAXEN-24</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;From: Anna Afonchenko &amp;lt;anna@ubaccess.com&amp;gt;&lt;br/&gt;
To: jaxen-interest@lists.codehaus.org&lt;/p&gt;

&lt;p&gt;I am using Jaxen to evaluate XPath expressions in Java (JDOM).&lt;br/&gt;
I encountered problems when comparing results returned by jaxen with&lt;br/&gt;
results returned by other XPath implementation - I was using Saxon.&lt;br/&gt;
Here is my example:&lt;br/&gt;
&amp;lt;html&amp;gt;&lt;br/&gt;
&amp;lt;head&amp;gt;&lt;br/&gt;
&amp;lt;/head&amp;gt;&lt;br/&gt;
&amp;lt;body&amp;gt;&lt;br/&gt;
&amp;lt;p&amp;gt;&lt;br/&gt;
  &amp;lt;span&amp;gt;text1&amp;lt;/span&amp;gt;&lt;br/&gt;
&amp;lt;/p&amp;gt;&lt;br/&gt;
&amp;lt;div&amp;gt;text2&amp;lt;/div&amp;gt;&lt;br/&gt;
&amp;lt;/body&amp;gt;&lt;br/&gt;
&amp;lt;/html&amp;gt;&lt;/p&gt;

&lt;p&gt;I want to get the first preceding element of the div element.&lt;br/&gt;
I apply the following XPath - //div/preceding::*&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;br/&gt;
Saxon results in span element matched.&lt;br/&gt;
Jaxen results in p element matched.&lt;/p&gt;

&lt;p&gt;What I want is the span element.&lt;/p&gt;</description>
                <environment></environment>
            <key id="14705">JAXEN-24</key>
            <summary>preceding axis fails to report reverse document order</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="http://jira.codehaus.org/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="cnentwich">Christian Nentwich</reporter>
                        <created>Tue, 13 Apr 2004 12:40:51 -0500</created>
                <updated>Tue, 12 Apr 2005 13:15:00 -0500</updated>
                    <resolved>Tue, 12 Apr 2005 13:15:00 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="18593" author="cnentwich" created="Tue, 13 Apr 2004 12:41:56 -0500"  >&lt;p&gt;This looks similar to &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-21&quot; title=&quot;inverse order on preceding:: axis&quot;&gt;&lt;del&gt;JAXEN-21&lt;/del&gt;&lt;/a&gt;, but it isn&apos;t.. &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-21&quot; title=&quot;inverse order on preceding:: axis&quot;&gt;&lt;del&gt;JAXEN-21&lt;/del&gt;&lt;/a&gt; is actually misreported.&lt;/p&gt;

&lt;p&gt;Here is some code that reproduces this issue:&lt;/p&gt;

&lt;p&gt;import java.io.StringReader;&lt;br/&gt;
import java.util.Iterator;&lt;br/&gt;
import java.util.List;&lt;/p&gt;

&lt;p&gt;import org.jaxen.jdom.JDOMXPath;&lt;br/&gt;
import org.jdom.Document;&lt;br/&gt;
import org.jdom.input.SAXBuilder;&lt;br/&gt;
import org.jdom.output.XMLOutputter;&lt;/p&gt;

&lt;p&gt;public class TestJ {&lt;/p&gt;

&lt;p&gt;	public static void main(String[] args) throws Exception {
		XMLOutputter outputter = new XMLOutputter();
		SAXBuilder builder = new SAXBuilder();
		Document doc =
			builder.build(
				new StringReader(
					new String(&quot;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt; &amp;lt;span&amp;gt; text1 &amp;lt;/span&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;div&amp;gt; text2 &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;&quot;)));
		JDOMXPath query = new JDOMXPath(&quot;//div/preceding::*&quot;);
		List set = query.selectNodes(doc);
		for (Iterator iter=set.iterator();iter.hasNext();)
			System.out.println(iter.next());
		outputter.output(set, System.out);
	}&lt;br/&gt;
}&lt;/p&gt;</comment>
                    <comment id="28950" author="elharo" created="Fri, 14 Jan 2005 07:54:21 -0600"  >&lt;p&gt;I can reproduce this with a slightly simpler document:&lt;/p&gt;

&lt;p&gt;&amp;lt;body&amp;gt;&amp;lt;p&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&lt;/p&gt;

&lt;p&gt;In code (for XOM):&lt;br/&gt;
     public void testPrecedingAxis() {
      
         Element body = new Element(&quot;body&quot;);
         Element p = new Element(&quot;p&quot;);
         body.appendChild(p);
         Element span = new Element(&quot;span&quot;);
         p.appendChild(span);
         Element div = new Element(&quot;div&quot;);
         body.appendChild(div);
         
         Nodes result = div.query(&quot;preceding::*[1]&quot;);
         assertEquals(1, result.size());
         assertEquals(span, result.get(0));
         
     }&lt;/p&gt;</comment>
                    <comment id="28952" author="elharo" created="Fri, 14 Jan 2005 08:55:22 -0600"  >&lt;p&gt;I&apos;m still trying to work through this one, but I think the problem is in StackedIterator, and I think this affects some other bugs as well. Specifically I think stacking the iterators is producing a breadth-first search when we need to be using a depth-first search instead. &lt;/p&gt;</comment>
                    <comment id="28956" author="bazzargh" created="Fri, 14 Jan 2005 11:05:25 -0600"  >&lt;p&gt;I don&apos;t think its the stacked iterator, I think its the use of &apos;ChildAxisIterator&apos; in that stack.&lt;/p&gt;

&lt;p&gt;The correct logic for PrecedingAxis is roughly this:&lt;/p&gt;

&lt;p&gt;public boolean hasNext() {&lt;br/&gt;
 while (!descendantOrSelfReversed.hasNext()) {&lt;br/&gt;
  while (!precedingSibling.hasNext()) {&lt;br/&gt;
   if (!ancestorOrSelf.hasNext()) {
    return false;
   }&lt;br/&gt;
   precedingSibling = ps(ancestorOrSelf.next());&lt;br/&gt;
  }&lt;br/&gt;
  descendantOrSelfReversed = dosr(precedingSibling.next());	&lt;br/&gt;
 }&lt;br/&gt;
 return true; &lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;public Object next() {&lt;br/&gt;
 if (hasNext()) { return descendantOrSelfReversed.next(); }&lt;br/&gt;
 // throw an exception otherwise&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;initializing this with empty iterators for descendantOrSelfReversed and precedingSibling. The current implementation looks to me like its not reversing descendantOrSelf, but is reversing the order in which the children are accessed on that axis.&lt;/p&gt;</comment>
                    <comment id="28982" author="bazzargh" created="Sat, 15 Jan 2005 20:52:46 -0600"  >&lt;p&gt;after some headscratching I wrote this: its self contained so its simpler to see that it is correct. It passes the tests for everything but dom4j, because, as far as I can tell, that navigator reports parent(Document) as Document, not null. Leaving this for others to see in case I can&apos;t figure it out but I think its worth committing.&lt;/p&gt;</comment>
                    <comment id="29051" author="bazzargh" created="Tue, 18 Jan 2005 20:56:49 -0600"  >&lt;p&gt;Elliotte, I&apos;ve updated the code for the preceding, ancestor, and descendant axes, but added the test you described above for this bug afterwards. It passes, but I&apos;d prefer if you can confirm and close this bug by just updating your &apos;xml&apos; directory first? Its the very first test that runs (see top of tests.xml), I&apos;d expect you to get later test failures for Docment node stringvalues etc.&lt;/p&gt;</comment>
                    <comment id="29061" author="elharo" created="Wed, 19 Jan 2005 08:40:45 -0600"  >&lt;p&gt;Yes, Brian&apos;s latest patches appear to fix this (among other issues).&lt;/p&gt;</comment>
                    <comment id="29082" author="bazzargh" created="Wed, 19 Jan 2005 21:50:31 -0600"  >&lt;p&gt;Tonight I got this bug back again...with the DOM navigator. It seems the bug is intermittent and it may depend on something odd like object identities as hash keys. Commenting out the code overriding the &apos;preceding&apos; axis in the DOM so it gets the new version appears to resolve the problem, but I&apos;ll need to walk the DOM code to be sure its wrong.&lt;/p&gt;</comment>
                    <comment id="29083" author="bazzargh" created="Wed, 19 Jan 2005 22:11:25 -0600"  >&lt;p&gt;yep... the DOM code was wrong. Not sure why this didn&apos;t show up yesterday. Fixed.&lt;/p&gt;</comment>
                    <comment id="31899" author="elharo" created="Tue, 12 Apr 2005 07:19:00 -0500"  >&lt;p&gt;Hmm, this seems to have resurfaced in the DOM navigator. Will investigate further.&lt;/p&gt;</comment>
                    <comment id="31921" author="elharo" created="Tue, 12 Apr 2005 13:15:00 -0500"  >&lt;p&gt;I think I&apos;ve got this fixed. The problem was in dom.DocumentNavigator&apos;s custom PrecedingAxisIterator. For the moment I&apos;ve disabled this so a correct implementation is inherited from the superclass instead. Whether it makes sense to fix that or leave it as is remains to be seen, so I&apos;ll leave this one for now in case someone wants to revisit that.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13819" name="PrecedingAxisIterator.java" size="7266" author="bazzargh" created="Sat, 15 Jan 2005 20:52:46 -0600" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 30 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>cnentwich</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-23] nested &apos; (single quote) expression syntax error</title>
                <link>http://jira.codehaus.org/browse/JAXEN-23</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I am trying to create xpath expr using:&lt;/p&gt;

&lt;p&gt;Navigator nav = DocumentNavigator.getInstance();&lt;br/&gt;
nav..parseXPath(&lt;br/&gt;
&quot;bpws:getVariableData(&apos;input&apos;,&apos;payload&apos;,&apos;/invalidLoanApplication/application/customer&lt;span class=&quot;error&quot;&gt;&amp;#91;@custId=&amp;#39;100&amp;#39;&amp;#93;&lt;/span&gt;&apos;)&quot;)&lt;/p&gt;

&lt;p&gt;Looks like it failed as syntax error because i have this &apos;100&apos; which is nested within &apos;(single quote).&lt;/p&gt;

&lt;p&gt;i get this error for the above code.&lt;/p&gt;

&lt;p&gt;com.werken.saxpath.XPathSyntaxException: 94: Unexpected &apos;100&apos;&lt;br/&gt;
        at com.werken.saxpath.XPathReader.throwSyntaxException(XPathReader.java:1076)&lt;br/&gt;
        at com.werken.saxpath.XPathReader.throwUnexpected(XPathReader.java:1095)&lt;br/&gt;
        at com.werken.saxpath.XPathReader.parse(XPathReader.java:111)&lt;br/&gt;
        at com.collaxa.cube.xml.xpath.XPathExpressionFactory.create(XPathExpressionFactory.java:64)&lt;br/&gt;
        at com.collaxa.xml.XPathTest.main(XPathTest.java:42)&lt;br/&gt;
BPEL-09502&lt;/p&gt;

&lt;p&gt;XPath query syntax error .&lt;br/&gt;
Syntax error while parsing xpath expression &quot;bpws:getVariableData(&apos;input&apos;,&apos;payload&apos;,&apos;/invalidLoanApp&lt;br/&gt;
lication/application/customer&lt;span class=&quot;error&quot;&gt;&amp;#91;@custId=&amp;#39;100&amp;#39;&amp;#93;&lt;/span&gt;&apos;)&quot;, at position &quot;94&quot; the exception is Unexpected &apos;100&apos;.&lt;/p&gt;


&lt;p&gt;i get the same when i tried the latest code which is org.jaxen.saxpath.*&lt;/p&gt;

&lt;p&gt;thanks&lt;br/&gt;
-muruga&lt;/p&gt;</description>
                <environment>Windows</environment>
            <key id="14539">JAXEN-23</key>
            <summary>nested &apos; (single quote) expression syntax error</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="2">Won&apos;t Fix</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="muruga">Muruga Chinnananchi</reporter>
                        <created>Tue, 6 Apr 2004 14:36:27 -0500</created>
                <updated>Tue, 6 Apr 2004 14:49:13 -0500</updated>
                    <resolved>Tue, 6 Apr 2004 14:49:13 -0500</resolved>
                            <version>1.1</version>
                                                <component>saxpath</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="18276" author="bob" created="Tue, 6 Apr 2004 14:49:13 -0500"  >&lt;p&gt;Not a bug.&lt;/p&gt;

&lt;p&gt;Quote 100 as &quot;100&quot; instead of &apos;100&apos;&lt;/p&gt;

&lt;p&gt;xpath is wacky with quotes, but jaxen impls the spec.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 31 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>muruga</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-22] normalize-space doesn&apos;t work on a single-space string</title>
                <link>http://jira.codehaus.org/browse/JAXEN-22</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;If you pass a single-space string (&quot; &quot;) to normalize-space(), it returns the string itself, instead of the empty string.&lt;/p&gt;

&lt;p&gt;This is due to the following code in the NormalizeSpaceFunction class:&lt;/p&gt;

&lt;p&gt;        if ( str.length() &amp;lt;= 1 )&lt;/p&gt;
        {
            return str;
        }


&lt;p&gt;The following code shows this error:&lt;/p&gt;


&lt;p&gt;import org.jaxen.dom.DOMXPath;&lt;br/&gt;
import org.w3c.dom.*;&lt;br/&gt;
import org.xml.sax.InputSource;&lt;/p&gt;

&lt;p&gt;import javax.xml.parsers.DocumentBuilder;&lt;br/&gt;
import javax.xml.parsers.DocumentBuilderFactory;&lt;br/&gt;
import java.io.*;&lt;/p&gt;

&lt;p&gt;public class NormaliseSpaceBug&lt;br/&gt;
{&lt;br/&gt;
    public static void main(String[] arg)&lt;br/&gt;
        throws Exception&lt;/p&gt;
    {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder documentBuilder = factory.newDocumentBuilder();
        
        StringReader stringReader = new StringReader(&quot;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&quot;);
        Document document = documentBuilder.parse(new InputSource(stringReader));
        
        // should print out the node; actually prints out null
        DOMXPath xPath = new DOMXPath(&quot;/p[normalize-space(&apos; &apos;)=&apos;&apos;]&quot;);
        Node node = (Node)xPath.selectSingleNode(document);
        System.out.println(node);
        
        // should print out null; actually prints out the node
        xPath = new DOMXPath(&quot;/p[normalize-space(&apos; &apos;)=&apos; &apos;]&quot;);
        node = (Node)xPath.selectSingleNode(document);
        System.out.println(node);
    }
&lt;p&gt;}&lt;/p&gt;</description>
                <environment></environment>
            <key id="13864">JAXEN-22</key>
            <summary>normalize-space doesn&apos;t work on a single-space string</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="calumm">Calum MacLean</reporter>
                        <created>Wed, 25 Feb 2004 12:04:52 -0600</created>
                <updated>Sun, 20 Feb 2005 11:59:56 -0600</updated>
                    <resolved>Thu, 8 Apr 2004 13:06:55 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="18407" author="dotnot" created="Thu, 8 Apr 2004 13:06:55 -0500"  >&lt;p&gt;Fixed by Christian Nentwich&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 31 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>calumm</customfieldvalue>
            <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-21] inverse order on preceding:: axis</title>
                <link>http://jira.codehaus.org/browse/JAXEN-21</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Experimenting with the jdom xpath interface to jaxen, i realized that the node order returned by a preceding:: selection is inversed.&lt;/p&gt;

&lt;p&gt;As far as i (and others: &lt;a href=&quot;http://www.zvon.org/xxl/XSLTreference/Output/axis_preceding.html&quot;&gt;http://www.zvon.org/xxl/XSLTreference/Output/axis_preceding.html&lt;/a&gt; ) know, the resulting nodes of preceding:: must be &quot;in document order&quot;.&lt;/p&gt;

&lt;p&gt;I wrote this code that shows the issue:&lt;/p&gt;


&lt;p&gt;import java.io.StringReader;&lt;br/&gt;
import java.util.List;&lt;/p&gt;

&lt;p&gt;import org.jdom.Document;&lt;br/&gt;
import org.jdom.input.SAXBuilder;&lt;br/&gt;
import org.jdom.output.XMLOutputter;&lt;br/&gt;
import org.jdom.xpath.XPath;&lt;br/&gt;
import javax.xml.transform.*;&lt;/p&gt;

&lt;p&gt;public class Test {&lt;/p&gt;

&lt;p&gt;  public static void main(String[] args) throws Exception {
    XMLOutputter outputter = new XMLOutputter();
    SAXBuilder builder = new SAXBuilder();
    Document doc = builder.build(new StringReader(new String(&quot;&amp;lt;list&amp;gt;&amp;lt;first/&amp;gt;&amp;lt;entry&amp;gt;1&amp;lt;/entry&amp;gt;&amp;lt;entry&amp;gt;2&amp;lt;/entry&amp;gt;&amp;lt;entry&amp;gt;3&amp;lt;/entry&amp;gt;&amp;lt;last/&amp;gt;&amp;lt;/list&amp;gt;&quot;)));

    XPath query = XPath.newInstance(&quot;preceding::entry&quot;);
    XPath position = XPath.newInstance(&quot;//last&quot;);
    List set = query.selectNodes(position.selectSingleNode(doc));
    outputter.output(set, System.out);
    System.out.println();
    /* outputs &quot;&amp;lt;entry&amp;gt;3&amp;lt;/entry&amp;gt;&amp;lt;entry&amp;gt;2&amp;lt;/entry&amp;gt;&amp;lt;entry&amp;gt;1&amp;lt;/entry&amp;gt;&quot; */

    query = XPath.newInstance(&quot;following::entry&quot;);
    position = XPath.newInstance(&quot;//first&quot;);
    set = query.selectNodes(position.selectSingleNode(doc));
    outputter.output(set, System.out);
    System.out.println();
    /* outputs &quot;&amp;lt;entry&amp;gt;1&amp;lt;/entry&amp;gt;&amp;lt;entry&amp;gt;2&amp;lt;/entry&amp;gt;&amp;lt;entry&amp;gt;3&amp;lt;/entry&amp;gt;&quot; */

  } &lt;br/&gt;
}&lt;/p&gt;</description>
                <environment>jdom-b10, jaxen-1.1-beta-3</environment>
            <key id="13776">JAXEN-21</key>
            <summary>inverse order on preceding:: axis</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="3">Duplicate</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dbu">David Buchmann</reporter>
                        <created>Wed, 18 Feb 2004 09:09:29 -0600</created>
                <updated>Tue, 13 Apr 2004 12:43:31 -0500</updated>
                    <resolved>Tue, 13 Apr 2004 12:43:31 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>jdom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="16904" author="bob" created="Wed, 18 Feb 2004 09:35:03 -0600"  >&lt;p&gt;I think this is correct, though.&lt;/p&gt;

&lt;p&gt;From the spec:&lt;/p&gt;

&lt;p&gt;&quot;For example, preceding::foo&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; returns the first foo element in reverse document order, because the axis that applies to the &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; predicate is the preceding axis; by contrast, (preceding::foo)&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; returns the first foo element in document order, because the axis that applies to the &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; predicate is the child axis.&quot;&lt;/p&gt;</comment>
                    <comment id="16906" author="dbu" created="Wed, 18 Feb 2004 10:04:03 -0600"  >&lt;p&gt;Uups, OK. I just looked up the rfc for xslt which in an example states that the order of preceding:: actually has to be inverted.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116.html#node-sets&quot;&gt;http://www.w3.org/TR/1999/REC-xpath-19991116.html#node-sets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So i guess what i reported is not a bug but the correct functioning. I interpreted the statement in the zvon.org xslt reference wrong. It actually does not say anything about the order of the returned nodes.&lt;/p&gt;</comment>
                    <comment id="18594" author="cnentwich" created="Tue, 13 Apr 2004 12:43:31 -0500"  >&lt;p&gt;The counterexample is handled correctly by Jaxen. &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-24&quot; title=&quot;preceding axis fails to report reverse document order&quot;&gt;&lt;del&gt;JAXEN-24&lt;/del&gt;&lt;/a&gt; is the more severe issue&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 30 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>cnentwich</customfieldvalue>
            <customfieldvalue>dbu</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-20] Namespace Axis Iterator fails to include all in-scope namespaces</title>
                <link>http://jira.codehaus.org/browse/JAXEN-20</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I think there is a minor bug in DocumentNavigator.getNamespaceAxisIterator for&lt;br/&gt;
xom, dom4j, and jdom. Since the attribute list in these models isn&apos;t being&lt;br/&gt;
scanned, not all in-scope namespaces are being returned.  Using the following&lt;br/&gt;
jdom code as a example&lt;/p&gt;

&lt;p&gt;    Namespace ns1 = Namespace.getNamespace(&quot;p1&quot;, &quot;www.acme1.org&quot;);&lt;br/&gt;
    Namespace ns2 = Namespace.getNamespace(&quot;p2&quot;, &quot;www.acme2.org&quot;);&lt;br/&gt;
    Element element = new Element(&quot;test&quot;, ns1);&lt;br/&gt;
    Attribute attribute = new Attribute(&quot;foo&quot;, &quot;bar&quot;, ns2);&lt;br/&gt;
    element.setAttribute(attribute);&lt;/p&gt;

&lt;p&gt;which serializes to&lt;/p&gt;

&lt;p&gt;    &amp;lt;p1:test xmlns&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;1=&quot;www.acme1.org&quot; xmlns&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;2=&quot;www.acme2.org&quot; p2:foo=&quot;bar&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;DocumentNavigator.getNamespaceAxisIterator yields&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:p1=&amp;quot;www.acme1.org&amp;quot;, element=test&amp;#93;&lt;/span&gt;&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;xmlns:xml=&amp;quot;http://www.w3.org/XML/1998/namespace&amp;quot;, element=test&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;which is missing the implicit namespace declaration for &quot;www.acme2.org&quot;.&lt;/p&gt;

&lt;p&gt;(From Brad &amp;#8211; hip@cs.okstate.edu)&lt;/p&gt;</description>
                <environment></environment>
            <key id="13474">JAXEN-20</key>
            <summary>Namespace Axis Iterator fails to include all in-scope namespaces</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="proyal">peter royal</reporter>
                        <created>Tue, 27 Jan 2004 21:40:39 -0600</created>
                <updated>Mon, 3 Jul 2006 13:17:31 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 13:17:31 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>dom4j</component>
                <component>jdom</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28925" author="elharo" created="Thu, 13 Jan 2005 22:09:14 -0600"  >&lt;p&gt;XOM 1.1 has its own Navigator class which provides all namespaces in scope. This is independent of the class bundled with Jaxen&lt;/p&gt;</comment>
                    <comment id="29700" author="elharo" created="Tue, 8 Feb 2005 22:36:04 -0600"  >&lt;p&gt;I&apos;ve checked in tests for this issue for dom4j and JDOM. &lt;/p&gt;</comment>
                    <comment id="30049" author="maartenc" created="Sat, 19 Feb 2005 06:42:39 -0600"  >&lt;p&gt;A patch for the dom4j navigator.&lt;/p&gt;</comment>
                    <comment id="68850" author="hip" created="Mon, 3 Jul 2006 12:02:40 -0500"  >&lt;p&gt;A patch for JDOM&apos;s DocumentNavigator.java&lt;/p&gt;</comment>
                    <comment id="68855" author="elharo" created="Mon, 3 Jul 2006 13:17:31 -0500"  >&lt;p&gt;Bradley Huffman&apos;s patch seems to have resolved this for JDOM&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="14006" name="jaxen.patch" size="2330" author="maartenc" created="Sat, 19 Feb 2005 06:42:39 -0600" />
                    <attachment id="21321" name="jaxen_jdom.patch" size="930" author="hip" created="Mon, 3 Jul 2006 12:02:40 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>hip</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>maartenc</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-19] Results not in document order when using DescendantOrSelfAxisIterator</title>
                <link>http://jira.codehaus.org/browse/JAXEN-19</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The results for //. would not come in a document order, as required by spec, if the Navigator implementation is using org.jaxen.util. DescendantOrSelfAxisIterator or AncestorOrSelfAxisIterator.&lt;/p&gt;

&lt;p&gt;Problem: &lt;br/&gt;
StackedIterator is using &lt;br/&gt;
      private LinkedList iteratorStack &lt;br/&gt;
as a queue instead of a stack also pushIterator() should be called only once in the constructor and then after each next().&lt;/p&gt;


&lt;p&gt;Here is the patch for fixing it:&lt;/p&gt;

&lt;p&gt;Index: src/java/main/org/jaxen/util/AncestorAxisIterator.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/util/AncestorAxisIterator.java,v&lt;br/&gt;
retrieving revision 1.5&lt;br/&gt;
diff -c -r1.5 AncestorAxisIterator.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;src/java/main/org/jaxen/util/AncestorAxisIterator.java	29 Jun 2003 18:01:34 -0000	1.5&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;src/java/main/org/jaxen/util/AncestorAxisIterator.java	4 Nov 2003 00:53:21 -0000&lt;br/&gt;
***************&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul&gt;
			&lt;li&gt;75,80 ****&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;75,81 ----&lt;br/&gt;
      {
          super( contextNode,
                 navigator );
+         pushIterator( internalCreateIterator( contextNode ) );
      }&lt;br/&gt;
  &lt;br/&gt;
      protected AncestorAxisIterator()&lt;br/&gt;
Index: src/java/main/org/jaxen/util/DescendantAxisIterator.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/util/DescendantAxisIterator.java,v&lt;br/&gt;
retrieving revision 1.6&lt;br/&gt;
diff -c -r1.6 DescendantAxisIterator.java&lt;br/&gt;
*** src/java/main/org/jaxen/util/DescendantAxisIterator.java	29 Jun 2003 18:01:34 -0000	1.6&lt;br/&gt;
&amp;#8212; src/java/main/org/jaxen/util/DescendantAxisIterator.java	4 Nov 2003 00:53:21 -0000&lt;br/&gt;
***************&lt;br/&gt;
*** 75,80 ****&lt;br/&gt;
&amp;#8212; 75,81 ----&lt;br/&gt;
      {          super( contextNode,                 navigator );+         pushIterator( internalCreateIterator( contextNode ) );      }   }&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;      protected DescendantAxisIterator()&lt;br/&gt;
Index: src/java/main/org/jaxen/util/StackedIterator.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/util/StackedIterator.java,v&lt;br/&gt;
retrieving revision 1.7&lt;br/&gt;
diff -c -r1.7 StackedIterator.java&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;src/java/main/org/jaxen/util/StackedIterator.java	29 Jun 2003 18:01:34 -0000	1.7&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
			&lt;li&gt;src/java/main/org/jaxen/util/StackedIterator.java	4 Nov 2003 00:53:21 -0000&lt;br/&gt;
***************&lt;/li&gt;
		&lt;/ul&gt;
		&lt;ul&gt;
			&lt;li&gt;101,110 ****&lt;br/&gt;
          this.contextNode   = contextNode;&lt;br/&gt;
          this.navigator     = navigator;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;!         pushIterator( internalCreateIterator( contextNode ) );&lt;br/&gt;
      }&lt;/p&gt;

&lt;p&gt;!     private Iterator internalCreateIterator(Object contextNode)&lt;br/&gt;
      {&lt;br/&gt;
          if ( this.created.contains( contextNode ) )&lt;/p&gt;
          {
--- 101,110 ----
          this.contextNode   = contextNode;
          this.navigator     = navigator;
          
!         //pushIterator( internalCreateIterator( contextNode ) );
      }

&lt;p&gt;!     protected Iterator internalCreateIterator(Object contextNode)&lt;br/&gt;
      {&lt;br/&gt;
          if ( this.created.contains( contextNode ) )&lt;br/&gt;
          {&lt;br/&gt;
***************&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;
	&lt;ul&gt;
		&lt;li&gt;
		&lt;ul&gt;
			&lt;li&gt;154,160 ****
      &lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {          if ( iter != null )          {
!             this.iteratorStack.addLast( iter );
          }      }&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;#8212; 154,160 ----&lt;br/&gt;
      {&lt;br/&gt;
          if ( iter != null )&lt;/p&gt;
          {
!             this.iteratorStack.addFirst(iter); //addLast( iter );
          }
&lt;p&gt;      }&lt;/p&gt;</description>
                <environment>Jaxen latest cvs version on November 3, 2003.</environment>
            <key id="12592">JAXEN-19</key>
            <summary>Results not in document order when using DescendantOrSelfAxisIterator</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="2" iconUrl="http://jira.codehaus.org/images/icons/priority_critical.gif">Critical</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="cezar">Cezar Andrei</reporter>
                        <created>Mon, 3 Nov 2003 19:17:26 -0600</created>
                <updated>Tue, 27 Jan 2004 22:02:18 -0600</updated>
                    <resolved>Tue, 27 Jan 2004 22:02:18 -0600</resolved>
                                                            <component>saxpath</component>
                        <due></due>
                    <votes>1</votes>
                          <timeoriginalestimate seconds="900">15 minutes</timeoriginalestimate>
                    <timeestimate seconds="900">15 minutes</timeestimate>
                                  <comments>
                    <comment id="16162" author="proyal" created="Tue, 27 Jan 2004 22:02:18 -0600"  >&lt;p&gt;Patch applied, please cross-check.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 41 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>cezar</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-18] Undeclared namespaces are silently ignored</title>
                <link>http://jira.codehaus.org/browse/JAXEN-18</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Undeclared namespaces are silently ignored&lt;br/&gt;
When Jaxen executes an expression like /p:e and the&lt;br/&gt;
prefix &quot;p&quot; is not declared, Jaxen should not just&lt;br/&gt;
return an empty node set, it should throw an exception.&lt;br/&gt;
The attached patch fixes this issue. It throws just a&lt;br/&gt;
RuntimeException (should it throw another exception?).&lt;/p&gt;

&lt;p&gt;Index: src/java/main/org/jaxen/ContextSupport.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/ContextSupport.java,v&lt;br/&gt;
retrieving revision 1.8&lt;br/&gt;
diff -r1.8 ContextSupport.java&lt;br/&gt;
195,198c195,199&lt;br/&gt;
&amp;lt; &lt;br/&gt;
&amp;lt;         if ( context != null )&lt;br/&gt;
&amp;lt;         {&lt;br/&gt;
&amp;lt;             return context.translateNamespacePrefixToUri( prefix );&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;         String result = context == null ? null : context.translateNamespacePrefixToUri(prefix);&lt;br/&gt;
&amp;gt;         if (result != null || prefix.length() == 0) {
&amp;gt;             return result;
&amp;gt;         } else {&lt;br/&gt;
&amp;gt;             throw new RuntimeException(&quot;Namespace prefix &apos;&quot; + prefix + &quot;&apos; has not been declared&quot;);&lt;br/&gt;
200,201d200&lt;br/&gt;
&amp;lt; &lt;br/&gt;
&amp;lt;         return null;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12567">JAXEN-18</key>
            <summary>Undeclared namespaces are silently ignored</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="avernet">Alessandro Vernet</reporter>
                        <created>Fri, 31 Oct 2003 13:48:55 -0600</created>
                <updated>Sun, 20 Feb 2005 12:00:24 -0600</updated>
                    <resolved>Thu, 8 Apr 2004 13:07:50 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="18408" author="dotnot" created="Thu, 8 Apr 2004 13:07:50 -0500"  >&lt;p&gt;Fixed by Christian Nentwich&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 31 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>avernet</customfieldvalue>
            <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-17] string(/) always returning empty string</title>
                <link>http://jira.codehaus.org/browse/JAXEN-17</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;string&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/check.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; always returning empty string&lt;br/&gt;
When the string() function is called with &quot;/&quot; as&lt;br/&gt;
argument (i.e. when applied on the document itself, not&lt;br/&gt;
the root element), it always returns an empty string.&lt;br/&gt;
The attached patch fixes this issue.&lt;/p&gt;

&lt;p&gt;Index: src/java/main/org/jaxen/function/StringFunction.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/function/StringFunction.java,v&lt;br/&gt;
retrieving revision 1.10&lt;br/&gt;
diff -r1.10 StringFunction.java&lt;br/&gt;
147a148,151&lt;br/&gt;
&amp;gt;         else if ( nav.isDocument(obj) )&lt;br/&gt;
&amp;gt;         {
&amp;gt;             return evaluate(((Document) obj).getRootElement(), nav);
&amp;gt;         }&lt;br/&gt;
159c163&lt;br/&gt;
&amp;lt;             &lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&amp;gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12566">JAXEN-17</key>
            <summary>string(/) always returning empty string</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="avernet">Alessandro Vernet</reporter>
                        <created>Fri, 31 Oct 2003 13:47:45 -0600</created>
                <updated>Tue, 18 Jan 2005 21:34:23 -0600</updated>
                    <resolved>Tue, 18 Jan 2005 21:34:23 -0600</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="28926" author="elharo" created="Thu, 13 Jan 2005 22:16:49 -0600"  >&lt;p&gt;The bug report is accurate. However the patch doesn&apos;t work because it assumes one can cast to Document. However this is not universally true across all the object models JAXEN supports. Which Document class are we casting to? org.w3c.dom.Document? org.jdom.Document? nu.xom.Document?&lt;/p&gt;</comment>
                    <comment id="28927" author="elharo" created="Thu, 13 Jan 2005 22:19:54 -0600"  >&lt;p&gt;I think fixing this is going to require adding a getDocumentStringValue() function to Navigator. Comments? Does anyone see an alternative?&lt;/p&gt;</comment>
                    <comment id="28938" author="bazzargh" created="Fri, 14 Jan 2005 06:15:06 -0600"  >&lt;p&gt;You don&apos;t need getDocumentStringValue() - in fact getElementStringValue() isn&apos;t required either. I was looking at this one last night, the logic should be this, for both:&lt;/p&gt;

&lt;p&gt;if (nav.isElement(node) || nav.isDocument(node)) {&lt;br/&gt;
StringBuffer sb = new StringBuffer();&lt;br/&gt;
Iterator desc = nav.getDescendantAxisIterator(node);&lt;br/&gt;
while (desc.hasNext()) {&lt;br/&gt;
  Object dnode = desc.next();&lt;br/&gt;
  if (nav.isText(dnode)) {
     sb.append(nav.getTextStringValue());
  }&lt;br/&gt;
}&lt;br/&gt;
return sb.toString();&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Since this doesn&apos;t depend on the object model, it doesn&apos;t belong in the navigator. I&apos;ve added test cases for this and deprecated getElementStringValue() - its not used any more.&lt;/p&gt;</comment>
                    <comment id="28941" author="elharo" created="Fri, 14 Jan 2005 06:40:44 -0600"  >&lt;p&gt;Good. Thanks. However do we really want to deprecate getElementStringValue()? It&apos;s a potentially useful operation in itself, eve if it can be implemented on top of other methods as you show. As a matter of consistency it would seem to be nice to have&lt;/p&gt;

&lt;p&gt;getFOOStringValue&lt;/p&gt;

&lt;p&gt;methods for all seven XPath node types including document and element, rather than only those that can&apos;t be implemented on top of the others.&lt;/p&gt;

&lt;p&gt;This is similar to how Jaxen has getFOOAxisIterator methods for all 12 XPath axes, even though half of them can be implemented in terms of the other other half. Haveinl all the methods feels more complete.&lt;/p&gt;</comment>
                    <comment id="28946" author="bazzargh" created="Fri, 14 Jan 2005 07:19:39 -0600"  >&lt;p&gt;The reason for the axis iterator methods, as I understood it, was to allow for overrides by more efficient implementations, while providing default implementations in terms of a basis set. As it happens (if you look at the bug with the preceding axis) the wrong basis set has been chosen &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. I can see the argument though.&lt;/p&gt;

&lt;p&gt;As with much of the jaxen code, the choices aren&apos;t great:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add the getDocumentStringValue() method, changing the public API;&lt;/li&gt;
	&lt;li&gt;add a special case for Document to stringfunction, duplicating the code that&apos;s used for Element (its already duplicated several times over)&lt;/li&gt;
	&lt;li&gt;implement the Document and Element cases in stringfunction, and /dont/ deprecate getElementStringValue, even though its not called by the test cases or the engine&lt;/li&gt;
	&lt;li&gt;as above but deprecate gESV&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I deprecated the element method rather than add a document method to avoid breaking any third-party navigators. I&apos;ve previously suggested on the list that we get out a bugfix release in the immediate future, then do any work that breaks APIs. JAXP1.3 support, for example, will break lots of things.&lt;/p&gt;</comment>
                    <comment id="29058" author="bazzargh" created="Tue, 18 Jan 2005 21:34:23 -0600"  >&lt;p&gt;unit test and code added as described above. I didn&apos;t deprecate the elementstringvalue call, as per Elliottes request.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>avernet</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-16] XPath expression returns namespace declaration on DOM4J</title>
                <link>http://jira.codehaus.org/browse/JAXEN-16</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;XPath expression returns namespace declaration on DOM4J&lt;br/&gt;
XPath expression /a/b on document &amp;lt;a xmlns:b=&quot;...&quot;/&amp;gt;&lt;br/&gt;
returns the namespace declaration for b. Fix attached.&lt;/p&gt;

&lt;p&gt;Index: src/java/main/org/jaxen/dom4j/DocumentNavigator.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/dom4j/DocumentNavigator.java,v&lt;br/&gt;
retrieving revision 1.22&lt;br/&gt;
diff -u -r1.22 DocumentNavigator.java&lt;br/&gt;
&amp;#8212; src/java/main/org/jaxen/dom4j/DocumentNavigator.java	4 Dec 2002 18:29:27 -0000	1.22&lt;br/&gt;
+++ src/java/main/org/jaxen/dom4j/DocumentNavigator.java	17 Jun 2003 02:20:15 -0000&lt;br/&gt;
@@ -211,8 +211,13 @@&lt;br/&gt;
         if ( contextNode instanceof Branch )&lt;br/&gt;
         {&lt;br/&gt;
             Branch node = (Branch) contextNode;&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;return node.nodeIterator();&lt;br/&gt;
+            ArrayList children = new ArrayList();&lt;br/&gt;
+            for (Iterator i = node.nodeIterator(); i.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {
+                Node child = (Node) i.next();
+                if (! (child instanceof Namespace))
+                    children.add(child);
+            }&lt;br/&gt;
+            return children.iterator();&lt;br/&gt;
         }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;         return null;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12565">JAXEN-16</key>
            <summary>XPath expression returns namespace declaration on DOM4J</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="avernet">Alessandro Vernet</reporter>
                        <created>Fri, 31 Oct 2003 13:25:38 -0600</created>
                <updated>Mon, 3 Jul 2006 06:46:30 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 06:46:30 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>dom4j</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="68818" author="elharo" created="Mon, 3 Jul 2006 06:46:30 -0500"  >&lt;p&gt;Seems to be working now. Possibly other changes in the last three years fixed this. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>avernet</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-15] XPath predicates return output different than apache xalan</title>
                <link>http://jira.codehaus.org/browse/JAXEN-15</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Please see &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23933&quot;&gt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23933&lt;/a&gt;&lt;br/&gt;
Which I think describes the issue and saves me retyping essentially the same data.&lt;/p&gt;</description>
                <environment>Win 32 but assume this is a cross platform issue.</environment>
            <key id="12421">JAXEN-15</key>
            <summary>XPath predicates return output different than apache xalan</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="3">Duplicate</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="tony">Anthony Palmer</reporter>
                        <created>Wed, 22 Oct 2003 05:45:22 -0500</created>
                <updated>Wed, 19 Jan 2005 10:30:52 -0600</updated>
                    <resolved>Wed, 19 Jan 2005 10:07:27 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="14295" author="yaar@backweb.com" created="Wed, 22 Oct 2003 08:57:39 -0500"  >&lt;p&gt;I also encountered the same bug while directly using the org.jaxen.pattern.Pattern.matches method.&lt;/p&gt;

&lt;p&gt;Seems that indexing operations such as *&lt;span class=&quot;error&quot;&gt;&amp;#91;position()&amp;#93;&lt;/span&gt;, *&lt;span class=&quot;error&quot;&gt;&amp;#91;last()&amp;#93;&lt;/span&gt; and *&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; are all broken for xpath pattern matching.&lt;/p&gt;

&lt;p&gt;For xpath selections these operation work allright.&lt;/p&gt;</comment>
                    <comment id="29068" author="elharo" created="Wed, 19 Jan 2005 10:07:27 -0600"  >&lt;p&gt;I believe this is a combination of Jaxen-55 and 61, which are now fixed.&lt;/p&gt;</comment>
                    <comment id="29070" author="bazzargh" created="Wed, 19 Jan 2005 10:30:52 -0600"  >&lt;p&gt;Not sure this is fixed: the original xalan bug is about the effect of multiple filter expressions as well as descendant-or-self problems. Just to be sure, I&apos;ll add a test case for the example he quotes:&lt;/p&gt;

&lt;p&gt;&quot;If I were to supply the following XML file &lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;Envelope&amp;gt;&lt;br/&gt;
  &amp;lt;Security&amp;gt;&lt;br/&gt;
    &amp;lt;Assertion&amp;gt;1.1&amp;lt;/Assertion&amp;gt;&lt;br/&gt;
    &amp;lt;Assertion&amp;gt;1.2&amp;lt;/Assertion&amp;gt;&lt;br/&gt;
  &amp;lt;/Security&amp;gt;&lt;br/&gt;
  &amp;lt;Security&amp;gt;&lt;br/&gt;
    &amp;lt;Assertion&amp;gt;2.1&amp;lt;/Assertion&amp;gt;&lt;br/&gt;
    &amp;lt;Assertion&amp;gt;2.2&amp;lt;/Assertion&amp;gt;&lt;br/&gt;
  &amp;lt;/Security&amp;gt;&lt;br/&gt;
  &amp;lt;Security&amp;gt;&lt;br/&gt;
    &amp;lt;Assertion&amp;gt;3.1&amp;lt;/Assertion&amp;gt;&lt;br/&gt;
    &amp;lt;Assertion&amp;gt;3.2&amp;lt;/Assertion&amp;gt;&lt;br/&gt;
  &amp;lt;/Security&amp;gt;&lt;br/&gt;
&amp;lt;/Envelope&amp;gt;&lt;/p&gt;

&lt;p&gt;and run the following XPaths &lt;br/&gt;
(//descendant-or-self::Assertion&lt;span class=&quot;error&quot;&gt;&amp;#91;parent::Security&amp;#93;&lt;/span&gt;)&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;  (a)&lt;br/&gt;
//descendant-or-self::Assertion&lt;span class=&quot;error&quot;&gt;&amp;#91;parent::Security&amp;#93;&lt;/span&gt;       (b)&lt;br/&gt;
//descendant-or-self::Assertion&lt;span class=&quot;error&quot;&gt;&amp;#91;parent::Security&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;    (c)&lt;br/&gt;
//descendant-or-self::Assertion&lt;span class=&quot;error&quot;&gt;&amp;#91;parent::Security&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;    (d)&lt;br/&gt;
//descendant-or-self::Assertion&lt;span class=&quot;error&quot;&gt;&amp;#91;parent::Security&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt;    (e)&lt;br/&gt;
The following nodes are returned.&lt;br/&gt;
(I have attached test.xml and test.xsl with output xalan.xml)&lt;br/&gt;
1.1                          (a)&lt;br/&gt;
1.1 1.2 2.1 2.2 3.1 3.2      (b)&lt;br/&gt;
1.1 1.2 2.1 2.2 3.1 3.2      (c)&lt;br/&gt;
1.2 2.2 3.2                  (d)&lt;br/&gt;
2.1                          (e)&lt;/p&gt;

&lt;p&gt;(&apos;//descendant-or-self&apos; is what he wrote - I know that makes no sense)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>tony</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>yaar@backweb.com</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-14] XPath navigator for XOM</title>
                <link>http://jira.codehaus.org/browse/JAXEN-14</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;I have implemented an XPath navigator for XOM,, based on the JDOM navigator). It is tested with the latest CVS and passes all junit tests.&lt;/p&gt;

&lt;p&gt;Besides adding the xom package, I had to change some of the test files, including tests.xml, since XOM requires that namespace uris are proper absolute uris, e.g. &lt;a href=&quot;http://www.xxx.com/&quot;&gt;http://www.xxx.com/&lt;/a&gt;&lt;/p&gt;</description>
                <environment>Latest CVS, XOM1.0d21</environment>
            <key id="12081">JAXEN-14</key>
            <summary>XPath navigator for XOM</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dotnot">Scott Sanders</assignee>
                                <reporter username="hal">Hallvard Tr?tteberg</reporter>
                        <created>Thu, 25 Sep 2003 17:42:03 -0500</created>
                <updated>Sun, 20 Feb 2005 12:01:03 -0600</updated>
                    <resolved>Sun, 28 Sep 2003 21:06:23 -0500</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="86400">1 day</timeoriginalestimate>
                    <timeestimate seconds="86400">1 day</timeestimate>
                                  <comments>
                    <comment id="13820" author="hal" created="Thu, 25 Sep 2003 17:47:46 -0500"  >&lt;p&gt;The zip contains the xom directory with the DocumentNavigator and XOMXPath classes.&lt;/p&gt;</comment>
                    <comment id="13821" author="hal" created="Thu, 25 Sep 2003 17:48:16 -0500"  >&lt;p&gt;The zip file contains the edited xml test files.&lt;/p&gt;</comment>
                    <comment id="13822" author="hal" created="Thu, 25 Sep 2003 17:50:59 -0500"  >&lt;p&gt;The zip contains the test classes (based on jdom&apos;s).&lt;/p&gt;</comment>
                    <comment id="13858" author="dotnot" created="Sun, 28 Sep 2003 21:06:23 -0500"  >&lt;p&gt;Code checked in, tests updated.  Test it out and let us know.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="10842" name="test.zip" size="5693" author="hal" created="Thu, 25 Sep 2003 17:50:59 -0500" />
                    <attachment id="10841" name="tests-xml.zip" size="4938" author="hal" created="Thu, 25 Sep 2003 17:48:16 -0500" />
                    <attachment id="10840" name="xom-navigator.zip" size="4341" author="hal" created="Thu, 25 Sep 2003 17:47:46 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                7 years, 6 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>hal</customfieldvalue>
            <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-13] Operators should be left associative</title>
                <link>http://jira.codehaus.org/browse/JAXEN-13</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Due to a poor recursive-descent implementation, operators are tending towards right-associativity instead of left.&lt;/p&gt;</description>
                <environment></environment>
            <key id="10001">JAXEN-13</key>
            <summary>Operators should be left associative</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="proyal">peter royal</assignee>
                                <reporter username="bob">bob mcwhirter</reporter>
                        <created>Sun, 14 Jul 2002 16:11:27 -0500</created>
                <updated>Sun, 20 Feb 2005 12:01:21 -0600</updated>
                    <resolved>Sat, 6 Sep 2003 18:57:19 -0500</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="86400">1 day</timeoriginalestimate>
                    <timeestimate seconds="86400">1 day</timeestimate>
                                  <comments>
                    <comment id="13513" author="proyal" created="Sat, 6 Sep 2003 18:34:08 -0500"  >&lt;p&gt;trying to fix it..&lt;/p&gt;</comment>
                    <comment id="13514" author="proyal" created="Sat, 6 Sep 2003 18:57:19 -0500"  >&lt;p&gt;Fixed. PLEASE CROSS CHECK.. i haven&apos;t hacked at that low of a level in jaxen before..&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                7 years, 10 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-12] Add namespace handling HOWTO to FAQ</title>
                <link>http://jira.codehaus.org/browse/JAXEN-12</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Since the same question came up twice in one day, it is ripe for an FAQ.  See the message at &lt;a href=&quot;http://lists.codehaus.org/pipermail/jaxen-interest/2003q3/000147.html&quot;&gt;http://lists.codehaus.org/pipermail/jaxen-interest/2003q3/000147.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="11147">JAXEN-12</key>
            <summary>Add namespace handling HOWTO to FAQ</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dotnot">Scott Sanders</assignee>
                                <reporter username="dotnot">Scott Sanders</reporter>
                        <created>Tue, 1 Jul 2003 10:33:04 -0500</created>
                <updated>Mon, 31 Oct 2005 20:29:04 -0600</updated>
                    <resolved>Mon, 31 Oct 2005 20:29:04 -0600</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="1209600">2 weeks</timeoriginalestimate>
                    <timeestimate seconds="1209600">2 weeks</timeestimate>
                                  <comments>
                    <comment id="49713" author="elharo" created="Mon, 31 Oct 2005 20:29:04 -0600"  >&lt;p&gt;FAQ written and answered&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 1 week, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>elharo</customfieldvalue>
            <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-11] update xdocs</title>
                <link>http://jira.codehaus.org/browse/JAXEN-11</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Need to thoroughly go through the xdocs/ and adjust everything to acknowledge that we no longer favour sourceforge, no longer own saxpath.org, etc.&lt;/p&gt;

&lt;p&gt;should also copy the 1.0-fcs release over to ibiblio to keep everything together.&lt;/p&gt;</description>
                <environment></environment>
            <key id="11137">JAXEN-11</key>
            <summary>update xdocs</summary>
                <type id="3" iconUrl="http://jira.codehaus.org/images/icons/task.gif">Task</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="bob">bob mcwhirter</reporter>
                        <created>Mon, 30 Jun 2003 15:54:54 -0500</created>
                <updated>Mon, 3 Jul 2006 13:21:06 -0500</updated>
                    <resolved>Mon, 3 Jul 2006 13:21:06 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="1800">30 minutes</timeoriginalestimate>
                    <timeestimate seconds="1800">30 minutes</timeestimate>
                                  <comments>
                    <comment id="30088" author="elharo" created="Sun, 20 Feb 2005 14:35:37 -0600"  >&lt;p&gt;I did a quick pass through xdocs and fixed the obviously out of date material. I may have missed pieces though. It&apos;s worth someone else looking over too. &lt;/p&gt;</comment>
                    <comment id="68856" author="bob" created="Mon, 3 Jul 2006 13:21:06 -0500"  >&lt;p&gt;quick grep through xdocs/ and everything seems fine.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 18 weeks, 5 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-10] Add support for XOM</title>
                <link>http://jira.codehaus.org/browse/JAXEN-10</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Elliot Rusty Harold has created an XPath implementation for XOM.  We should integrate it into Jaxen, as he has shown interest.&lt;/p&gt;</description>
                <environment></environment>
            <key id="11121">JAXEN-10</key>
            <summary>Add support for XOM</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="3">Duplicate</resolution>
                                <assignee username="dotnot">Scott Sanders</assignee>
                                <reporter username="dotnot">Scott Sanders</reporter>
                        <created>Sun, 29 Jun 2003 16:04:46 -0500</created>
                <updated>Sun, 28 Sep 2003 21:07:32 -0500</updated>
                    <resolved>Sun, 28 Sep 2003 21:07:32 -0500</resolved>
                            <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="604800">1 week</timeoriginalestimate>
                    <timeestimate seconds="604800">1 week</timeestimate>
                                  <comments>
                    <comment id="13859" author="dotnot" created="Sun, 28 Sep 2003 21:07:32 -0500"  >&lt;p&gt;Duplicate of &lt;a href=&quot;http://jira.codehaus.org/browse/JAXEN-14&quot; title=&quot;XPath navigator for XOM&quot;&gt;&lt;del&gt;JAXEN-14&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                7 years, 6 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-9] substring() fails when queried for a substring larger than the string</title>
                <link>http://jira.codehaus.org/browse/JAXEN-9</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;substring(&apos;foo&apos;,1,15) fails with the following exception:&lt;/p&gt;

&lt;p&gt;java.lang.StringIndexOutOfBoundsException: String index out of range: 15&lt;br/&gt;
	at java.lang.String.substring(String.java:1477)&lt;br/&gt;
	at org.jaxen.function.SubstringFunction.evaluate(SubstringFunction.java:140)&lt;br/&gt;
	at org.jaxen.function.SubstringFunction.call(SubstringFunction.java:91)&lt;br/&gt;
	at org.jaxen.expr.DefaultFunctionCallExpr.evaluate(DefaultFunctionCallExpr.java:203)&lt;br/&gt;
	at org.jaxen.expr.DefaultFunctionCallExpr.evaluate(DefaultFunctionCallExpr.java:198)&lt;br/&gt;
	at org.jaxen.expr.DefaultXPathExpr.asList(DefaultXPathExpr.java:107)&lt;br/&gt;
	at org.jaxen.BaseXPath.selectNodesForContext(BaseXPath.java:716)&lt;br/&gt;
	at org.jaxen.BaseXPath.selectSingleNodeForContext(BaseXPath.java:739)&lt;br/&gt;
	at org.jaxen.BaseXPath.stringValueOf(BaseXPath.java:281)&lt;/p&gt;</description>
                <environment>Windows 2000 or OS X, Java 1.4.1, on JBoss 3.0.3</environment>
            <key id="11118">JAXEN-9</key>
            <summary>substring() fails when queried for a substring larger than the string</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dotnot">Scott Sanders</reporter>
                        <created>Sun, 29 Jun 2003 14:32:06 -0500</created>
                <updated>Sun, 20 Feb 2005 12:02:07 -0600</updated>
                    <resolved>Thu, 8 Apr 2004 13:05:44 -0500</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="345600">4 days</timeoriginalestimate>
                    <timeestimate seconds="345600">4 days</timeestimate>
                                  <comments>
                    <comment id="11906" author="dotnot" created="Sun, 29 Jun 2003 14:32:40 -0500"  >&lt;p&gt;I will be fixing this as it is a blocking issue for my current employer.&lt;/p&gt;</comment>
                    <comment id="11907" author="dotnot" created="Sun, 29 Jun 2003 14:33:49 -0500"  >&lt;p&gt;I am also assuming this may happen in substring-before and substring-after.  Will look at these as well.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                7 years, 19 weeks, 6 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-8] JavaBeanNavigator type functionality contribution</title>
                <link>http://jira.codehaus.org/browse/JAXEN-8</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;This is a contribution which was posted to the jaxen-interest list by Michael Brennan of the &quot;swan&quot; project ( &lt;a href=&quot;http://sf.net/projects/swan&quot;&gt;http://sf.net/projects/swan&lt;/a&gt; ).  Below is a copy of the text from his email about his contribution...&lt;/p&gt;


&lt;p&gt;To: jaxen-interest@eng.werken.com&lt;br/&gt;
Subject: Re: &lt;span class=&quot;error&quot;&gt;&amp;#91;jaxen-interest&amp;#93;&lt;/span&gt; any work on JavaBeanNavigator yet?&lt;/p&gt;

&lt;p&gt;I&apos;m behind the curve on this (sorry for responding to a week old&lt;br/&gt;
message). I&apos;ve been on hiatus from this, but am getting back into things&lt;br/&gt;
and catching up on email threads.&lt;/p&gt;

&lt;p&gt;I did actually implement a JavaBeanNavigator awhile back. It was part of&lt;br/&gt;
some other stuff I was working on that has since fallen by the wayside.&lt;br/&gt;
I&apos;m working on some of this stuff again, but not on the JavaBean stuff&lt;br/&gt;
at the moment, so it&apos;s kind of in limbo, right now.&lt;/p&gt;

&lt;p&gt;If anyone wants to take a look at what I did, I&apos;ve thrown a zip up on my&lt;br/&gt;
website at &lt;a href=&quot;http://swan.sourceforge.net/xpath-beans.zip&quot;&gt;http://swan.sourceforge.net/xpath-beans.zip&lt;/a&gt;. It contains&lt;br/&gt;
source and javadoc. My motivation for this was originally as part of an&lt;br/&gt;
XML-based forms package I was experimenting with. That context drove&lt;br/&gt;
some of the design decisions. I don&apos;t know that everyone will agree with&lt;br/&gt;
the approach I took, but if the Jaxen team likes it and has any interest&lt;br/&gt;
in seeing it as part of Jaxen, I&apos;m willing to contribute it. If nothing&lt;br/&gt;
else, perhaps it could be used as a starting point for a design the team&lt;br/&gt;
finds more agreeable.&lt;/p&gt;

&lt;p&gt;My basic approach was to design a tree-based object model with&lt;br/&gt;
interfaces designed to provide just the minimum functionality necessary&lt;br/&gt;
to support Jaxen, then build adapters to various data structures&lt;br/&gt;
(including JavaBeans) using these interfaces. The intent was to make it&lt;br/&gt;
easy to extend the model to other data structures without imposing a&lt;br/&gt;
burden on the adapter implementations of having to implement methods&lt;br/&gt;
that are not needed to support XPath. (In other words, to avoid having&lt;br/&gt;
something like JXPath that uses dummy DOM nodes with a bunch of&lt;br/&gt;
unimplemented methods that are unwanted baggage from adopting DOM APIs).&lt;/p&gt;

&lt;p&gt;I&apos;m happy to hear comments/criticisms/questions if anyone finds any of&lt;br/&gt;
this of interest. Snag the zip, take a look, and let me know what you&lt;br/&gt;
think.&lt;/p&gt;</description>
                <environment></environment>
            <key id="11068">JAXEN-8</key>
            <summary>JavaBeanNavigator type functionality contribution</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="hoju">Jacob Kjome</reporter>
                        <created>Mon, 23 Jun 2003 11:19:37 -0500</created>
                <updated>Tue, 30 May 2006 16:00:49 -0500</updated>
                                                    <fixVersion>1.2</fixVersion>
                                <component>javabean</component>
                        <due></due>
                    <votes>0</votes>
                                                    <comments>
                    <comment id="11818" author="hoju" created="Mon, 23 Jun 2003 11:21:33 -0500"  >&lt;p&gt;xpath-beans.zip file which was obtained from the link &lt;a href=&quot;http://swan.sourceforge.net/xpath-beans.zip&quot;&gt;http://swan.sourceforge.net/xpath-beans.zip&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12373" author="hoju" created="Tue, 22 Jul 2003 16:20:01 -0500"  >&lt;p&gt;minor refactoring of code to work with the latest 1.1-beta2.  Also added beginnings of test cases and a sample demo.  Simply extract to the root of the build and everything will be placed appropriately, then just compile like normal.  There is a readme file along with the demo which shows usage.  The test cases need work.&lt;/p&gt;</comment>
                    <comment id="12423" author="hoju" created="Fri, 25 Jul 2003 01:07:10 -0500"  >&lt;p&gt;Updated XPathTest testcase to work properly. Also updated SampleJavaBean to allow for more complex queries.  ObjectNavigatorTest is something I need some help on figuring how to set up.  See comments in the POJODemoREADME.txt file in the samples directory for more information on this and other issues, plus a bunch of example xpath statements to run against the default SampleJavaBean class.&lt;/p&gt;</comment>
                    <comment id="15323" author="haruki_zaemon" created="Sun, 14 Dec 2003 19:43:15 -0600"  >&lt;p&gt;How is this code going? Are we likely to see it make full release anytime? I sthere anything I can do to help it along the way?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Simon&lt;/p&gt;</comment>
                    <comment id="15324" author="proyal" created="Sun, 14 Dec 2003 21:49:46 -0600"  >&lt;p&gt;sure, feel like applying patches and making a release? &lt;img class=&quot;emoticon&quot; src=&quot;http://jira.codehaus.org/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="17750" author="bob" created="Sun, 21 Mar 2004 19:33:45 -0600"  >&lt;p&gt;I&apos;m a dork.  Didn&apos;t check jira before implementing.&lt;/p&gt;

&lt;p&gt;I&apos;ll take a look at this contrib soon.&lt;/p&gt;</comment>
                    <comment id="28364" author="hoju" created="Tue, 28 Dec 2004 01:49:07 -0600"  >&lt;p&gt;Patch to allow Bob&apos;s committed javabean.DocumentNavigator to try exact matches on method names rather than forcing a prefix of &quot;get&quot; and/or suffix of &quot;s&quot; on a given path.  I&apos;m not quite sure why the new package is &quot;javabean&quot;.  This ought to work for more than classes that adhere to the JavaBean naming conventions, but also to simple POJO&apos;s.&lt;/p&gt;

&lt;p&gt;Jake&lt;/p&gt;</comment>
                    <comment id="66238" author="averyregier" created="Tue, 30 May 2006 16:00:49 -0500"  >&lt;p&gt;This provides bug fixes over the above implementation.  It handles primitive arrays and prevents infinite loops when it comes in contact with a Calendar object.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="13693" name="javabean.DocumentNavigator.java.patch" size="910" author="hoju" created="Tue, 28 Dec 2004 01:49:07 -0600" />
                    <attachment id="20786" name="jaxen-for-beans-src.jar" size="33896" author="averyregier" created="Tue, 30 May 2006 16:00:48 -0500" />
                    <attachment id="10490" name="POJO.zip" size="44851" author="hoju" created="Tue, 22 Jul 2003 16:20:01 -0500" />
                    <attachment id="10504" name="POJO_20030725.zip" size="47409" author="hoju" created="Fri, 25 Jul 2003 01:07:10 -0500" />
                    <attachment id="10363" name="xpath-beans.zip" size="107050" author="hoju" created="Mon, 23 Jun 2003 11:21:33 -0500" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                4 years, 23 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>averyregier</customfieldvalue>
            <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>hoju</customfieldvalue>
            <customfieldvalue>proyal</customfieldvalue>
            <customfieldvalue>haruki_zaemon</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-7] Evaluating last()</title>
                <link>http://jira.codehaus.org/browse/JAXEN-7</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Evaluating last() on a context does not work (1 is always returned). This fixes the issue for me:&lt;/p&gt;

&lt;p&gt;Index: src/java/main/org/jaxen/BaseXPath.java&lt;br/&gt;
===================================================================&lt;br/&gt;
RCS file: /cvsroot/jaxen/jaxen/src/java/main/org/jaxen/BaseXPath.java,v&lt;br/&gt;
retrieving revision 1.23&lt;br/&gt;
diff -u -b -r1.23 BaseXPath.java&lt;br/&gt;
&amp;#8212; src/java/main/org/jaxen/BaseXPath.java      4 Dec 2002 20:24:28 -0000       1.23&lt;br/&gt;
+++ src/java/main/org/jaxen/BaseXPath.java      24 Apr 2003 02:23:14 -0000&lt;br/&gt;
@@ -613,6 +613,7 @@&lt;br/&gt;
         if ( node instanceof List )&lt;/p&gt;
         {
             fullContext.setNodeSet( (List) node );
+            fullContext.setSize( ((List) node).size() );
         }
&lt;p&gt;         else&lt;br/&gt;
         {&lt;/p&gt;

&lt;p&gt;-Alex&lt;/p&gt;</description>
                <environment></environment>
            <key id="10715">JAXEN-7</key>
            <summary>Evaluating last()</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="avernet">Alessandro Vernet</reporter>
                        <created>Wed, 23 Apr 2003 21:25:06 -0500</created>
                <updated>Wed, 19 Jan 2005 10:11:10 -0600</updated>
                    <resolved>Wed, 19 Jan 2005 10:11:11 -0600</resolved>
                                            <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="0">0 minutes</timeoriginalestimate>
                    <timeestimate seconds="0">0 minutes</timeestimate>
                                  <comments>
                    <comment id="28928" author="elharo" created="Thu, 13 Jan 2005 22:35:09 -0600"  >&lt;p&gt;I&apos;m not immediately ablew to reproduce this, and last() in this context is tricky since it depnds on the context node set and context node position. Do you have sample code that demonstrates the bug?&lt;/p&gt;</comment>
                    <comment id="29069" author="elharo" created="Wed, 19 Jan 2005 10:11:10 -0600"  >&lt;p&gt;I suspect this was accidentally fixed by one of the changes in the last couple of years&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 42 weeks, 3 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>avernet</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-6] Lookup of functions in org.jaxen.SimpleFunctionContext</title>
                <link>http://jira.codehaus.org/browse/JAXEN-6</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;When evaluating functions (sum to be spesific), I get an org.jaxen.UnresolvableException from getFunction() in org.jaxen.SimpleFunctionContext.&lt;/p&gt;

&lt;p&gt;The XPath I run is:&lt;/p&gt;

&lt;p&gt;sum(/root/giro/produkter/produkt/sum)&lt;/p&gt;

&lt;p&gt;I run it on the following XML document.&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;!DOCTYPE XML&amp;gt; &lt;br/&gt;
&amp;lt;root&amp;gt;&lt;br/&gt;
  &amp;lt;giro&amp;gt;&lt;br/&gt;
    &amp;lt;betaler&amp;gt;&lt;br/&gt;
      &amp;lt;sted&amp;gt;0168 Oslo&amp;lt;/sted&amp;gt;&lt;br/&gt;
      &amp;lt;adresse&amp;gt;Melkeveien 2&amp;lt;/adresse&amp;gt;&lt;br/&gt;
      &amp;lt;navn&amp;gt;Villy Vonka&amp;lt;/navn&amp;gt;&lt;br/&gt;
    &amp;lt;/betaler&amp;gt;&lt;br/&gt;
    &amp;lt;produkter&amp;gt;&lt;br/&gt;
      &amp;lt;produkt id=&quot;1&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;produktlinje&amp;gt;Bukse&amp;lt;/produktlinje&amp;gt;&lt;br/&gt;
        &amp;lt;sum&amp;gt;1000&amp;lt;/sum&amp;gt;&lt;br/&gt;
      &amp;lt;/produkt&amp;gt;&lt;br/&gt;
      &amp;lt;produkt id=&quot;2&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;produktlinje&amp;gt;Jakke&amp;lt;/produktlinje&amp;gt;&lt;br/&gt;
        &amp;lt;sum&amp;gt;2000&amp;lt;/sum&amp;gt;&lt;br/&gt;
      &amp;lt;/produkt&amp;gt;&lt;br/&gt;
      &amp;lt;produkt id=&quot;3&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;produktlinje&amp;gt;Skjorte&amp;lt;/produktlinje&amp;gt;&lt;br/&gt;
        &amp;lt;sum&amp;gt;500&amp;lt;/sum&amp;gt;&lt;br/&gt;
      &amp;lt;/produkt&amp;gt;&lt;br/&gt;
      &amp;lt;produkt id=&quot;4&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;produktlinje&amp;gt;Slips&amp;lt;/produktlinje&amp;gt;&lt;br/&gt;
        &amp;lt;sum&amp;gt;300&amp;lt;/sum&amp;gt;&lt;br/&gt;
      &amp;lt;/produkt&amp;gt;&lt;br/&gt;
      &amp;lt;suminkmva&amp;gt;3800&amp;lt;/suminkmva&amp;gt;&lt;br/&gt;
      &amp;lt;sumeksmva&amp;gt;3000&amp;lt;/sumeksmva&amp;gt;&lt;br/&gt;
    &amp;lt;/produkter&amp;gt;&lt;br/&gt;
    &amp;lt;fakturanummer&amp;gt;93248347&amp;lt;/fakturanummer&amp;gt;&lt;br/&gt;
    &amp;lt;belop&amp;gt;&lt;br/&gt;
      &amp;lt;kr&amp;gt;3800&amp;lt;/kr&amp;gt;&lt;br/&gt;
      &amp;lt;ore&amp;gt;00&amp;lt;/ore&amp;gt;&lt;br/&gt;
    &amp;lt;/belop&amp;gt;&lt;br/&gt;
    &amp;lt;kid&amp;gt;93248347&amp;lt;/kid&amp;gt;&lt;br/&gt;
    &amp;lt;betalingsfrist&amp;gt;20.01.2002&amp;lt;/betalingsfrist&amp;gt;&lt;br/&gt;
    &amp;lt;fakturadato&amp;gt;20.01.2003&amp;lt;/fakturadato&amp;gt;&lt;br/&gt;
  &amp;lt;/giro&amp;gt;&lt;br/&gt;
&amp;lt;/root&amp;gt;&lt;/p&gt;

&lt;p&gt;When debugging I find that the functions referenced in the functions HashMap of org.jaxen.SimpleFunctionContext has keys with namespaceURI=null, whereas the namespaceURI that enters getFunction() is the empty String, &quot;&quot;. This means that a legal function sum isn&apos;t resolved as desired.&lt;/p&gt;

&lt;p&gt;The following fixes my problem, yet without removing the root of the problem. I have changed getFunction() of org.jaxen.SimpleFunctionContext to:&lt;/p&gt;

&lt;p&gt;    public Function getFunction(String namespaceURI,&lt;br/&gt;
                                String prefix,&lt;br/&gt;
                                String localName )&lt;br/&gt;
        throws UnresolvableException&lt;br/&gt;
    {&lt;br/&gt;
        if (&quot;&quot;.equals(namespaceURI)) {
            namespaceURI = null;
        }&lt;/p&gt;

&lt;p&gt;        Object key = new QualifiedName( namespaceURI, localName );&lt;/p&gt;

&lt;p&gt;        if ( this.functions.containsKey(key) )&lt;br/&gt;
            return (Function) this.functions.get( key );&lt;br/&gt;
        else&lt;br/&gt;
            throw new UnresolvableException( &quot;Function &quot; +&lt;br/&gt;
                                             prefix + &quot;:&quot; + localName );&lt;br/&gt;
    }&lt;/p&gt;</description>
                <environment>Windows 2000, Jdk 1.4.1</environment>
            <key id="10512">JAXEN-6</key>
            <summary>Lookup of functions in org.jaxen.SimpleFunctionContext</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="brynjarg">Brynjar Glesnes</reporter>
                        <created>Wed, 5 Mar 2003 10:52:24 -0600</created>
                <updated>Thu, 13 Jan 2005 22:39:27 -0600</updated>
                    <resolved>Thu, 13 Jan 2005 22:39:27 -0600</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="0">0 minutes</timeoriginalestimate>
                    <timeestimate seconds="0">0 minutes</timeestimate>
                                  <comments>
                    <comment id="28929" author="elharo" created="Thu, 13 Jan 2005 22:39:27 -0600"  >&lt;p&gt;Possibly this has been fixed sometime in the last 2 years. It does not appear to be currently a problem:&lt;/p&gt;

&lt;p&gt;Document :: /Users/elharo/test.xml&lt;br/&gt;
   XPath :: sum(/root/giro/produkter/produkt/sum)&lt;/p&gt;

&lt;p&gt;Results&lt;br/&gt;
----------------------------------&lt;br/&gt;
3800.0&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 43 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>brynjarg</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-5] o.j.dom.DocumentNavigator methods do not return null where expected</title>
                <link>http://jira.codehaus.org/browse/JAXEN-5</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Some of the methods in the org.jaxen.dom.DocumentNavigator class declare that they will return null if the argument is not of the expected node type but, in fact, they do not check the node type at all. The affected methods are:&lt;/p&gt;

&lt;p&gt;    getElementNamespaceUri (Object object)&lt;br/&gt;
    getElementName (Object object)&lt;br/&gt;
    getElementQName (Object object)&lt;br/&gt;
    getAttributeNamespaceUri (Object object)&lt;br/&gt;
    getAttributeName (Object object)&lt;br/&gt;
    getAttributeQName (Object object)&lt;/p&gt;

&lt;p&gt;Additionally, the following methods may throw a ClassCastException for the same reason (they do not check the node type of the argument), and they do not have any javadoc comments to advertise their expected behavior:&lt;/p&gt;

&lt;p&gt;    getProcessingInstructionTarget(Object obj)&lt;br/&gt;
    getProcessingInstructionData(Object obj)&lt;/p&gt;</description>
                <environment></environment>
            <key id="10411">JAXEN-5</key>
            <summary>o.j.dom.DocumentNavigator methods do not return null where expected</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="4" iconUrl="http://jira.codehaus.org/images/icons/priority_minor.gif">Minor</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="kermaier">Ari Kermaier</reporter>
                        <created>Fri, 31 Jan 2003 13:27:08 -0600</created>
                <updated>Sat, 26 Apr 2008 18:50:50 -0500</updated>
                                    <version>1.0</version>
                <version>1.1</version>
                                <fixVersion>1.2</fixVersion>
                                <component>dom</component>
                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="28930" author="elharo" created="Thu, 13 Jan 2005 22:40:47 -0600"  >&lt;p&gt;We should evaluate the whole idea of returning null when an unexpected node type is received. In general, I think throwing an exception would be a much better option than returning null. &lt;/p&gt;</comment>
                    <comment id="28942" author="bazzargh" created="Fri, 14 Jan 2005 06:52:47 -0600"  >&lt;p&gt;I guess its worth pointing out that these methods are never called incorrectly in jaxen: there&apos;s always a call to &apos;isElement()&apos; prior to &apos;getElementStringValue&apos; for example. (the calls should probably be to getNodeType() in most cases, but thats another issue)&lt;/p&gt;

&lt;p&gt;I wouldn&apos;t &apos;fix&apos; these methods as it would involve duplicating the check that needs to be done outside the call anyway. How about changing the documentation so that &apos;calling getElementStringValue on a non-Element node has an undefined result&apos;?&lt;/p&gt;

&lt;p&gt;On your point about nulls: totally agree. There is no null in the xpath datamodel. Null nodesets should be empty Lists, null Strings should be &quot;&quot;, everything else follows from the type conversion rules.&lt;/p&gt;</comment>
                    <comment id="28944" author="elharo" created="Fri, 14 Jan 2005 07:04:22 -0600"  >&lt;p&gt;These are public methods so we do need to document what happens when unexpected objects are passed to them. Even if Jaxen never passes the wrong type in, we can&apos;t assume all other code will be equally correct.&lt;/p&gt;</comment>
                    <comment id="28949" author="bazzargh" created="Fri, 14 Jan 2005 07:50:48 -0600"  >&lt;p&gt;I see it differently: the point of the Navigator interface is to specify what jaxen needs from a third party object model. Hence jaxen defines how Navigators should be called. The interface is only public so that it can be implemented by third parties, not called by them. Hence, defining behaviour and adding checks for a calling pattern other than jaxen&apos;s would only end up slowing jaxen down.&lt;/p&gt;

&lt;p&gt;That being said, adding assertions would be the right way to go, if jaxen required 1.4+ to build.&lt;/p&gt;

&lt;p&gt;(just my opinion, I&apos;m a committer not the project lead. Its worth discussing on the list)&lt;/p&gt;</comment>
                    <comment id="29052" author="bazzargh" created="Tue, 18 Jan 2005 21:03:58 -0600"  >&lt;p&gt;I&apos;ve updated the code so that none of the get*Iterator methods return null. This makes the code dealing with them simpler (and faster) as they no longer have to check the return value. There&apos;s still nearly 100 unnecessary checks for nulls dealing with these stringvalue methods, I&apos;d like to whittle these down next.&lt;/p&gt;</comment>
                    <comment id="132756" author="elharo" created="Sat, 26 Apr 2008 18:50:21 -0500"  >&lt;p&gt;Performance wise, and code-wise, I think what should happen is &lt;/p&gt;

&lt;p&gt;1. We just make the cast without any check; that is, assume we&apos;re being passed the right type.&lt;br/&gt;
2. If the type is incorrect, allow the ClasscastException to be thrown.&lt;/p&gt;

&lt;p&gt;We could maintain existing behavior if necessary, by catching the ClassCastException and only then returning null. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                2 years, 28 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>kermaier</customfieldvalue>
            <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-4] DOM DocumentNavigator.AttributeIterator returns namespace declarations</title>
                <link>http://jira.codehaus.org/browse/JAXEN-4</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The AttributeIterator for the org.jaxen.dom.DocumentNavigator returns attributes that represent namespace delcarations. This is a problem with mapping DOM2 onto XPath, since DOM2 does not define a Namespace node type, but XPath does. However, since the XPath 1.0 specification says that &quot;There are no attribute nodes corresponding to attributes that declare namespaces&quot;, Jaxen should take steps to ensure that these namespace-attributes do not appear in the attribute axis. Currently, the AttributeIterator constructor just calls the org.w3c.dom.Node.getAttributes() method, and does not filter the result in the next() and hasNext() methods. This means that, using the DOM implementation, the attribute and namespace axes will intersect, in violation of the XPath specification.&lt;/p&gt;</description>
                <environment></environment>
            <key id="10410">JAXEN-4</key>
            <summary>DOM DocumentNavigator.AttributeIterator returns namespace declarations</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="elharo">Elliotte Rusty Harold</assignee>
                                <reporter username="kermaier">Ari Kermaier</reporter>
                        <created>Fri, 31 Jan 2003 13:13:09 -0600</created>
                <updated>Tue, 8 Feb 2005 15:53:21 -0600</updated>
                    <resolved>Tue, 8 Feb 2005 15:53:21 -0600</resolved>
                            <version>1.0</version>
                <version>1.1</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                          <timeoriginalestimate seconds="0">0 minutes</timeoriginalestimate>
                    <timeestimate seconds="0">0 minutes</timeestimate>
                                  <comments>
                    <comment id="29686" author="elharo" created="Tue, 8 Feb 2005 15:53:21 -0600"  >&lt;p&gt;Fixed by having isAttribute return false for&lt;br/&gt;
Attr objects that represent xmlns and xmlns:pre&lt;br/&gt;
attributes&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                5 years, 39 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>kermaier</customfieldvalue>
            <customfieldvalue>elharo</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-3] Cannot evaluvate XPath expression</title>
                <link>http://jira.codehaus.org/browse/JAXEN-3</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;Hi :&lt;br/&gt;
 I am running into a problem with an XML query &lt;br/&gt;
 using Jaxen.&lt;br/&gt;
I have a following XML file :&lt;/p&gt;

&lt;p&gt; &amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
 &amp;lt;Configuration&amp;gt;&lt;br/&gt;
     &amp;lt;hostname&amp;gt;&lt;br/&gt;
         &amp;lt;val&amp;gt;2&amp;lt;/val&amp;gt;&lt;br/&gt;
         &amp;lt;attrlist&amp;gt;&lt;br/&gt;
             &amp;lt;hostname&amp;gt;CE-A&amp;lt;/hostname&amp;gt;&lt;br/&gt;
         &amp;lt;/attrlist&amp;gt;&lt;br/&gt;
     &amp;lt;/hostname&amp;gt;&lt;br/&gt;
     &amp;lt;hostname&amp;gt;&lt;br/&gt;
         &amp;lt;val&amp;gt;1&amp;lt;/val&amp;gt;&lt;br/&gt;
         &amp;lt;attrlist&amp;gt;&lt;br/&gt;
             &amp;lt;hostname&amp;gt;CE-B&amp;lt;/hostname&amp;gt;&lt;br/&gt;
         &amp;lt;/attrlist&amp;gt;&lt;br/&gt;
     &amp;lt;/hostname&amp;gt;&lt;br/&gt;
 &amp;lt;/Configuration&amp;gt;&lt;/p&gt;

&lt;p&gt; And I am trying to evaluvate following XPath expression :&lt;/p&gt;

&lt;p&gt;The following expressions work :&lt;br/&gt;
/Configuration&lt;br/&gt;
/Configuration/hostname&lt;br/&gt;
/Configuration/hostname/attrlist&lt;br/&gt;
/Configuration/hostname/attrlist/hostname&lt;br/&gt;
However it breaks when I try to do&lt;br/&gt;
/Configuration/hostname/attrlist/hostname&lt;span class=&quot;error&quot;&gt;&amp;#91;. = &amp;#39;CE-A&amp;#39;&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Please let me know when this problem is fixed.&lt;br/&gt;
-vibhu&lt;/p&gt;</description>
                <environment>Solaris 2.6 + JDK 1.4</environment>
            <key id="10235">JAXEN-3</key>
            <summary>Cannot evaluvate XPath expression</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="5">Cannot Reproduce</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="vibhu_pratap">Vibhu Pratap</reporter>
                        <created>Tue, 1 Oct 2002 00:15:57 -0500</created>
                <updated>Sun, 20 Feb 2005 12:02:53 -0600</updated>
                    <resolved>Thu, 16 Sep 2004 18:24:50 -0500</resolved>
                            <version>1.0</version>
                                                        <due></due>
                    <votes>1</votes>
                          <timeoriginalestimate seconds="0">0 minutes</timeoriginalestimate>
                    <timeestimate seconds="0">0 minutes</timeestimate>
                                  <comments>
                    <comment id="24160" author="bazzargh" created="Thu, 16 Sep 2004 18:24:50 -0500"  >&lt;p&gt;I&apos;ve added exactly the example you describe to the unit tests (file xml/jaxen3.xml) and the test passes. I presume this must have been fixed some time ago.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                6 years, 8 weeks, 2 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>bazzargh</customfieldvalue>
            <customfieldvalue>vibhu_pratap</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-2] Pluggable entity resolution support for document()</title>
                <link>http://jira.codehaus.org/browse/JAXEN-2</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The behavior of the document() function is currently navigator-dependent and hard-wired.  This should be pluggable to allow people to, e.g., retrieve documents from the web, from JNDI, from a database, from a JAR, etc.&lt;/p&gt;

&lt;p&gt;Personally, I came across this issue when I wanted to bundle up Jaxen together with a set of unit tests to validate integrity of the packages but couldn&apos;t get the document() function to look in the JAR instead of the filesystem.&lt;/p&gt;</description>
                <environment></environment>
            <key id="10210">JAXEN-2</key>
            <summary>Pluggable entity resolution support for document()</summary>
                <type id="2" iconUrl="http://jira.codehaus.org/images/icons/newfeature.gif">New Feature</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="1" iconUrl="http://jira.codehaus.org/images/icons/status_open.gif">Open</status>
                    <resolution id="-1">Unresolved</resolution>
                                <assignee username="bob">bob mcwhirter</assignee>
                                <reporter username="paulrbrown">Paul R. Brown</reporter>
                        <created>Sat, 21 Sep 2002 14:53:55 -0500</created>
                <updated>Sun, 20 Feb 2005 11:35:35 -0600</updated>
                                    <version>1.0</version>
                                <fixVersion>2.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                          <timeoriginalestimate seconds="259200">3 days</timeoriginalestimate>
                    <timeestimate seconds="259200">3 days</timeestimate>
                                  <comments>
                    <comment id="10380" author="paulrbrown" created="Sat, 21 Sep 2002 14:56:18 -0500"  >&lt;p&gt;Here is the first email I sent to the list on the subject:&lt;/p&gt;

&lt;p&gt;Right now, the getDocument() function looks like:&lt;/p&gt;

&lt;p&gt;    public Object getDocument(String uri) throws FunctionCallException&lt;br/&gt;
    {&lt;br/&gt;
        try&lt;/p&gt;
        {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setNamespaceAware(true);
            DocumentBuilder builder = factory.newDocumentBuilder();
            return builder.parse( uri );
        }
&lt;p&gt;        catch (Exception e)&lt;/p&gt;
        {
            throw new FunctionCallException(&quot;Failed to parse doucment for URI: &quot; + uri, e);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;I would like to suggest the following enhancements:&lt;/p&gt;

&lt;p&gt;1) Cache the DocumentBuilderFactory and/or DocumentBuilder once created.  (What is the status of a Navigator with respect to threads?)&lt;br/&gt;
2) Supply a method to register an EntityResolver instance with the Navigator so that custom resolution is possible.&lt;/p&gt;

&lt;p&gt;I&apos;ll implement them and submit some code if there is agreement on what to do across the different navigators.&lt;/p&gt;

&lt;p&gt;Thanks in advance.&lt;/p&gt;</comment>
                    <comment id="10381" author="paulrbrown" created="Sat, 21 Sep 2002 14:57:09 -0500"  >&lt;p&gt;And here is the most recent mail I sent to the list:&lt;/p&gt;

&lt;p&gt;A few months back, I talk with James Strachan about enhancing Jaxen so that invocations of the document() function would use custom URI resolvers.&lt;/p&gt;

&lt;p&gt;I reached the point of scoping out the required changes, and I&apos;d like to solicit feedback before making and committing the changes.  Here&apos;s a list of what might be done:&lt;/p&gt;

&lt;p&gt;The document function currently invokes the getDocument() method on the relevant Navigator; getDocument() accepts a URI and returns an Object.  The current implementations are:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;DOM: create new DocumentBuilderFactory, create new DocumentBuilder, call parse on String URI.&lt;/li&gt;
	&lt;li&gt;DOM4J: invoke the read() method on a SAXReader&lt;/li&gt;
	&lt;li&gt;Electric XML: pass a File to the Document() constructor&lt;/li&gt;
	&lt;li&gt;JDOM: pass String URI to the build() method on a SAXBuilder.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In the cases of DOM, JDOM, and DOM4J, the relevant methods all accept org.xml.sax.InputSource, so a switch to using an EntityResolver is straightforward in each case.  For Electric XML, the InputStream or Reader will have to be unbundled from the InputSource, but is a dependency of Jaxen on SAX a desirable thing?  EXML doesn&apos;t include SAX, but use of InputSource would require this.  (I would say that SAX dependency is not a bad thing.)&lt;/p&gt;

&lt;p&gt;The same question arises in the context of using an EntityResolver, i.e., EXML doesn&apos;t presuppose the presence of SAX classes.  (In this case, Jaxen would also need to supply a default entity resolution behavior, i.e., use of java.net.URL.)&lt;/p&gt;

&lt;p&gt;So, any input from the primary architects?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                8 years, 8 weeks ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>bob</customfieldvalue>
            <customfieldvalue>paulrbrown</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>

<item>
            <title>[JAXEN-1] DefaultPathExpr incorrectly modifies evaluation Context</title>
                <link>http://jira.codehaus.org/browse/JAXEN-1</link>
                <project id="10022" key="JAXEN">jaxen</project>
                        <description>&lt;p&gt;The source for the org.jaxen.expr.DefaultPathExpr.evaluate() method is:&lt;/p&gt;

&lt;p&gt;    public Object evaluate(Context context) throws JaxenException&lt;/p&gt;
    {
        Object results = getFilterExpr().evaluate( context );

        context.setNodeSet( convertToList( results ) );

        return getLocationPath().evaluate( context );
    }

&lt;p&gt;It seems to me that invoking the setNodeSet() method on the Context instance that was passed in as an argument is incorrect. Shouldn&apos;t a new Context be created for evaluation of the location path? For example:&lt;/p&gt;

&lt;p&gt;    public Object evaluate(Context context) throws JaxenException&lt;/p&gt;
    {
        Object results = getFilterExpr().evaluate( context );

        Context pathContext =
            new Context( context.getContextSupport() );
        pathContext.setNodeSet( convertToList( results ) );

        return getLocationPath().evaluate( pathContext );
    }

&lt;p&gt;Otherwise, evaluating the LHS of a UnionExpr, for example, could change the context for evaluation of the RHS.&lt;/p&gt;</description>
                <environment></environment>
            <key id="10040">JAXEN-1</key>
            <summary>DefaultPathExpr incorrectly modifies evaluation Context</summary>
                <type id="1" iconUrl="http://jira.codehaus.org/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="http://jira.codehaus.org/images/icons/priority_major.gif">Major</priority>
                    <status id="6" iconUrl="http://jira.codehaus.org/images/icons/status_closed.gif">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dotnot">Scott Sanders</assignee>
                                <reporter username="kermaier">Ari Kermaier</reporter>
                        <created>Wed, 31 Jul 2002 15:50:03 -0500</created>
                <updated>Sun, 20 Feb 2005 12:03:09 -0600</updated>
                    <resolved>Tue, 26 Aug 2003 14:55:56 -0500</resolved>
                            <version>1.0</version>
                                <fixVersion>1.1</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                                                    <comments>
                    <comment id="13156" author="dotnot" created="Tue, 26 Aug 2003 14:54:44 -0500"  >&lt;p&gt;Have added test cases that fail, so now I can fix it.&lt;/p&gt;</comment>
                    <comment id="13157" author="dotnot" created="Tue, 26 Aug 2003 14:55:56 -0500"  >&lt;p&gt;Fixed!  Thanks to Ari for his excellent bug report.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                                    <customfield id="customfield_10163" key="com.atlassian.jira.toolkit:dayslastcommented">
                <customfieldname>Days since last comment</customfieldname>
                <customfieldvalues>
                                7 years, 11 weeks, 4 days ago
    
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_10210" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Number of attachments </customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10161" key="com.atlassian.jira.toolkit:participants">
                <customfieldname>Participants</customfieldname>
                <customfieldvalues>
                                <customfieldvalue>kermaier</customfieldvalue>
            <customfieldvalue>dotnot</customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                                                                                            </customfields>
    </item>
</channel>
</rss>