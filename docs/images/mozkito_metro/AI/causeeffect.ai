%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 16.0.1%%For: (Sascha Just) ()%%Title: (causeeffect.ai)%%CreationDate: 12/12/12 10:57 PM%%Canvassize: 16383%%BoundingBox: 267 366 344 427%%HiResBoundingBox: 267.9492 366.417 343.0498 426.583%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306 396.5 306 396.5%AI3_TileBox: -97.5 117 685.5 676%AI3_DocumentPreview: None%AI5_ArtSize: 76 61%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 197.3335 462 12 2469 1257 26 0 0 46 133 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 104 8%%BeginData: 16772 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD27FFCAFD0BFFA0C3FFCA9AFD0CFFCA6E99CAFFA193A0FD07FFA1%FD0BFF9A9ACAFD0FFFCAFD0BFFCAA0A1FD26FF6F6EA1FD09FFA16868A16F%6875FD0BFF9A9268CAFF996893CAFD05FF9A686FFD09FFA1686893A1FD0C%FFCA6E92A1FD0AFF9A6893FD25FFA19368A0FD09FFCA6E936E9368A0FD0B%FFC36893A1FF6F9393FD06FF9A6893A8FD08FFC36893689AFD0CFFA19268%C3FD0AFF6F936FFD25FF9A6892A1FD09FFA89368936893A8FD0BFFA16E68%A1CA93689AFD06FF9A6E68A1FD08FF75926E6E6EFD0CFFA1686EA1FD09FF%A8936899FD25FF6F936FFD0BFF93936E939AFD0DFF6E939ACA6E939AFD06%FFCA6E92A0FD08FF9A6E936E93CAFD0BFF9A936ECAFD09FFCA6E939AFD24%FFA892689AFD0BFF99689368CAFD0CFFCA93689AA19268A1FD06FFA89368%9AFD08FF6E936E9368C3FD0BFF996893A8FD09FFA16E68A1FD24FFC36892%A1FD0BFF9A936E99FD0EFF93936FC36E92A1FD07FF6F9393FD07FFCA936E%936E929AFD0BFF6F9393FD0AFFC36893A1FD24FF6F9268CAFD0BFF9A6892%A1FD0EFF9A68936F9368CAFD07FF996893A8FD06FFCA686E75936899FD0A%FFA893689AFD0AFF75926ECAFD23FFCA936E99FD0BFFCF6E9368C9FD0EFF%A0926E936E93CAFD07FF9A936ECAFD06FFA19268C999936FFD0AFFCA6E93%A0FD0AFF9A6E93FD24FFA168929AFD0BFF9A6E6E929AFD0EFFC368936893%6EFD08FFA16892A1FD06FFA06893A8A06893A7FD09FFA16E68C3FD0AFF6E%926FFD24FF9A9268CAFD0AFFCA936E93689AFD0EFFA1936E936E99FD08FF%A79368A1FD06FF93936FFFA19268C3FD09FFA06893A7FD09FFCA9368A0FD%23FFA8936893A8FD0AFFA168936E6E6FFD0EFFCA68936E6E6FFD08FFCA6E%6E6FFD05FFCA936893FFCA686E9AFD09FF6F926ECAFD09FFC9686E9AFD23%FFCA6E9399FD0BFF6F936E936E99FD0EFFCA936E9368A0FD09FF996899FD%06FF6E939AFFCA936E9AFD09FF996E99FD0AFFA19268CAFD23FF9A9268A1%FD0AFFA16E689A9A6E6ECAFD0EFF6F936E6E9AFD09FF996E6ECAFD04FFA1%9268A1FFFF6F936EFD08FFCA6E9299FD0AFF9A6893A1FD23FF9A6893CAFD%0AFF9A6E93A8C36893A1FD0EFF9A689368C3FD09FFA16893A1FD04FFC368%92A1FFFF9A6893CAFD07FFA79368A1FD0AFF93936FFD24FF6E6E6FFD0AFF%CA68926FFFA09268A1FD0EFF9A6E6892A1FD09FFA19268A1FD04FF9A9268%CAFFFF9A6E68C3FD07FFA1686EA0FD09FFCA936899FD23FFA19368C3FD0A%FF99936EC9FFCA6E929AFD0EFFC368936ECAFD09FFCA6E939AFD04FF9A6E%93CAFFFFCA6893A0FD07FF9A926ECAFD09FFCF6E939AFD23FFA0686EA1FD%09FFA8926893CAFFA893689AFD0EFFA16E6893CAFD09FFA8936899FD04FF%6F936FFFFFFFA893689AFD07FF9A6893A8FD09FFA16E68A1FD23FF6F936F%FD0AFFA06892A0FFFFFF6E9399FD0EFFCF6E936FFD0BFF6F936FFFFFFFCA%93689AFD04FF93936FFD07FF6F936FFD0AFFC36892A1FD22FFA76E689AFD%09FFCA68936ECAFFFFFF936893CAFD0DFFA8936899CAFD0AFF9A6893A8FF%FFCA686E9AFD04FF9A6893A8FD05FFA893689AFD0AFF9A9268CAFD22FFC3%6893A1FD09FFA0936EA0FD04FF9A936FFD0EFFCF6E936FFD0BFFA0936ECA%FFFFA19368C3FD04FFA09268CAFD05FFCA6E939AFD0AFF9A6E93CAFD22FF%936E68CAFD08FFCA936893A8FD04FFA06893A1FD0DFFA1936E93A8FD0AFF%C368929AFFFFA1686EA1FD04FFC9686E9AFD05FFA16E68A1FD0AFF6F936F%FD22FFCA936E99FD09FFC9689299FD05FFA19268C9FD0DFFC368936ECAFD%0AFFCA93689AFFFF9A936ECAFD04FFA8936E9AFD05FFC36893A1FD09FFCA%93689AFD22FFA168929AFD09FF6F9268CAFD05FFCA686E9AFD0DFF9A6E68%92A1FD0BFF6E6E6FFFFF936893CAFD05FF6E926FFD05FF759268CAFD09FF%CA686E9AFD22FF9A936ECAFD08FFA1936E9AFD06FFCA9368A0FD0DFFA068%9368C3FD0BFF9A6893FFFF6F9393FD06FF9A6E93CAFD04FF9A6E93CAFD09%FFA19368C3FD22FF936893CAFD08FF9A6892A1FD07FF6E6E6FFD0DFF996E%6E929AFD0BFF9A6E68CAA893689AFD06FF9A9268CAFD04FF6E926FFD0AFF%A1686EA1FD21FFCA6E9299FD08FFCA6E936FFD08FF996E93FD0DFF996E93%689AFD0BFFC36892A1CA6E92A0FD06FFC36892A1FFFFFFCA93689AFD0AFF%9A936ECAFD21FF9A9268A1FD08FF9A9268A1FD08FF6F926ECAFD0CFF6E93%6E6E6EFD0BFFA19268A1A16E68A1FD06FFA893689AFFFFFFCA686E9AFD0A%FF936893CAFD21FF9A6E93CAFD07FFCA936E93CAFD08FFC36893A7FD0BFF%CA936E936E93CAFD0BFF6F939AA16E93A8FD07FF6F9393FFFFFFA19268CA%FD0AFF6F9399FD21FFCA6E936FFD08FFA168929AFD09FFA09268A1FD0BFF%CA68936E9368CAFD0AFFCA9368936F936EFD08FF996893CAFFFFA06893A1%FD09FFA893689AFD21FFA19268A1FD08FF93936ECFFD09FFCA6892A0FD0B%FFA1926E936E92A1FD0BFF99936E936E99FD08FF9A9268CAFFFF93936FFD%0AFFCA6E92A0FD21FF9A686EA1FD07FFA192689AFD0AFFA793689AFD0BFF%A168936F9368A1FD0BFFA068936E6E6FFD08FFA1686E9AFFCA936893FD0A%FF9A6E68A1FD21FF93936FFD08FF9A6E93A7FD0BFF6E9399FD0BFF9A936F%C393939AFD0BFFA1936E9368C3FD08FFCA9368A0FFFF6E939AFD0AFFA06E%93A8FD20FFA193689AFD07FFCA68936FFD0CFF936893FD0BFF9A6893A193%6899FD0BFFCA68936E6EA1FD09FF6E6E6FFFA19268A1FD0AFF6F926EFD21%FFA16893A1FD07FF999368CAFD0CFF9A926EFD0BFF6F9393FF6F9393FD0B%FFCA936E936ECAFD09FF9A6E93FFC96892A1FD0AFF936899FD21FF6F6E68%CAFD06FFA7936893A8FD0CFFA0686EA1FD09FFCA936899FF9A6893A8FD0B%FF6F6E6893A8FD09FF9A9268CA9A9268CAFD09FFCA6E6E75FD20FFCA936E%9AFD07FFA16E92A0FD0DFFA19268CAFD09FFCF6E939AFF9A936ECAFD0BFF%9A689393FD0AFFC96893A1A16E93CAFD09FFA19368C3FD20FFC9686E9AFD%06FFCA6E936EFD0EFFC9686E9AFD09FFA19268A1FFA16892A1FD0BFF9A6E%689AFD0AFFA193689A6F936FFD0AFFC3686EA1FD20FF9A936ECAFD06FFA0%9268A1FD0EFFA89368A0FD09FFC96892A1FFA19368C3FD0BFFCA6E929AFD%0BFF6E936F93689AFD0AFF9A936ECAFD1FFFCA936893A8FD05FFA893686E%A8FD0EFFCA68926FFD09FF9A6E68A1FFCA686E9AFD0BFFA192689AFD0BFF%9368936E6E9AFD0AFF9A6893A8FD1FFFCA6E939AFD06FFC96E939AFD10FF%996E99FD09FFC36893A8FFCA93689AFD0BFFC3689393FD0BFF9A936F9368%C3FD0AFF6F9393FD20FF9A6E68C3FD06FF6F9368CAFD10FF6F926ECFFD08%FF75926ECAFFFF6F6E6FFD0BFF99926E93A8FD0AFFA168936E6EA1FD09FF%A893689AFD20FF9A6E93A8FD05FFA793689AFD11FFA06893CAFD08FF9968%93FFFFFF9A6E93CAFD0AFF996E936ECAFD0AFFA7936E936ECAFD09FFCA6E%929AFD1FFFCA68926FFD06FF9A686EA1FD11FF9A6E68C9FD08FF6E6E6FFF%FFFF9A9268CAFD0AFF6E6E6892A1FD0BFF6E936893CAFD09FFA19268A1FD%1FFFA19368A1FD05FFCF6E936FFD12FFC96893A1FD07FFCA93689AFFFFFF%C36893A1FD09FFCA936E9368A1FD0BFF996E9393FD0AFFC36893A1FD1FFF%9A6893A1FD05FF9A9268A1FD12FFA79268A0FD07FFCA686E9AFFFFFFA192%68A1FD09FFC968936E9399FD0BFF9A6E689AFD0AFF75926ECAFD1FFF9393%6FFD05FFCA936893CAFD13FF6F9299FD07FFA19368C3FFFFFFCA6E939AFD%09FFA0936E936E99FD0BFFC36892A0FD0AFF996893FD1FFFA193689AFD05%FFA1686E9AFD13FFA8936893A8FD06FFA16892A1FFFFFFA893689AFD09FF%9A68936E6E68CAFD0AFF9A6E68A0FD0AFF6E6E6FFD1FFFC36892A1FD05FF%93936EFD15FF99936EFD07FF9A936ECAFD04FF6F9393FD09FF9393939A6E%93A7FD0AFFA16E9399FD09FFCA9368A0FD1FFF6F926ECAFD04FFA192689A%FD15FFA06893A7FD06FF9A6893A8FD04FF996893CAFD07FFCA93689AA16E%68A1FD0AFF6F936E93CAFD08FFC9686E9AFD1EFFCA93689AFD05FF996893%A8FD15FFA0926ECAFD06FF93936EFD05FF9A926ECAFD08FF6E929ACA6E92%9AFD0AFF936E936ECAFD08FFA0926ECAFD1EFFC3686E9AFD04FFCA686E6F%FD16FFA1686EA0FD05FFA8936893CAFD04FFA1686EA1FD07FFA19268A1A8%936899FD09FFCA6E936892A1FD08FF9A6893A7FD1EFF9A9368CAFD04FF99%9368CAFD16FFA79368A1FD06FF6F9399FD05FFA19368C3FD07FFC36893A1%FF93936FFD09FFA7936E9368A1FD08FF93936FFD1EFFCA936893A8FFFFFF%A7936893CAFD16FFCA6E9299FD05FFA193689AFD05FFCA686E9AFD07FF9A%9268CAFF9A6893A8FD08FFC368936E9399FD07FFCA936899FD1EFFCA6893%9AFD04FF9A6893A1FD18FF936899FD05FFCA6892A1FD05FFCA936E9AFD07%FF9A6893CAFF9A926ECAFD08FF9A936E936E99FD07FFCF6E929AFD1EFF9A%6E68A1FFFFFFCF6E6E6EFD19FF6F6E6EFD05FFA06E68C3FD06FF6E926FFD%07FF6F6E6EFFFFA1686E9AFD08FF9A68936E6E68CAFD06FFA19268A0FD1E%FF9A6893CAFFFFFFA09368C3FD19FFA06893CAFD04FFA16893CAFD06FF9A%6E93CAFD05FFCA93689AFFFFA8936E9AFD08FF6F9393A16893A1FD06FFC3%6893A1FD1DFFCF6E6E6FFFFFFFA8936893A8FD19FF9A6E68CAFD04FF996E%68CAFD06FF9A926ECAFD05FFCA686E9AFFFFFF6E936FFD07FFCA93689AA1%6E68A1FD06FF9A9268CAFD1DFFA19368A1FFFFFFC368939AFD1AFFC96892%A1FD04FF9A6E93CAFD06FFA16893A1FD05FFA19368C3FFFFFF9A6893CAFD%06FFCA6E929AFF6E9299FD06FF9A6893CAFD1DFF9A6892A1FFFFFF6F6E68%CAFD1AFFA193689AFD04FF6E926FFD07FFA16E68A1FD05FFA06892A1FFFF%FF9A6E68CAFD06FFA19268A1FF936893A8FD05FF6F6E6EFD1EFF6F9393FF%FFFFA793689AFD1CFF6F9399FFFFFFCA936E9AFD07FFCA6E939AFD05FF9A%936ECFFFFFFFC36893A1FD06FFC36893A1FF99936EFD05FFCA93689AFD1D%FFA16E689AFFFFFF9A686EA1FD1BFFCA936893FFFFFFCA68929AFD07FFA8%93689AFD05FF936893CAFFFFFFA16E68A1FD06FF99926ECAFFA1686EA1FD%04FFCA686E9AFD1DFFC36892A1FFFFCA689393FD1DFF93936FFFFFFFA193%68C3FD08FF6F936FFD05FF6F9393FD05FF6E9299FD06FF996893FFFFA193%68A1FD04FFA19368C3FD1DFF6F926ECAFFFF9A6E68A1FD1DFF9A6893A8FF%FFA1686EA1FD07FFCF996893A8FFFFFFA193689AFD04FFA8936893A8FD05%FF6E6E6FFFFFCA68929AFD04FFA06892A1FD1CFFCA936E9AFFFFCA936E93%CFFD1DFF9A936ECAFFFFA0926ECAFD08FF9A936ECFFFFFFFCA6E92A0FD05%FF9A936EFD05FFCA9368A0FFFFCA936E99FD04FF99936FCFFD15FFA8CAA0%9A6F996F9368929AFFFFA1686E9AFD1EFFA16892A1FFFF9A6893A8FD08FF%A1686EA1FFFFFF9A9268A1FD05FFA1686EA1FD04FFC9686E9AFFFFFF6F92%6ECAFFFFFF936893CAFD13FFCA9A9368926E9368936E936E9393A06F936E%CFFD1EFFA79368A1FFFF93936FFD09FFA19368C3FFFFFF9A6893CAFD05FF%A19368C3FD04FFA0926EC9FFFFFFA06893A7FFFFFF6F9393FD12FFA89A68%92689368936E9368936E936893686E689AFD1FFFCA6E6E6FFFFF936893FD%09FFCA686E9AFFFFFF6F6E6EFD06FFCA68929AFD04FF9A6893A7FFFFFFA1%6E68A1FFFFA193689AFD11FFA19368936F936E936F936E936F936E936F93%6E936FC3FD1FFF93689AFFFF6E9399FD09FFCA936E9AFFFFFF93689AFD06%FFCA936E9AFD04FF93936FFD04FFCA6E939AFFFFCA6E92A1FD10FF99926E%936E936E936E936E936E936E936E936E936E93689ACAFD1DFF6F6E6EFFA8%93689AFD0AFF6E926FFFFFCA6E6E99FD07FF6F936EFFFFFFCA936899FD04%FFCA936899FFFF9A9268A1FD0FFF9A926E936E936E936E936E936E936E93%6E936E936E936E936899CFFD1CFF9A6893CACA6E929AFD0AFF996893FFFF%A19368A1FD07FF9A6893CAFFFFFF6E9299FD05FF99936EFFFF9A6893CAFD%0EFF6F6E6E9368936E9368936E9368936E9368936E9368936E936893689A%FD1CFF9A6E68CAA19268A1FD0AFF996E68CAFFA16892A1FD07FF9A6E68C9%FFFFA19268A0FD05FF9A686EA1FF6F6E6EFD0EFFA0936E936E936F936E93%6F936E936F936E936F936E936F936E936F9368C3FD1BFFC96892A1C36893%A1FD0AFFA16893A7FF9A936ECAFD07FFCA6893A0FFFFC36893A1FD05FFA1%9268C9FF93689AFD0DFFA86E68936E936E936E936E936E936E936E936E93%6E936E936E936E936E9368CAFD1AFFA19368A19A926ECAFD0AFFA16E68C3%FF9A6893CAFD07FFA893689AFFFF9A9268CAFD05FFCA686E9ACF6E6E99FD%0DFF9A6E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936FFD1AFFCA6E93999A6893FD0BFFCA6E929AFF93936FFD09FF6F93%6FFFFF9A6893CAFD05FFCA936E9AA19368A1FD0CFFA768936E9368936E93%68936E9368936E9368936E9368936E9368936E9368936E6EA1FD16FFCAA0%9A6E936893689368A1A8FD09FFA89368936F936893A1FD08FF9A6893A0A1%6E6E6EFD07FF6F926F9A6892A1FD0CFF99936F936E936F936E936F936E93%6F936E936F936E936F936E936F936E936F93689AFD15FFA16E936E936E93%6E936E936E939AFD07FFA79A6E936E936E936E936FA0CAFD04FFCA93936E%9368936E9399CAFFFFFFCA99936E936E936E939AFD0AFFA89368936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E9368CAFD%12FFA19368936E936E936E936E936E936E6E68A1FD04FF996E68936E936E%936E93689368939AFFCA9A68936E936E936E936E936899A19A686E68936E%936E936E6E68C3FD08FFC368936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E92A1FD11FFA19368936E936E936E936E%936E936E936E9368A0FFFF6F936E936E936E936E936E936E936E92999968%936E936E936E936E936E936E9368936E936E936E936E936E9368A1FD07FF%75926E9368936E9368936E9368936E9368936E9368936E9368936E936893%6E936893689AFD10FFA192689368936E9368936E9368936E9368936E9368%9A6F6E68936E9368936E9368936E9368936E6E68936E9368936E9368936E%9368936E9368936E9368936E9368936E9368A1FD06FF9A6E936E936F936E%936F936E936F936E936F936E936F936E936F936E936F936E936F9393FD0F%FFCA936E936E936F936E936F936E936F936E936F936E936E936E936F936E%936F936E936F936E936F936E936F936E936F936E936F936E936F936E936F%936E936F936E936F936E936ECAFD05FF6E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E93A8FD0EFF9968936E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936E936E9299FD05FF936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936FFD0EFFCA68936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E93CAFD04FF6E9368936E9368936E9368936E9368936E9368936E9368%936E9368936E9368936E936893A8FD0DFF6F926E9368936E9368936E9368%936E9368936E9368936E9368936E9368936E9368936E9368936E9368936E%9368936E9368936E9368936E9368936E9368936E9368936E9368936E9368%A1FD04FF936E936F936E936F936E936F936E936F936E936F936E936F936E%936F936E936F936E936FFD0DFFCA936E936E936F936E936F936E936F936E%936F936E936F936E936F936E936F936E936F936E936F936E936F936E936F%936E936F936E936F936E936F936E936F936E936F936E936F936E939AFD04%FF6F936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936E936893FD0DFFA168936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E93689AFD04FF9A6E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E9399FD0DFF9A926E936E936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E9399FD04FF9A926E9368%936E9368936E9368936E9368936E9368936E9368936E9368936E93689368%A0FD0DFF9A689368936E9368936E9368936E9368936E9368936E9368936E%9368936E9368936E9368936E9368936E9368936E9368936E9368936E9368%936E9368936E9368936E9368936E936893689AFD04FFCA6E936E936F936E%936F936E936F936E936F936E936F936E936F936E936F936E936E93A1FD0D%FF9A936E936F936E936F936E936F936E936F936E936F936E936F936E936F%936E936F936E936F936E936F936E936F936E936F936E936F936E936F936E%936F936E936F936E936F936E936F92A1FD04FFCA9368936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936FFD0EFF9A6893%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936ECAFD05FF9A936E936E936E936E936E936E936E%936E936E936E936E936E936E936E936E9368A1FD0EFF9A936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E93689AFD07FF6E936E9368936E9368936E9368936E9368936E9368%936E9368936E9368936893A8FD0EFFA168936E9368936E9368936E936893%6E9368936E9368936E9368936E9368936E9368936E9368936E9368936E93%68936E9368936E9368936E9368936E9368936E9368936E936893686EA8FD%07FFC368936E936F936E936F936E936F936E936F936E936F936E936F936E%936F929AFD0FFFA8936E936E936F936E936F936E936F936E936F936E936F%936E936F936E936F936E936F936E936F936E936F936E936F936E936F936E%936F936E936F936E936F936E936F936E936E92A1FD09FF9968936E936E93%6E936E936E936E936E936E936E936E936E936E936E926FFD11FF6F936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E9368929AFD0AFFA8936E936E936E936E936E936E936E936E936E93%6E936E936E936E936ECAFD11FFA168936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E9368936E936E936E936893A1FD0CFFA1936893%68936E9368936E9368936E9368936E9368936E93689368CAFD12FFA89368%936E9368936E9368936E9368936E9368936E936893686E68936E9368936E%9368936E9368936E6E68926E9368936E9368936E9368926ECAA89A6E6E68%9268936FA1A8FD0EFFA79368936F936E936F936E936F936E936F936E936F%936E936ECAFD14FFA1936E936E936F936E936F936E936F936E936F936E93%6E9A6F936F936E936F936E936F936E936E9293CA9A9368936E936E936E93%689399FD05FFA8CAA1CACAFD12FFA89368936E936E936E936E936E936E93%6E936E936E6E6FCAFD16FF9A926E936E936E936E936E936E936E936E936E%936899FFCA6F926E936E936E936E936E93689299FFFFFFA19A6E93686E68%936E9AA1FD1FFFA16E936E936E936E936E936E936E936E9368939AFD19FF%99926E936E936E936E936E936E936E936E936893CAFFFFFF9A9368926E93%6E9368936E99A1FD07FFA1C9A1C3A1FD23FFCA7593686E68936893689368%6E68926E9AA1FD1BFF9A92689368936E9368936E9368936E6E689AA8FD05%FFA8C39A936E936F999ACAFD33FFCAC39A996F936E936E936F9AA1FD1FFF%A79968936E936E936F936E936E926EC3FD47FFCACAA7CAA1CAA8FD24FFA1%6F93686E6892686E68999ACAFD75FFCACAA1A19AC3A1CAFDBCFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.912474 0.787625 0.619837 0.97467 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 AuuUuuU*u1 D0 O0.094789 1 0.977325 0.022492 0.823529 0 0.082353 Xa0 J 0 j 1 w 10 M []0 d0 XR309.6084 415.2041 m305.6143 382.6729 L305.5205 382.6807 305.4258 382.6855 305.3311 382.6895 C299.7939 422.0869 L301.1699 425.1758 L301.3506 425.583 301.168 426.0596 300.7607 426.2412 C300.7607 426.2412 L300.7607 426.2412 L300.3535 426.4229 299.877 426.2393 299.6953 425.832 C299.3701 425.1016 L299.2949 425.6396 L299.2334 426.0811 298.8252 426.3877 298.3838 426.3262 C298.3838 426.3262 L298.3838 426.3262 L297.9424 426.2637 297.6348 425.8564 297.6973 425.415 C298.1318 422.3203 L282.6289 387.499 L282.1348 387.707 281.6289 387.876 281.1143 388.0049 C291.7305 425.0293 L291.8535 425.457 291.6055 425.9043 291.1777 426.0264 C291.1777 426.0264 L291.1777 426.0264 L290.749 426.1494 290.3027 425.9014 290.1797 425.4736 C279.5146 388.2793 L276.4883 388.5625 273.3633 387.5459 271.0459 385.2285 C266.917 381.0996 266.917 374.4043 271.0459 370.2744 c275.1758 366.1455 281.8711 366.1455 286 370.2744 C290.1299 374.4043 290.1299 381.0996 286 385.2285 C285.4043 385.8252 284.7539 386.3359 284.0654 386.7598 C298.5557 419.3057 L303.7148 382.5957 L302.0771 382.3359 300.5029 381.5752 299.2412 380.3125 C296.0625 377.1338 296.0625 371.9795 299.2412 368.8008 C302.4199 365.6221 307.5732 365.6221 310.752 368.8008 C311.1357 369.1846 311.4736 369.5967 311.7646 370.0313 C314.5928 367.2314 319.1543 367.2412 321.9717 370.0576 C322.0527 370.1387 322.1309 370.2207 322.207 370.3047 C324.835 368.21 328.6738 368.3789 331.1064 370.8115 C331.1572 370.8623 331.2061 370.9131 331.2549 370.9648 C333.5996 369.5244 336.709 369.8193 338.7402 371.8506 C341.1172 374.2275 341.1172 378.0811 338.7402 380.457 C337.9961 381.2012 337.1084 381.7119 336.166 381.9902 C343.04 425.3887 L343.1094 425.8291 342.8096 426.2422 342.3691 426.3115 C342.3691 426.3115 L342.3691 426.3115 L342.3691 426.3115 L341.9287 426.3818 341.5156 426.0811 341.4463 425.6416 C334.5723 382.2383 L334.4639 382.2412 334.3564 382.2402 334.248 382.2373 C330.9775 399.0615 L335.1182 425.2002 L335.1875 425.6396 334.8877 426.0527 334.4473 426.123 C334.4473 426.123 L334.4473 426.123 L334.4473 426.123 L334.0068 426.1924 333.5938 425.8926 333.5244 425.4521 C330.0781 403.6924 L325.8896 425.2363 L325.8896 425.2363 L325.8125 425.6318 325.458 425.9043 325.0674 425.8887 C324.9785 426.1709 324.7363 426.3936 324.4238 426.4434 C324.4238 426.4434 L324.4238 426.4434 L324.4238 426.4434 L323.9834 426.5127 323.5703 426.2129 323.501 425.7725 C320.7959 408.6943 L317.8311 425.5059 L317.7539 425.9443 317.3359 426.2373 316.8965 426.1602 C316.8965 426.1602 L316.8965 426.1602 L316.8965 426.1602 L316.458 426.083 316.165 425.6641 316.2422 425.2256 C320.0205 403.7998 L316.6328 382.4072 L316.373 382.3994 316.1143 382.3779 315.8564 382.3428 C311.2363 415.2178 L312.5068 425.5723 L312.5615 426.0146 312.2471 426.417 311.8047 426.4707 C311.8047 426.4707 L311.8047 426.4707 L311.8047 426.4707 L311.3623 426.5254 310.96 426.2109 310.9063 425.7686 C310.3682 421.3906 L309.7363 425.8887 L309.6738 426.3301 309.2666 426.6367 308.8252 426.5752 C308.8252 426.5752 L308.8252 426.5752 L308.3838 426.5127 308.0762 426.1055 308.1387 425.6641 C309.6084 415.2041 Lf0 D310.4766 409.0303 m314.2607 382.0996 L314.2686 382.0469 314.2813 381.9951 314.2979 381.9463 C313.3643 381.5947 312.4893 381.043 311.7373 380.292 C311.5664 380.1211 311.4063 379.9434 311.2559 379.7607 C311.0977 379.9502 310.9307 380.1348 310.752 380.3125 C309.7305 381.334 308.5039 382.0273 307.2051 382.3926 C310.4766 409.0303 Lf320.8809 398.9189 m323.8818 381.9014 L323.8896 381.8574 323.9004 381.8154 323.915 381.7744 C323.1563 381.4756 322.4414 381.0322 321.8125 380.4463 C320.7842 381.4141 319.543 382.0244 318.2451 382.2764 C320.8809 398.9189 Lf321.6563 403.8135 m324.6885 422.96 L329.3398 399.0332 L326.6787 382.2334 L326.2764 382.251 325.8711 382.2334 325.4707 382.1797 C325.4707 382.1807 325.4707 382.1816 V321.6563 403.8135 Lf330.2402 394.4023 m332.6553 381.9746 L331.8877 381.7402 331.1572 381.3516 330.5137 380.8066 C329.8311 381.3447 329.0684 381.7314 328.2705 381.9668 C330.2402 394.4023 Lf*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF