%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 16.0.1%%For: (Sascha Just) ()%%Title: (atomic.ai)%%CreationDate: 12/13/12 12:11 AM%%Canvassize: 16383%%BoundingBox: 1140 -1724 1214 -1657%%HiResBoundingBox: 1140.75 -1723.4336 1213.9482 -1657.6406%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: -97.5 117 685.5 676%AI3_DocumentPreview: None%AI5_ArtSize: 76 70%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -927 1020 1 2469 1257 26 0 0 46 133 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 116 8%%BeginData: 15998 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD23FFA7C3A0A19AC3A1CFA19A6E9399CAFD24FFCAC9A1C39AA1A1%CAFD43FFA8A06E926892686E68926E6E68936E6E68A1FD20FFA19A6E9368%6E6892686E68939ACAFD3FFF9A9368936E936E936E936E936E936E936E93%68CAFD1CFFCAA06F936E936E936E936E936E936E936EA0FD3CFFCA6F6E68%9368936E9368936E9368936E9368936E6E6FFD1AFFCA6F93686E68936E93%68936E9368936E9368936893A8FD3AFF6F936F936E936F936E936E936E93%6F936E936F936E939AFD17FFCAA06E936E936E936F936E936E936E936F93%6E936F936899CFFD38FF6F6E6E936E936E93686E689368936E936E936E93%6E936E926EA1FD14FFA09368936E936E936E936E6E68936E9268926E936E%936E93689AFD37FFA0926E936E936E926EA1A1CAA8CA6F936E936E936E93%6E936E93689AA8FD10FFCF93926E936E936E936E9368999AC3A1CAA8C99A%936E936E936E9368C3FD35FFA89368936E9368929AFD06FF9A689368936E%9368936E936893686EA0FD0EFFA168926E9368936E9368926FA1A8FD07FF%A8A0686E68936E6E68CFFD34FFA168936F936E93A1FD08FF9968936E936E%936E936E936F936E939AFD0CFF9A68936F936E936F936E9ACAFD0CFFC368%936F936E93A0FD34FF6F926E936E6E9AFD09FFCA9A689368939A9A68926E%936E9368926FCAFD08FFA79368936E936E9368926FCAFD0FFF9A68936E93%6893CAFD32FFA1936E936E9393FD0DFFA7CACAFFFFC36E926E936E936E93%6EC9FD06FFA19368936E936E936E93A1FD12FF936E936E9368CAFD32FF9A%68936E9368A1FD13FFCA6F6E68936E93689368A1FD04FF9A92689368936E%93689AA8FD13FFA06E68936E6E9AFD32FF6F936F936E93CAFD15FFA0936E%936E936F9368A1FFFF9A936E936E936F9368C3FD16FF6E936F936E99FD31%FFA89368936E6E6FFD17FFA19368936E936E93689A9A6E68936E936E926E%CAFD17FF9A68936E9368CAFD30FFCA6E936E9368A1FD18FFCA9968936E93%6E9368936E936E936E926FFD19FFA1926E936E93A1FD30FFA0926E936892%A1FD19FFA89A689368936E9368936E93686E6FFD1AFFCA6893689368A1FD%30FFC368936E936ECAFD1BFF9A68936F936E936F936E939AFD1BFFCA936E%936F929AFD30FF9A926E936893CAFD1CFF9A68936E936E936E6E9AFD1DFF%6E936E93689AFD30FF9A68936E936FFD1DFF9A936E936E936E936E9AFD1D%FF936E936E939AFD30FF996E68936893A8FD1BFF6F926E9368936E936893%689AFD1CFF6E936E93689AFD30FF9A68936F936FFD1BFF9A936F936E936E%936E936F9368A1FD1BFF996E936E939AFD30FF996E6E936E93CAFD19FF9A%6E68936E936E9368936E936E9368A1FD1AFF6E936E93689AFD30FF9A6E93%6E936FFD19FFA1936E936E936E929AA168936E936E9368C9FD19FF936E93%6E939AFD30FF75926E936893A8FD17FFA16E68936E9368926FFFFF9A6893%68936E6E68CAFD18FF6E6E6893689AFD30FFC36E936E936FCFFD16FFCA93%6E936F936E9393FD04FF9A68936F936E936FFD17FFCA936E936F939AFD30%FF9A926E936893A7FD16FF9968936E936E6E6EFD05FFCA9368936E936E92%6FFD16FFCA68936E9368A1FD30FFC368936E9368CAFD15FF9A68936E936E%936ECAFD06FFCA936E936E936E929AFD15FFA1936E936E92A1FD30FFA16E%68936E6E9AFD14FFA1689368936E9368C9FD08FFA16E68936E936892A0FD%14FFA168936E9368C9FD30FFCA6E936F9368A0FD13FFCA6E936E936F9368%C3FD0AFFA0936E936E936E93A8FD13FF9A936F936E93CAFD30FFCA936893%6E6E6FFD13FF6F936E936E93689AFD0CFF9A936E936E936893A8FD12FF99%68936E936EFD32FF93936E936E93CAFD11FF9A926E936E936E93A0C3A1C3%A1A19AA19AA1A1C3A1A16E936E936E93689AFD12FF6F936E936E99FD32FF%9A6893689368CAFD0AFFCACAA1A19A9A6F936E9368936E936892686E6892%686E6892686E686E689368936E93689368999AA1A1C9A8FD0BFFA1936893%689299FD32FFA0926E936E93A1FD05FFCACAA0A093936E93689268936E93%6E936F936E936E936E936F936E936F936E936F936E936F936E936F936E93%68926E9393999AC3A1CAFD05FFC968936E9368A1FD32FFC968936E93689A%A8CA9A9A6E93686E68936E9368936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936893686E68926E93%6FA1A1CF9A926E936892A1FD32FFCA936E936E936E9368936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E936E936E936E936E93%6E936E936E936E936E936E936E936E936E936E936E9368936E936E936E93%6EFD33FFCA6E936E936893689368936E9368936E9368936E9368936E9368%93686E6892686E6892686E6892686E6892686E6892686E68936E9368936E%9368936E9368936E9368936E9368936E9368936893A1FD2FFFCAA0996E93%6F936E936F936E936F936E936F936E936E936E936F936E936E936F9A999A%9AA09AA19AC39AA19AC39AA1FD049A93996F936E936F936E936E936E936E%936E936F936E936F936E936F936E9393C3A8FD2AFFA199689268936E936E%936E936E936E936E92689268926E996E936E936E936899CAFD17FF6F6E6E%936E9368936F936892686E68936E936E936E936E936E93689368926FC3CA%FD24FFCAA06E936E936E936E936E936E936E936E926893939A9AC9A8FFA8%936E936E936E93A8FD18FFCA6E936E936E936ECACFCAA1A199936E936893%6E936E936E936E936E936E9368939ACAFD20FFCA6F92686E68936E936893%6E9368936E9368999AA1A8FD06FF9A68936E9368929AFD1AFFA168936893%6E6E6FFD05FFCACAA1A16F6E68936E9368936E9368936E936892689AA1FD%1CFFCA9A68936E936E936F936E936E9368936F936E93A0FD08FFC968936F%936E9393FD1CFF996E936F936E93A1FD08FFA168936F936E936E936E936F%936E936F93689399CAFD18FFCA999268936E936E936E936E6E68939AA068%936E936899FD08FF6F926E936E9368CAFD1CFFA16E68936E936893CAFD07%FF6F926E936E939AA06F6E68936E936E936E936892689AA8FD15FFC36E92%6E936E936E936E9368939ACACAFFFF936E936E9368CAFD06FF9A936E936E%9368A0FD1EFF9A926E936E9368A1FD06FFA7936E936E936EFFFFFFA19A6E%936E936E936E936E936893A0FD12FFA89968936E9368936E9368926FA1A8%FD05FF996E68936E6E9AFD05FFA86E68936E936893A8FD1FFF6E6E68936E%9368CAFD05FFA068936E93689AFD06FFA199686E68936E936893686E6FCA%FD0FFFA19368936F936E936E936EA0CAFD08FFC368936F936E99FD05FF9A%68936F936E93A1FD20FFC968936F936E939AFD05FF6F936F936E93A1FD08%FFCA9A936E936E936F936E936ECAFD0DFF9A9268936E936E9368939ACAFD%0AFFA89368936E9368CAFFFFFFCA68936E936E6E6FFD0DFFCAC9A0A19AA1%A1FD0EFF9968936E936892A1FFFFFFA16E68936E9368CFFD0AFFA89A686E%68936E936E9368A1FD0BFF9A926E936E936E93689AA8FD0DFF99936E936E%929AFFFFFF6F936E936E936ECAFD0BFFCA9A936E92689368936E9AA8FD0B%FFCA936E936E93689AFFFFFFA068936E936E9AFD0DFFCA99926E936E936E%9368A0FD09FF9A6E6E9368936E6E6EC3FD0FFFA1689368936893A8FFA16E%68936E93689AFD0AFFA89A686E68936E9368936E6E68929AFD0BFF9A6E68%936E9368A1FFFF6E936E936892A1FD0FFFA19368936E936893689AFD07FF%A1936E936E936E9299FD11FFCA936E936F9368CAFF996E936F936E93CAFD%09FFCA9968936E936F936E936F936E936E926FFD0BFF6E936F936E9393FF%A1936E936E936FFD11FFCA9A68936E936F9368C3FD05FFA76E68936E9368%929AFD13FF9A6E6E936E6E6FA168936E936E6E9AFD09FFCA9368936E936E%936E936E936E936E936E6E6EFD0AFFA168936E936E92A09A68936E93689A%FD13FFA068936E936E9368CAFD04FF996E936E936E929AFD14FFCA6E936E%936E936E936E936E9393FD0AFF9A68936E936E936E936E936E936E936E93%6E9293FD0AFF9368936E936E936E936E936E92A1FD14FFC368936E936E93%6FFFFFFFA168936E9368929AFD15FFA893689368936E9368936E9368A1FD%09FFA168936E9368936E9368936E9368936E9368936E6E9AFD09FFA16E68%936E9368936E9368936FFD16FFA0689368936E6EA0FFFF6F936F936E9399%FD17FFA1926E936F936E936F936E99FD0AFF6F936F936E936F936E936F93%6E936F936E936F936E99FD0AFF6F936F936E936F936E9368C3FD17FF9A68%936F936E99FFA16E68936E9368CAFD17FFCF6E936E936E936E936E6EA1FD%09FFA16E6E936E936E936E936E936E936E936E936E936E9368C3FD09FFA1%68936E936E936E936893A8FD17FFA89368936E9368CAA168936E9368A0FD%19FF9A6E936E936E936E9393FD0AFF9A6E936E936E936E936E936E936E93%6E936E936E936E929AFD0AFF9968936E936E936E929AFD19FF9A926E936E%929A6F936E936893A1FD19FFA1926E9368936E9368C9FD0AFF6F936E9368%936E9368936E9368936E9368936E9368936893A8FD09FFA16E68936E9368%9368CAFD19FFCA689368936899936E936E9393FD1BFF99936E936F936E9A%FD0AFFCA936E936E936F936E936F936E936F936E936F936E936F936EFD0B%FF93936F936E936E9AFD1BFF936E936F936E68936E936893FD1BFFA16893%6E936E6EA0FD0AFFCA6E936E936E936E936E936E936E936E936E936E936E%936E93A8FD0AFFA168936E936E92A0FD1BFF6F936E936E93936E936E936E%FD1BFF93936E936E936E9AFD0AFFCF936E936E936E936E936E936E936E93%6E936E936E936E936FFD0BFF99936E936E93689AFD15FFCAA0A19AC3A193%6E936E936F6F6E68936E6EA1FD19FFA16E68936E93689368A1FD0AFF6F6E%68936E9368936E9368936E9368936E9368936E936893FD0AFFA1926E9368%936E9368CAFD12FFA193686E6892686E68936E936899A168936F9368C3FD%19FF9A68936F936E936F9393FD0AFF9A68936F936E936F936E936F936E93%6F936E936F936E939AFD0AFF9A6E936E936F936E939AFD11FF9A936E936E%936F936E936F936E939AA16E68936E9368CAFD18FF6E936E936E936E936E%6EA1FD09FFA16E6E936E936E936E936E936E936E936E936E936E9368C3FD%09FFA168936E936E936E936893A8FD0FFF9A6E68936E936E936E936E936E%9368CAFF93936E936E9393FD17FFA0936E936E936E936E936E99FD0AFF6F%936E936E936E936E936E936E936E936E936E936E93CAFD09FF93936E936E%936E936E9368C3FD0EFFA8936E936E936E936E936E936E936E99FFFFA168%9368936E6E9AFD15FFCA9368936E9368936E93689368A1FD09FFA1689368%936E9368936E9368936E9368936E93686EA0FD09FFA1926E9368936E9368%936E6E6FFD0EFF9A68936E9368936E9368936E9368929AFFFFFF996E936F%936E93A0FD14FFCA68936F936E936E936E936F936FFD0AFF9A68936F936E%936F936E936F936E936F936E9393FD0AFF996E936E936E936E936F936E93%A7FD0DFF6E936F936E936F936E936F936E936EA0FFFFFFA76E68936E9368%929AFD13FF9A6E6E936E926FA168936E936E6E9AFD09FFA89368936E936E%936E936E936E936E936E6E6EFD0AFFA168936E936E92A09A68936E93689A%FD0CFFA79268936E936E936E936E936E936E936FFD04FFA1926E936E936E%9399FD11FFCA936E936E9368C3FF996E936E936E93CAFD09FFCA9368936E%936E936E936E936E936E9393CAFD0AFF6F936E936E936FFFA1926E936E93%6EFD0CFFCA6E936E936E936E936E936E936E936E93FD05FF9A6E68936E93%68926EA1FD0FFFA168936E936893A8FFA0926E936893689AFD0AFFCA9A68%92689368936E936893686E75FD0BFF9A926E93689368A1FFFF6E6E68936E%6EA1FD0BFFA1936E9368936E9368936E9368936E6E6EFD06FF9A936E936E%936F93689ACAFD0DFF99936F936E939AFFFFFF93936E936F936ECAFD0BFF%CA9A936E936E9368936F9AA7FD0BFFA8936E936E936E99FFFFFFA068936F%93689AFD0CFF93936E936F936E936F936E936F93689AFD07FF9A9268936E%936E9368939ACAFD0AFFA89368936E9368CAFFFFFFCA68936E936E6E6FFD%0DFFCAC9A0A19AA1A1FD0EFF9968936E936892A1FFFFFFA16E68936E9368%CFFD0AFFA8936E936E936E936E936E936E936E6EA1FD08FFA1936E936E93%6E936E936E9AA8FD08FFC368936E936E99FD05FF9A6E936E936E92A1FD20%FFC968936E936E9299FD05FF93936E936E92A1FD08FFCA9A936E936E936E%936E936E936E936E9393FD0AFFA899686E68936E936893686E6FC3A8FD05%FF6F926E9368929AFD05FFA793689368936893A8FD1FFF6E936E93689368%CAFD05FFA068936893689AFD06FFA1996892689368936E9368936E936893%6E6E68CAFD0CFFC36E936E936E936F936E936E939ACAFFFFCA936E936E93%6ECAFD06FF9A926E936F9368A1FD1EFF9A936F936E9368A1FD06FFCA936E%936F936EFFFFFFA1A0939368936F936E936F936E936F936E936E9368CAFD%0EFFCA759268936E936E936E936E6E68939AA068936E936899FD08FF6E92%6E936E9368CAFD1CFFA16E68936E936893CAFD07FF6F926E936E939AA16F%6E68936E936E936E93689268936892686E68936FCAFD11FFA19A6E936E93%6E936E936E936E936E936E936E929AFD08FFC968936E936E936FFD1CFF99%6E936E936E92A1FD08FFC368936E936E9368936E936E936E936E936E9393%CAFFC99A9A9AA1A7FD15FFCA6F6E68936E9368936E9368936E9368936899%9AC9A8FD06FF9A689368936E6E9AFD1AFFA068936E9368926FFD05FFA8CA%A1A16F936E9368936E9368936E936893686E689AA1FD20FFA8A06F926E93%6F936E936F936E936F936E936E936F9AA0C9A7FFCA936E936F936E93CAFD%18FFCA6E936F936E936FCACACAA1A199996E9368936F936E936F936E936F%936E9368939ACAFD25FFA199689268936E936E936E936E936E936E926892%68926E996E936E936E936899CAFD17FF6F6E6E936E9368936F936892686E%68936E936E936E936E936E93689368926FC3CAFD29FFCA9A996E936E936E%936E936E936E936E936E936E936E936E936E936E936E93939A93FD049AA1%9AA19AA19AA19AA1FD049A93996E936E936E936E936E936E936E936E936E%936E936E936E936E936E936FC3CAFD2FFFCA6E9368936E9368936E936893%6E9368936E9368936E9368936E936893686E6892686E6892686E6892686E%6892686E6893686E68936E9368936E9368936E9368936E9368936E936893%6E936893A1FD32FFCA936E936F936E936E926E936E936E936F936E936F93%6E936F936E936F936E936F936E936F936E936F936E936F936E936F936E93%6F936E936F936E936F936E936E936E9368936E936F936E936FFD33FFC968%936E93689AA8CA9A9A6E93686E68936E9368936E936E936E936E936E936E%936E936E936E936E936E936E936E936E936E936E936E936E936E93689368%6E68926E936FA1A1CF9A926E936892A1FD32FF9A936E936E93A1FD05FFA8%CAA09A6F936E9368936E936E936E936E936E936E936E936E936E936E936E%936E936E936E936E936E936E9268936E936E9A9AA1A1CAFD05FFC368936E%9368C3FD32FF9A68936E9368CAFD0AFFA8CAA1A19A9A6F6E68936E936893%6E6E686E686E6892686E686E686868936E9368936E93689A9AA0A0CAA8FF%CAFD09FFA76E68936E6E6FFD32FF6F936F936E99FD12FF9A936F936E936E%93A0C9A1C39AC39AA19AC3A1C3A1C36F936E936F93689AFD12FF6F936F93%6E99FD31FFCA9368936E6E6FFD13FF6F936E936E93689AFD0CFF9A936E93%6E936893A8FD12FF9968936E936EFD31FFCA6E936E936EA0FD13FFCA6893%6E936E9368A1FD0AFFA0926E936E936E93CAFD13FF9A926E936E93A8FD30%FFA1926E93686EA0FD14FFA168936E93689368A7FD08FFA192689368936E%6E9AFD14FFA16893689368A1FD30FFC368936E936ECAFD15FFA068936E93%6F936ECFFD06FFCA936E936E936F929AFD15FFA1936E936F92A1FD30FF9A%926E936893A7FD15FFCA9968936E936E6E6EFD05FFCA9368936E936E926F%FD16FFCA68936E9368A1FD30FFA068936E936EFD17FFCA936E936E936E92%6FFD04FF9A6E936E936E936EFD17FFA8936E936E939AFD30FF996E689368%93A8FD17FFA192689368936E6E6FFFFF9A68936E93689368CAFD17FFCF6E%936E93689AFD30FF9A68936F936FFD19FFA1936E936F936E939AA168936F%936E936EC9FD19FF996E936E939AFD30FF996E6E936E93CAFD19FF9A6E68%936E936E9368936E936E9368A1FD1AFF6E936E93689AFD30FF9A6E936E93%6FFD1BFF9A926E936E936E936E936E9368A0FD1BFF936E936E939AFD30FF%75926E936893CAFD1BFF996E68936E9368936E93689AFD1CFF6E6E689368%9AFD30FF9A6E936E9393FD1DFF9A936F936E936F936EA0FD1DFF936E936F%939AFD30FF9A926E936893CAFD1CFF9A68936E936E936E6E9AFD1DFF6E93%6E93689AFD30FFA168936E936ECAFD1BFFA06E936E936E936E936E929AFD%1BFFA8936E936E93A0FD30FFA06E68936E6EA1FD19FFCA9A68936E936893%6E9368936E6E6FFD1AFFC968936E9368A1FD30FFCA6E936F9368C3FD18FF%CA9968936F936E936E936E936F936E9393FD19FFA0936F936E93A1FD30FF%A89368936E6E6FFD17FFA19368936E936E93689A996E68936E936E926ECA%FD17FF9A68936E9368CAFD31FF93936E936E93CAFD0DFFA7C3A1CAFD04FF%A09368936E936E9368A0FFFF9A926E936E936E936EA1FD16FF6F936E936E%99FD32FF9A6893689368A1FD0BFFA16E92686E6893A1CA6F92689368936E%6E68A1FD04FF9A6E68936E9368936899A8FD13FF9A926E9368929AFD32FF%A1936E936F936FFD0AFFC368936E936E936E936E936F936E936F936ECAFD%06FFA1936E936E936F936893A1FD12FF996E936E936ECAFD33FF6F926E93%6E6E9AFD08FFCA68936E936E936E936E936E936E9368926FCAFD08FFA793%68936E936E9368926FCAFD0FFF9A68936E936893CAFD33FFA168936E936E%93A1FD07FF99936E936E936E936E936E936E936E9299FD0BFFCA9A68936E%936E936E936E9AA8FD0CFFC36E936E936E929AFD34FFA89368936893686E%9AFD05FFCA9368936E9368936E9368936E936893A0FD0EFFA1686E68936E%936893686E6FC9CAFD07FFCA9A68936E9368936ECAFD35FFA1926E936F93%6E9393A1A1CACAC36E936F936E936F936E936F93689ACAFD10FFCA93936E%936E936F936E936E939AC3A1CAA8CA9A9368936F936E9368C3FD37FF6F6E%6E936E936E93686E689368936E936E936E936E936E9368A0FD14FFA09368%936E936E936E936E6E68936E9368926E936E936E93689AFD39FF93926E93%6E936E936E936E936E936E936E936E936E936E93FD16FFCAA06E926E936E%936E936E936E936E936E936E936E936893CAFD3AFF6F6E68936E9368936E%9368936E9368936E9368936E6E75FD18FFCA996E68936E9368936E936893%6E9368936E936899A8FD3CFF9A936E936E936F936E936E936E936F936E93%6F936EFD1BFFA8C3939368936E936E936F936E936E936EC3FD3FFFA89A6E%6E6892686E68926E9368936E9368926ECAFD1EFFA19A6E93686E6892686E%68939ACAFD43FFA7C39AA19AA1A1CFCAC36F936F999AFD23FFA8CAA1A19A%C3A1CACAFD50FFA8FD50FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.912474 0.787625 0.619837 0.97467 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 AuuUuuU*u1 D0 O0.094789 1 0.977325 0.022492 0.823529 0 0.082353 Xa0 J 0 j 1 w 10 M []0 d0 XR1181.707 -1686.167 m1179.2998 -1683.7607 1175.3984 -1683.7607 1172.9922 -1686.167 C1170.585 -1688.5732 1170.585 -1692.4756 1172.9922 -1694.8818 C1175.3984 -1697.2891 1179.2998 -1697.2891 1181.707 -1694.8818 C1184.1133 -1692.4756 1184.1133 -1688.5732 1181.707 -1686.167 CF0 D1169.0703 -1676.1846 m1165.3418 -1676.5469 1161.7266 -1677.1572 1158.3818 -1678.0156 C1158.0537 -1676.7285 1157.7842 -1675.4678 1157.5801 -1674.2432 C1155.9199 -1664.2988 1158.9805 -1659.4004 1164.8291 -1660.6621 C1164.8467 -1661.1992 1165.0615 -1661.7305 1165.4717 -1662.1406 C1166.3291 -1662.999 1167.7207 -1662.999 1168.5781 -1662.1406 C1168.582 -1662.1377 1168.5859 -1662.1338 1168.5898 -1662.1299 C1170.0078 -1662.8994 1171.5273 -1663.9404 1173.1338 -1665.2627 c1174.0928 -1666.0527 1175.0498 -1666.916 1176 -1667.8438 C1173.584 -1670.3115 1171.248 -1673.1367 1169.0703 -1676.1846 Cf1 D1156.5537 -1702.5313 m1156.1611 -1704.1475 1155.8564 -1705.7324 1155.6504 -1707.2676 C1154.1191 -1718.6592 1158.4102 -1724.0908 1165.8115 -1721.9961 C1166.9258 -1722.958 1168.6104 -1722.9102 1169.667 -1721.8535 C1170.2109 -1721.3096 1170.4873 -1720.6006 1170.4971 -1719.8877 C1171.5283 -1719.2695 1172.5967 -1718.5371 1173.6982 -1717.6875 C1174.9248 -1716.7412 1176.1455 -1715.6855 1177.3496 -1714.5371 C1178.5527 -1715.6855 1179.7734 -1716.7412 1181 -1717.6875 C1192.9834 -1726.9346 1201.0645 -1722.2695 1199.0479 -1707.2676 C1198.8418 -1705.7324 1198.5371 -1704.1475 1198.1445 -1702.5313 C1199.7412 -1702.0625 1201.2656 -1701.5332 1202.6982 -1700.9443 C1204.166 -1700.3418 1205.4795 -1699.6992 1206.6396 -1699.0254 C1208.1504 -1699.9688 1210.166 -1699.7832 1211.4795 -1698.4688 C1212.7012 -1697.248 1212.9473 -1695.4209 1212.2188 -1693.9551 C1215.0098 -1689.1406 1211.8369 -1683.8613 1202.6982 -1680.1045 C1201.2656 -1679.5156 1199.7412 -1678.9863 1198.1445 -1678.5186 C1198.5371 -1676.9014 1198.8418 -1675.3164 1199.0479 -1673.7813 C1201.0645 -1658.7793 1192.9834 -1654.1143 1181 -1663.3613 C1179.7734 -1664.3076 1178.5527 -1665.3633 1177.3496 -1666.5117 C1176.1455 -1665.3633 1174.9248 -1664.3076 1173.6982 -1663.3613 C1172.1338 -1662.1543 1170.6348 -1661.1836 1169.2168 -1660.4424 C1169.1836 -1659.9297 1168.9707 -1659.4258 1168.5781 -1659.0342 c1167.7402 -1658.1953 1166.3926 -1658.1768 1165.5313 -1658.9766 C1158.3027 -1657.0977 1154.1387 -1662.5342 1155.6504 -1673.7813 C1155.8564 -1675.3164 1156.1611 -1676.9014 1156.5537 -1678.5186 C1154.957 -1678.9863 1153.4326 -1679.5156 1152 -1680.1045 C1138 -1685.8594 1138 -1695.1895 1152 -1700.9443 C1153.4326 -1701.5332 1154.957 -1702.0625 1156.5537 -1702.5313 Cf0 D1185.6279 -1704.8643 m1189.3564 -1704.502 1192.9717 -1703.8916 1196.3164 -1703.0332 C1196.6455 -1704.3203 1196.9141 -1705.5811 1197.1191 -1706.8057 C1199.4473 -1720.7578 1192.4834 -1724.7783 1181.5645 -1715.7861 C1180.6055 -1714.9961 1179.6484 -1714.1328 1178.6982 -1713.2051 C1181.1143 -1710.7373 1183.4502 -1707.9121 1185.6279 -1704.8643 Cf1167.5664 -1678.3613 m1165.4873 -1681.4756 1163.582 -1684.7764 1161.9248 -1688.1338 C1160.7061 -1685.3428 1159.6777 -1682.5586 1158.8896 -1679.8672 C1161.6152 -1679.2031 1164.54 -1678.7021 1167.5664 -1678.3613 Cf1157.0332 -1700.6963 m1155.7539 -1700.3379 1154.5273 -1699.9404 1153.3643 -1699.5049 C1140.1172 -1694.5449 1140.1172 -1686.5039 1153.3643 -1681.5439 C1154.5273 -1681.1094 1155.7539 -1680.7109 1157.0332 -1680.3525 C1157.9619 -1683.6787 1159.2402 -1687.1143 1160.791 -1690.5244 C1159.2402 -1693.9346 1157.9619 -1697.3701 1157.0332 -1700.6963 Cf1187.1318 -1702.6875 m1189.2109 -1699.5732 1191.1172 -1696.2725 1192.7734 -1692.915 C1193.9922 -1695.7061 1195.0205 -1698.4902 1195.8086 -1701.1816 C1193.083 -1701.8457 1190.1582 -1702.3477 1187.1318 -1702.6875 Cf1197.666 -1680.3525 m1198.9443 -1680.7109 1200.1709 -1681.1094 1201.334 -1681.5439 C1209.2627 -1684.5127 1212.4453 -1688.585 1210.8838 -1692.4395 C1209.3613 -1691.4219 1207.2842 -1691.5859 1205.9395 -1692.9297 C1204.6465 -1694.2236 1204.4463 -1696.1973 1205.3418 -1697.7012 C1204.1777 -1698.3359 1202.8418 -1698.9404 1201.334 -1699.5049 c1200.1709 -1699.9404 1198.9443 -1700.3379 1197.666 -1700.6963 C1196.7363 -1697.3701 1195.458 -1693.9346 1193.9072 -1690.5244 C1195.458 -1687.1143 1196.7363 -1683.6787 1197.666 -1680.3525 Cf1171.707 -1675.9707 m1173.5146 -1673.5195 1175.4121 -1671.2383 1177.3496 -1669.209 C1179.2861 -1671.2383 1181.1836 -1673.5195 1182.9912 -1675.9707 C1179.2549 -1675.7275 1175.4434 -1675.7275 1171.707 -1675.9707 Cf1158.3818 -1703.0332 m1161.7266 -1703.8916 1165.3418 -1704.502 1169.0703 -1704.8643 C1171.248 -1707.9121 1173.584 -1710.7373 1176 -1713.2051 C1175.0498 -1714.1328 1174.0928 -1714.9961 1173.1338 -1715.7861 C1172.0195 -1716.7031 1170.9473 -1717.4854 1169.9219 -1718.1348 C1169.8447 -1718.0342 1169.7598 -1717.9365 1169.667 -1717.8438 C1168.5605 -1716.7373 1166.7656 -1716.7373 1165.6582 -1717.8438 C1164.9697 -1718.5332 1164.709 -1719.4873 1164.877 -1720.377 C1158.998 -1721.6758 1155.916 -1716.7773 1157.5801 -1706.8057 C1157.7842 -1705.5811 1158.0537 -1704.3203 1158.3818 -1703.0332 Cf1182.9912 -1705.0781 m1181.1836 -1707.5293 1179.2861 -1709.8105 1177.3496 -1711.8398 C1175.4121 -1709.8105 1173.5146 -1707.5293 1171.707 -1705.0781 C1175.4434 -1705.3213 1179.2549 -1705.3213 1182.9912 -1705.0781 Cf1196.3164 -1678.0156 m1192.9717 -1677.1572 1189.3564 -1676.5469 1185.6279 -1676.1846 C1183.4502 -1673.1367 1181.1143 -1670.3115 1178.6982 -1667.8438 C1179.6484 -1666.916 1180.6055 -1666.0527 1181.5645 -1665.2627 C1192.4834 -1656.2705 1199.4473 -1660.291 1197.1191 -1674.2432 C1196.9141 -1675.4678 1196.6455 -1676.7285 1196.3164 -1678.0156 Cf1170.1816 -1678.1094 m1174.9014 -1677.7295 1179.7969 -1677.7295 1184.5166 -1678.1094 C1187.2061 -1682.0078 1189.6533 -1686.2461 1191.6846 -1690.5244 C1189.6533 -1694.8027 1187.2061 -1699.041 1184.5166 -1702.9395 C1179.7969 -1703.3193 1174.9014 -1703.3193 1170.1816 -1702.9395 C1167.4922 -1699.041 1165.0449 -1694.8027 1163.0137 -1690.5244 C1165.0449 -1686.2461 1167.4922 -1682.0078 1170.1816 -1678.1094 Cf1158.8896 -1701.1816 m1159.6777 -1698.4902 1160.7061 -1695.7061 1161.9248 -1692.915 C1163.582 -1696.2725 1165.4873 -1699.5732 1167.5664 -1702.6875 C1164.54 -1702.3477 1161.6152 -1701.8457 1158.8896 -1701.1816 Cf1195.8086 -1679.8672 m1195.0205 -1682.5586 1193.9922 -1685.3428 1192.7734 -1688.1338 C1191.1172 -1684.7764 1189.2109 -1681.4756 1187.1318 -1678.3613 C1190.1582 -1678.7021 1193.083 -1679.2031 1195.8086 -1679.8672 Cf*U*u1 D0 R0.094789 1 0.977325 0.022492 0.823529 0 0.082353 XA1 J 1 j 1.5 w 4 M1181.707 -1686.167 m1179.2998 -1683.7607 1175.3984 -1683.7607 1172.9922 -1686.167 C1170.585 -1688.5732 1170.585 -1692.4756 1172.9922 -1694.8818 C1175.3984 -1697.2891 1179.2998 -1697.2891 1181.707 -1694.8818 C1184.1133 -1692.4756 1184.1133 -1688.5732 1181.707 -1686.167 CS0 D1169.0703 -1676.1846 m1165.3418 -1676.5469 1161.7266 -1677.1572 1158.3818 -1678.0156 C1158.0537 -1676.7285 1157.7842 -1675.4678 1157.5801 -1674.2432 C1155.9199 -1664.2988 1158.9805 -1659.4004 1164.8291 -1660.6621 C1164.8467 -1661.1992 1165.0615 -1661.7305 1165.4717 -1662.1406 C1166.3291 -1662.999 1167.7207 -1662.999 1168.5781 -1662.1406 C1168.582 -1662.1377 1168.5859 -1662.1338 1168.5898 -1662.1299 C1170.0078 -1662.8994 1171.5273 -1663.9404 1173.1338 -1665.2627 c1174.0928 -1666.0527 1175.0498 -1666.916 1176 -1667.8438 C1173.584 -1670.3115 1171.248 -1673.1367 1169.0703 -1676.1846 Cs1 D1156.5537 -1702.5313 m1156.1611 -1704.1475 1155.8564 -1705.7324 1155.6504 -1707.2676 C1154.1191 -1718.6592 1158.4102 -1724.0908 1165.8115 -1721.9961 C1166.9258 -1722.958 1168.6104 -1722.9102 1169.667 -1721.8535 C1170.2109 -1721.3096 1170.4873 -1720.6006 1170.4971 -1719.8877 C1171.5283 -1719.2695 1172.5967 -1718.5371 1173.6982 -1717.6875 C1174.9248 -1716.7412 1176.1455 -1715.6855 1177.3496 -1714.5371 C1178.5527 -1715.6855 1179.7734 -1716.7412 1181 -1717.6875 C1192.9834 -1726.9346 1201.0645 -1722.2695 1199.0479 -1707.2676 C1198.8418 -1705.7324 1198.5371 -1704.1475 1198.1445 -1702.5313 C1199.7412 -1702.0625 1201.2656 -1701.5332 1202.6982 -1700.9443 C1204.166 -1700.3418 1205.4795 -1699.6992 1206.6396 -1699.0254 C1208.1504 -1699.9688 1210.166 -1699.7832 1211.4795 -1698.4688 C1212.7012 -1697.248 1212.9473 -1695.4209 1212.2188 -1693.9551 C1215.0098 -1689.1406 1211.8369 -1683.8613 1202.6982 -1680.1045 C1201.2656 -1679.5156 1199.7412 -1678.9863 1198.1445 -1678.5186 C1198.5371 -1676.9014 1198.8418 -1675.3164 1199.0479 -1673.7813 C1201.0645 -1658.7793 1192.9834 -1654.1143 1181 -1663.3613 C1179.7734 -1664.3076 1178.5527 -1665.3633 1177.3496 -1666.5117 C1176.1455 -1665.3633 1174.9248 -1664.3076 1173.6982 -1663.3613 C1172.1338 -1662.1543 1170.6348 -1661.1836 1169.2168 -1660.4424 C1169.1836 -1659.9297 1168.9707 -1659.4258 1168.5781 -1659.0342 c1167.7402 -1658.1953 1166.3926 -1658.1768 1165.5313 -1658.9766 C1158.3027 -1657.0977 1154.1387 -1662.5342 1155.6504 -1673.7813 C1155.8564 -1675.3164 1156.1611 -1676.9014 1156.5537 -1678.5186 C1154.957 -1678.9863 1153.4326 -1679.5156 1152 -1680.1045 C1138 -1685.8594 1138 -1695.1895 1152 -1700.9443 C1153.4326 -1701.5332 1154.957 -1702.0625 1156.5537 -1702.5313 Cs0 D1185.6279 -1704.8643 m1189.3564 -1704.502 1192.9717 -1703.8916 1196.3164 -1703.0332 C1196.6455 -1704.3203 1196.9141 -1705.5811 1197.1191 -1706.8057 C1199.4473 -1720.7578 1192.4834 -1724.7783 1181.5645 -1715.7861 C1180.6055 -1714.9961 1179.6484 -1714.1328 1178.6982 -1713.2051 C1181.1143 -1710.7373 1183.4502 -1707.9121 1185.6279 -1704.8643 Cs1167.5664 -1678.3613 m1165.4873 -1681.4756 1163.582 -1684.7764 1161.9248 -1688.1338 C1160.7061 -1685.3428 1159.6777 -1682.5586 1158.8896 -1679.8672 C1161.6152 -1679.2031 1164.54 -1678.7021 1167.5664 -1678.3613 Cs1157.0332 -1700.6963 m1155.7539 -1700.3379 1154.5273 -1699.9404 1153.3643 -1699.5049 C1140.1172 -1694.5449 1140.1172 -1686.5039 1153.3643 -1681.5439 C1154.5273 -1681.1094 1155.7539 -1680.7109 1157.0332 -1680.3525 C1157.9619 -1683.6787 1159.2402 -1687.1143 1160.791 -1690.5244 C1159.2402 -1693.9346 1157.9619 -1697.3701 1157.0332 -1700.6963 Cs1187.1318 -1702.6875 m1189.2109 -1699.5732 1191.1172 -1696.2725 1192.7734 -1692.915 C1193.9922 -1695.7061 1195.0205 -1698.4902 1195.8086 -1701.1816 C1193.083 -1701.8457 1190.1582 -1702.3477 1187.1318 -1702.6875 Cs1197.666 -1680.3525 m1198.9443 -1680.7109 1200.1709 -1681.1094 1201.334 -1681.5439 C1209.2627 -1684.5127 1212.4453 -1688.585 1210.8838 -1692.4395 C1209.3613 -1691.4219 1207.2842 -1691.5859 1205.9395 -1692.9297 C1204.6465 -1694.2236 1204.4463 -1696.1973 1205.3418 -1697.7012 C1204.1777 -1698.3359 1202.8418 -1698.9404 1201.334 -1699.5049 c1200.1709 -1699.9404 1198.9443 -1700.3379 1197.666 -1700.6963 C1196.7363 -1697.3701 1195.458 -1693.9346 1193.9072 -1690.5244 C1195.458 -1687.1143 1196.7363 -1683.6787 1197.666 -1680.3525 Cs1171.707 -1675.9707 m1173.5146 -1673.5195 1175.4121 -1671.2383 1177.3496 -1669.209 C1179.2861 -1671.2383 1181.1836 -1673.5195 1182.9912 -1675.9707 C1179.2549 -1675.7275 1175.4434 -1675.7275 1171.707 -1675.9707 Cs1158.3818 -1703.0332 m1161.7266 -1703.8916 1165.3418 -1704.502 1169.0703 -1704.8643 C1171.248 -1707.9121 1173.584 -1710.7373 1176 -1713.2051 C1175.0498 -1714.1328 1174.0928 -1714.9961 1173.1338 -1715.7861 C1172.0195 -1716.7031 1170.9473 -1717.4854 1169.9219 -1718.1348 C1169.8447 -1718.0342 1169.7598 -1717.9365 1169.667 -1717.8438 C1168.5605 -1716.7373 1166.7656 -1716.7373 1165.6582 -1717.8438 C1164.9697 -1718.5332 1164.709 -1719.4873 1164.877 -1720.377 C1158.998 -1721.6758 1155.916 -1716.7773 1157.5801 -1706.8057 C1157.7842 -1705.5811 1158.0537 -1704.3203 1158.3818 -1703.0332 Cs1182.9912 -1705.0781 m1181.1836 -1707.5293 1179.2861 -1709.8105 1177.3496 -1711.8398 C1175.4121 -1709.8105 1173.5146 -1707.5293 1171.707 -1705.0781 C1175.4434 -1705.3213 1179.2549 -1705.3213 1182.9912 -1705.0781 Cs1196.3164 -1678.0156 m1192.9717 -1677.1572 1189.3564 -1676.5469 1185.6279 -1676.1846 C1183.4502 -1673.1367 1181.1143 -1670.3115 1178.6982 -1667.8438 C1179.6484 -1666.916 1180.6055 -1666.0527 1181.5645 -1665.2627 C1192.4834 -1656.2705 1199.4473 -1660.291 1197.1191 -1674.2432 C1196.9141 -1675.4678 1196.6455 -1676.7285 1196.3164 -1678.0156 Cs1170.1816 -1678.1094 m1174.9014 -1677.7295 1179.7969 -1677.7295 1184.5166 -1678.1094 C1187.2061 -1682.0078 1189.6533 -1686.2461 1191.6846 -1690.5244 C1189.6533 -1694.8027 1187.2061 -1699.041 1184.5166 -1702.9395 C1179.7969 -1703.3193 1174.9014 -1703.3193 1170.1816 -1702.9395 C1167.4922 -1699.041 1165.0449 -1694.8027 1163.0137 -1690.5244 C1165.0449 -1686.2461 1167.4922 -1682.0078 1170.1816 -1678.1094 Cs1158.8896 -1701.1816 m1159.6777 -1698.4902 1160.7061 -1695.7061 1161.9248 -1692.915 C1163.582 -1696.2725 1165.4873 -1699.5732 1167.5664 -1702.6875 C1164.54 -1702.3477 1161.6152 -1701.8457 1158.8896 -1701.1816 Cs1195.8086 -1679.8672 m1195.0205 -1682.5586 1193.9922 -1685.3428 1192.7734 -1688.1338 C1191.1172 -1684.7764 1189.2109 -1681.4756 1187.1318 -1678.3613 C1190.1582 -1678.7021 1193.083 -1679.2031 1195.8086 -1679.8672 Cs*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF