/*******************************************************************************
 * Copyright 2011 Kim Herzig, Sascha Just
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *****************************************************************************/
package de.unisaarland.cs.st.moskito.mapping.elements;

import net.ownhero.dev.ioda.Tuple;
import de.unisaarland.cs.st.moskito.mapping.finder.MappingFinder;
import de.unisaarland.cs.st.moskito.mapping.mappable.model.MappableEntity;

/**
 * This class represents a potential mapping pair and thus encapsulates to
 * {@link MappableEntity}s. {@link Candidate}s are generated by the
 * {@link MappingFinder} class using
 * {@link MappingFinder#getCandidates(MappableEntity, Class)}.
 * 
 * @author Sascha Just <sascha.just@st.cs.uni-saarland.de>
 * 
 */
public class Candidate {
	
	/**
	 * the entity under subject
	 */
	MappableEntity from;
	
	/**
	 * a potential target
	 */
	MappableEntity to;
	
	/**
	 * @param candidatePair
	 *            a {@link Tuple} representing the pair (from/to)
	 */
	public Candidate(final Tuple<? extends MappableEntity, ? extends MappableEntity> candidatePair) {
		this.from = candidatePair.getFirst();
		this.to = candidatePair.getSecond();
	}
	
	/**
	 * @return the from entity
	 */
	public final MappableEntity getFrom() {
		return this.from;
	}
	
	/**
	 * @return the to entity
	 */
	public final MappableEntity getTo() {
		return this.to;
	}
	
	/*
	 * (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Candidate [from=" + from + ", to=" + to + "]";
	}
}
